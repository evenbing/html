/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _vue = __webpack_require__(1);

	var _vue2 = _interopRequireDefault(_vue);

	var _shop_diy_index = __webpack_require__(3);

	var _shop_diy_index2 = _interopRequireDefault(_shop_diy_index);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Created by Neo on 2017/6/15.
	 */

	var app = new _vue2.default({
	    el: '#application',
	    component: {
	        shop_diy_index: _shop_diy_index2.default
	    },
	    render: function render(h) {
	        return h(_shop_diy_index2.default);
	    }
	});

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process, global) {/*!
	 * Vue.js v2.3.4
	 * (c) 2014-2017 Evan You
	 * Released under the MIT License.
	 */
	'use strict';

	/*  */

	// these helpers produces better vm code in JS engines due to their
	// explicitness and function inlining

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	function isUndef(v) {
	  return v === undefined || v === null;
	}

	function isDef(v) {
	  return v !== undefined && v !== null;
	}

	function isTrue(v) {
	  return v === true;
	}

	function isFalse(v) {
	  return v === false;
	}
	/**
	 * Check if value is primitive
	 */
	function isPrimitive(value) {
	  return typeof value === 'string' || typeof value === 'number';
	}

	/**
	 * Quick object check - this is primarily used to tell
	 * Objects from primitive values when we know the value
	 * is a JSON-compliant type.
	 */
	function isObject(obj) {
	  return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';
	}

	var _toString = Object.prototype.toString;

	/**
	 * Strict object type check. Only returns true
	 * for plain JavaScript objects.
	 */
	function isPlainObject(obj) {
	  return _toString.call(obj) === '[object Object]';
	}

	function isRegExp(v) {
	  return _toString.call(v) === '[object RegExp]';
	}

	/**
	 * Convert a value to a string that is actually rendered.
	 */
	function toString(val) {
	  return val == null ? '' : (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' ? JSON.stringify(val, null, 2) : String(val);
	}

	/**
	 * Convert a input value to a number for persistence.
	 * If the conversion fails, return original string.
	 */
	function toNumber(val) {
	  var n = parseFloat(val);
	  return isNaN(n) ? val : n;
	}

	/**
	 * Make a map and return a function for checking if a key
	 * is in that map.
	 */
	function makeMap(str, expectsLowerCase) {
	  var map = Object.create(null);
	  var list = str.split(',');
	  for (var i = 0; i < list.length; i++) {
	    map[list[i]] = true;
	  }
	  return expectsLowerCase ? function (val) {
	    return map[val.toLowerCase()];
	  } : function (val) {
	    return map[val];
	  };
	}

	/**
	 * Check if a tag is a built-in tag.
	 */
	var isBuiltInTag = makeMap('slot,component', true);

	/**
	 * Remove an item from an array
	 */
	function remove(arr, item) {
	  if (arr.length) {
	    var index = arr.indexOf(item);
	    if (index > -1) {
	      return arr.splice(index, 1);
	    }
	  }
	}

	/**
	 * Check whether the object has the property.
	 */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	function hasOwn(obj, key) {
	  return hasOwnProperty.call(obj, key);
	}

	/**
	 * Create a cached version of a pure function.
	 */
	function cached(fn) {
	  var cache = Object.create(null);
	  return function cachedFn(str) {
	    var hit = cache[str];
	    return hit || (cache[str] = fn(str));
	  };
	}

	/**
	 * Camelize a hyphen-delimited string.
	 */
	var camelizeRE = /-(\w)/g;
	var camelize = cached(function (str) {
	  return str.replace(camelizeRE, function (_, c) {
	    return c ? c.toUpperCase() : '';
	  });
	});

	/**
	 * Capitalize a string.
	 */
	var capitalize = cached(function (str) {
	  return str.charAt(0).toUpperCase() + str.slice(1);
	});

	/**
	 * Hyphenate a camelCase string.
	 */
	var hyphenateRE = /([^-])([A-Z])/g;
	var hyphenate = cached(function (str) {
	  return str.replace(hyphenateRE, '$1-$2').replace(hyphenateRE, '$1-$2').toLowerCase();
	});

	/**
	 * Simple bind, faster than native
	 */
	function bind(fn, ctx) {
	  function boundFn(a) {
	    var l = arguments.length;
	    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);
	  }
	  // record original fn length
	  boundFn._length = fn.length;
	  return boundFn;
	}

	/**
	 * Convert an Array-like object to a real Array.
	 */
	function toArray(list, start) {
	  start = start || 0;
	  var i = list.length - start;
	  var ret = new Array(i);
	  while (i--) {
	    ret[i] = list[i + start];
	  }
	  return ret;
	}

	/**
	 * Mix properties into target object.
	 */
	function extend(to, _from) {
	  for (var key in _from) {
	    to[key] = _from[key];
	  }
	  return to;
	}

	/**
	 * Merge an Array of Objects into a single Object.
	 */
	function toObject(arr) {
	  var res = {};
	  for (var i = 0; i < arr.length; i++) {
	    if (arr[i]) {
	      extend(res, arr[i]);
	    }
	  }
	  return res;
	}

	/**
	 * Perform no operation.
	 */
	function noop() {}

	/**
	 * Always return false.
	 */
	var no = function no() {
	  return false;
	};

	/**
	 * Return same value
	 */
	var identity = function identity(_) {
	  return _;
	};

	/**
	 * Generate a static keys string from compiler modules.
	 */
	function genStaticKeys(modules) {
	  return modules.reduce(function (keys, m) {
	    return keys.concat(m.staticKeys || []);
	  }, []).join(',');
	}

	/**
	 * Check if two values are loosely equal - that is,
	 * if they are plain objects, do they have the same shape?
	 */
	function looseEqual(a, b) {
	  var isObjectA = isObject(a);
	  var isObjectB = isObject(b);
	  if (isObjectA && isObjectB) {
	    try {
	      return JSON.stringify(a) === JSON.stringify(b);
	    } catch (e) {
	      // possible circular reference
	      return a === b;
	    }
	  } else if (!isObjectA && !isObjectB) {
	    return String(a) === String(b);
	  } else {
	    return false;
	  }
	}

	function looseIndexOf(arr, val) {
	  for (var i = 0; i < arr.length; i++) {
	    if (looseEqual(arr[i], val)) {
	      return i;
	    }
	  }
	  return -1;
	}

	/**
	 * Ensure a function is called only once.
	 */
	function once(fn) {
	  var called = false;
	  return function () {
	    if (!called) {
	      called = true;
	      fn.apply(this, arguments);
	    }
	  };
	}

	var SSR_ATTR = 'data-server-rendered';

	var ASSET_TYPES = ['component', 'directive', 'filter'];

	var LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated'];

	/*  */

	var config = {
	  /**
	   * Option merge strategies (used in core/util/options)
	   */
	  optionMergeStrategies: Object.create(null),

	  /**
	   * Whether to suppress warnings.
	   */
	  silent: false,

	  /**
	   * Show production mode tip message on boot?
	   */
	  productionTip: process.env.NODE_ENV !== 'production',

	  /**
	   * Whether to enable devtools
	   */
	  devtools: process.env.NODE_ENV !== 'production',

	  /**
	   * Whether to record perf
	   */
	  performance: false,

	  /**
	   * Error handler for watcher errors
	   */
	  errorHandler: null,

	  /**
	   * Ignore certain custom elements
	   */
	  ignoredElements: [],

	  /**
	   * Custom user key aliases for v-on
	   */
	  keyCodes: Object.create(null),

	  /**
	   * Check if a tag is reserved so that it cannot be registered as a
	   * component. This is platform-dependent and may be overwritten.
	   */
	  isReservedTag: no,

	  /**
	   * Check if an attribute is reserved so that it cannot be used as a component
	   * prop. This is platform-dependent and may be overwritten.
	   */
	  isReservedAttr: no,

	  /**
	   * Check if a tag is an unknown element.
	   * Platform-dependent.
	   */
	  isUnknownElement: no,

	  /**
	   * Get the namespace of an element
	   */
	  getTagNamespace: noop,

	  /**
	   * Parse the real tag name for the specific platform.
	   */
	  parsePlatformTagName: identity,

	  /**
	   * Check if an attribute must be bound using property, e.g. value
	   * Platform-dependent.
	   */
	  mustUseProp: no,

	  /**
	   * Exposed for legacy reasons
	   */
	  _lifecycleHooks: LIFECYCLE_HOOKS
	};

	/*  */

	var emptyObject = Object.freeze({});

	/**
	 * Check if a string starts with $ or _
	 */
	function isReserved(str) {
	  var c = (str + '').charCodeAt(0);
	  return c === 0x24 || c === 0x5F;
	}

	/**
	 * Define a property.
	 */
	function def(obj, key, val, enumerable) {
	  Object.defineProperty(obj, key, {
	    value: val,
	    enumerable: !!enumerable,
	    writable: true,
	    configurable: true
	  });
	}

	/**
	 * Parse simple path.
	 */
	var bailRE = /[^\w.$]/;
	function parsePath(path) {
	  if (bailRE.test(path)) {
	    return;
	  }
	  var segments = path.split('.');
	  return function (obj) {
	    for (var i = 0; i < segments.length; i++) {
	      if (!obj) {
	        return;
	      }
	      obj = obj[segments[i]];
	    }
	    return obj;
	  };
	}

	/*  */

	var warn = noop;
	var tip = noop;
	var formatComponentName = null; // work around flow check

	if (process.env.NODE_ENV !== 'production') {
	  var hasConsole = typeof console !== 'undefined';
	  var classifyRE = /(?:^|[-_])(\w)/g;
	  var classify = function classify(str) {
	    return str.replace(classifyRE, function (c) {
	      return c.toUpperCase();
	    }).replace(/[-_]/g, '');
	  };

	  warn = function warn(msg, vm) {
	    if (hasConsole && !config.silent) {
	      console.error("[Vue warn]: " + msg + (vm ? generateComponentTrace(vm) : ''));
	    }
	  };

	  tip = function tip(msg, vm) {
	    if (hasConsole && !config.silent) {
	      console.warn("[Vue tip]: " + msg + (vm ? generateComponentTrace(vm) : ''));
	    }
	  };

	  formatComponentName = function formatComponentName(vm, includeFile) {
	    if (vm.$root === vm) {
	      return '<Root>';
	    }
	    var name = typeof vm === 'string' ? vm : typeof vm === 'function' && vm.options ? vm.options.name : vm._isVue ? vm.$options.name || vm.$options._componentTag : vm.name;

	    var file = vm._isVue && vm.$options.__file;
	    if (!name && file) {
	      var match = file.match(/([^/\\]+)\.vue$/);
	      name = match && match[1];
	    }

	    return (name ? "<" + classify(name) + ">" : "<Anonymous>") + (file && includeFile !== false ? " at " + file : '');
	  };

	  var repeat = function repeat(str, n) {
	    var res = '';
	    while (n) {
	      if (n % 2 === 1) {
	        res += str;
	      }
	      if (n > 1) {
	        str += str;
	      }
	      n >>= 1;
	    }
	    return res;
	  };

	  var generateComponentTrace = function generateComponentTrace(vm) {
	    if (vm._isVue && vm.$parent) {
	      var tree = [];
	      var currentRecursiveSequence = 0;
	      while (vm) {
	        if (tree.length > 0) {
	          var last = tree[tree.length - 1];
	          if (last.constructor === vm.constructor) {
	            currentRecursiveSequence++;
	            vm = vm.$parent;
	            continue;
	          } else if (currentRecursiveSequence > 0) {
	            tree[tree.length - 1] = [last, currentRecursiveSequence];
	            currentRecursiveSequence = 0;
	          }
	        }
	        tree.push(vm);
	        vm = vm.$parent;
	      }
	      return '\n\nfound in\n\n' + tree.map(function (vm, i) {
	        return "" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + "... (" + vm[1] + " recursive calls)" : formatComponentName(vm));
	      }).join('\n');
	    } else {
	      return "\n\n(found in " + formatComponentName(vm) + ")";
	    }
	  };
	}

	/*  */

	function handleError(err, vm, info) {
	  if (config.errorHandler) {
	    config.errorHandler.call(null, err, vm, info);
	  } else {
	    if (process.env.NODE_ENV !== 'production') {
	      warn("Error in " + info + ": \"" + err.toString() + "\"", vm);
	    }
	    /* istanbul ignore else */
	    if (inBrowser && typeof console !== 'undefined') {
	      console.error(err);
	    } else {
	      throw err;
	    }
	  }
	}

	/*  */
	/* globals MutationObserver */

	// can we use __proto__?
	var hasProto = '__proto__' in {};

	// Browser environment sniffing
	var inBrowser = typeof window !== 'undefined';
	var UA = inBrowser && window.navigator.userAgent.toLowerCase();
	var isIE = UA && /msie|trident/.test(UA);
	var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
	var isEdge = UA && UA.indexOf('edge/') > 0;
	var isAndroid = UA && UA.indexOf('android') > 0;
	var isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);
	var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

	var supportsPassive = false;
	if (inBrowser) {
	  try {
	    var opts = {};
	    Object.defineProperty(opts, 'passive', {
	      get: function get() {
	        /* istanbul ignore next */
	        supportsPassive = true;
	      }
	    }); // https://github.com/facebook/flow/issues/285
	    window.addEventListener('test-passive', null, opts);
	  } catch (e) {}
	}

	// this needs to be lazy-evaled because vue may be required before
	// vue-server-renderer can set VUE_ENV
	var _isServer;
	var isServerRendering = function isServerRendering() {
	  if (_isServer === undefined) {
	    /* istanbul ignore if */
	    if (!inBrowser && typeof global !== 'undefined') {
	      // detect presence of vue-server-renderer and avoid
	      // Webpack shimming the process
	      _isServer = global['process'].env.VUE_ENV === 'server';
	    } else {
	      _isServer = false;
	    }
	  }
	  return _isServer;
	};

	// detect devtools
	var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

	/* istanbul ignore next */
	function isNative(Ctor) {
	  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());
	}

	var hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

	/**
	 * Defer a task to execute it asynchronously.
	 */
	var nextTick = function () {
	  var callbacks = [];
	  var pending = false;
	  var timerFunc;

	  function nextTickHandler() {
	    pending = false;
	    var copies = callbacks.slice(0);
	    callbacks.length = 0;
	    for (var i = 0; i < copies.length; i++) {
	      copies[i]();
	    }
	  }

	  // the nextTick behavior leverages the microtask queue, which can be accessed
	  // via either native Promise.then or MutationObserver.
	  // MutationObserver has wider support, however it is seriously bugged in
	  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
	  // completely stops working after triggering a few times... so, if native
	  // Promise is available, we will use it:
	  /* istanbul ignore if */
	  if (typeof Promise !== 'undefined' && isNative(Promise)) {
	    var p = Promise.resolve();
	    var logError = function logError(err) {
	      console.error(err);
	    };
	    timerFunc = function timerFunc() {
	      p.then(nextTickHandler).catch(logError);
	      // in problematic UIWebViews, Promise.then doesn't completely break, but
	      // it can get stuck in a weird state where callbacks are pushed into the
	      // microtask queue but the queue isn't being flushed, until the browser
	      // needs to do some other work, e.g. handle a timer. Therefore we can
	      // "force" the microtask queue to be flushed by adding an empty timer.
	      if (isIOS) {
	        setTimeout(noop);
	      }
	    };
	  } else if (typeof MutationObserver !== 'undefined' && (isNative(MutationObserver) ||
	  // PhantomJS and iOS 7.x
	  MutationObserver.toString() === '[object MutationObserverConstructor]')) {
	    // use MutationObserver where native Promise is not available,
	    // e.g. PhantomJS IE11, iOS7, Android 4.4
	    var counter = 1;
	    var observer = new MutationObserver(nextTickHandler);
	    var textNode = document.createTextNode(String(counter));
	    observer.observe(textNode, {
	      characterData: true
	    });
	    timerFunc = function timerFunc() {
	      counter = (counter + 1) % 2;
	      textNode.data = String(counter);
	    };
	  } else {
	    // fallback to setTimeout
	    /* istanbul ignore next */
	    timerFunc = function timerFunc() {
	      setTimeout(nextTickHandler, 0);
	    };
	  }

	  return function queueNextTick(cb, ctx) {
	    var _resolve;
	    callbacks.push(function () {
	      if (cb) {
	        try {
	          cb.call(ctx);
	        } catch (e) {
	          handleError(e, ctx, 'nextTick');
	        }
	      } else if (_resolve) {
	        _resolve(ctx);
	      }
	    });
	    if (!pending) {
	      pending = true;
	      timerFunc();
	    }
	    if (!cb && typeof Promise !== 'undefined') {
	      return new Promise(function (resolve, reject) {
	        _resolve = resolve;
	      });
	    }
	  };
	}();

	var _Set;
	/* istanbul ignore if */
	if (typeof Set !== 'undefined' && isNative(Set)) {
	  // use native Set when available.
	  _Set = Set;
	} else {
	  // a non-standard Set polyfill that only works with primitive keys.
	  _Set = function () {
	    function Set() {
	      this.set = Object.create(null);
	    }
	    Set.prototype.has = function has(key) {
	      return this.set[key] === true;
	    };
	    Set.prototype.add = function add(key) {
	      this.set[key] = true;
	    };
	    Set.prototype.clear = function clear() {
	      this.set = Object.create(null);
	    };

	    return Set;
	  }();
	}

	/*  */

	var uid = 0;

	/**
	 * A dep is an observable that can have multiple
	 * directives subscribing to it.
	 */
	var Dep = function Dep() {
	  this.id = uid++;
	  this.subs = [];
	};

	Dep.prototype.addSub = function addSub(sub) {
	  this.subs.push(sub);
	};

	Dep.prototype.removeSub = function removeSub(sub) {
	  remove(this.subs, sub);
	};

	Dep.prototype.depend = function depend() {
	  if (Dep.target) {
	    Dep.target.addDep(this);
	  }
	};

	Dep.prototype.notify = function notify() {
	  // stabilize the subscriber list first
	  var subs = this.subs.slice();
	  for (var i = 0, l = subs.length; i < l; i++) {
	    subs[i].update();
	  }
	};

	// the current target watcher being evaluated.
	// this is globally unique because there could be only one
	// watcher being evaluated at any time.
	Dep.target = null;
	var targetStack = [];

	function pushTarget(_target) {
	  if (Dep.target) {
	    targetStack.push(Dep.target);
	  }
	  Dep.target = _target;
	}

	function popTarget() {
	  Dep.target = targetStack.pop();
	}

	/*
	 * not type checking this file because flow doesn't play well with
	 * dynamically accessing methods on Array prototype
	 */

	var arrayProto = Array.prototype;
	var arrayMethods = Object.create(arrayProto);['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {
	  // cache original method
	  var original = arrayProto[method];
	  def(arrayMethods, method, function mutator() {
	    var arguments$1 = arguments;

	    // avoid leaking arguments:
	    // http://jsperf.com/closure-with-arguments
	    var i = arguments.length;
	    var args = new Array(i);
	    while (i--) {
	      args[i] = arguments$1[i];
	    }
	    var result = original.apply(this, args);
	    var ob = this.__ob__;
	    var inserted;
	    switch (method) {
	      case 'push':
	        inserted = args;
	        break;
	      case 'unshift':
	        inserted = args;
	        break;
	      case 'splice':
	        inserted = args.slice(2);
	        break;
	    }
	    if (inserted) {
	      ob.observeArray(inserted);
	    }
	    // notify change
	    ob.dep.notify();
	    return result;
	  });
	});

	/*  */

	var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

	/**
	 * By default, when a reactive property is set, the new value is
	 * also converted to become reactive. However when passing down props,
	 * we don't want to force conversion because the value may be a nested value
	 * under a frozen data structure. Converting it would defeat the optimization.
	 */
	var observerState = {
	  shouldConvert: true,
	  isSettingProps: false
	};

	/**
	 * Observer class that are attached to each observed
	 * object. Once attached, the observer converts target
	 * object's property keys into getter/setters that
	 * collect dependencies and dispatches updates.
	 */
	var Observer = function Observer(value) {
	  this.value = value;
	  this.dep = new Dep();
	  this.vmCount = 0;
	  def(value, '__ob__', this);
	  if (Array.isArray(value)) {
	    var augment = hasProto ? protoAugment : copyAugment;
	    augment(value, arrayMethods, arrayKeys);
	    this.observeArray(value);
	  } else {
	    this.walk(value);
	  }
	};

	/**
	 * Walk through each property and convert them into
	 * getter/setters. This method should only be called when
	 * value type is Object.
	 */
	Observer.prototype.walk = function walk(obj) {
	  var keys = Object.keys(obj);
	  for (var i = 0; i < keys.length; i++) {
	    defineReactive$$1(obj, keys[i], obj[keys[i]]);
	  }
	};

	/**
	 * Observe a list of Array items.
	 */
	Observer.prototype.observeArray = function observeArray(items) {
	  for (var i = 0, l = items.length; i < l; i++) {
	    observe(items[i]);
	  }
	};

	// helpers

	/**
	 * Augment an target Object or Array by intercepting
	 * the prototype chain using __proto__
	 */
	function protoAugment(target, src) {
	  /* eslint-disable no-proto */
	  target.__proto__ = src;
	  /* eslint-enable no-proto */
	}

	/**
	 * Augment an target Object or Array by defining
	 * hidden properties.
	 */
	/* istanbul ignore next */
	function copyAugment(target, src, keys) {
	  for (var i = 0, l = keys.length; i < l; i++) {
	    var key = keys[i];
	    def(target, key, src[key]);
	  }
	}

	/**
	 * Attempt to create an observer instance for a value,
	 * returns the new observer if successfully observed,
	 * or the existing observer if the value already has one.
	 */
	function observe(value, asRootData) {
	  if (!isObject(value)) {
	    return;
	  }
	  var ob;
	  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
	    ob = value.__ob__;
	  } else if (observerState.shouldConvert && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {
	    ob = new Observer(value);
	  }
	  if (asRootData && ob) {
	    ob.vmCount++;
	  }
	  return ob;
	}

	/**
	 * Define a reactive property on an Object.
	 */
	function defineReactive$$1(obj, key, val, customSetter) {
	  var dep = new Dep();

	  var property = Object.getOwnPropertyDescriptor(obj, key);
	  if (property && property.configurable === false) {
	    return;
	  }

	  // cater for pre-defined getter/setters
	  var getter = property && property.get;
	  var setter = property && property.set;

	  var childOb = observe(val);
	  Object.defineProperty(obj, key, {
	    enumerable: true,
	    configurable: true,
	    get: function reactiveGetter() {
	      var value = getter ? getter.call(obj) : val;
	      if (Dep.target) {
	        dep.depend();
	        if (childOb) {
	          childOb.dep.depend();
	        }
	        if (Array.isArray(value)) {
	          dependArray(value);
	        }
	      }
	      return value;
	    },
	    set: function reactiveSetter(newVal) {
	      var value = getter ? getter.call(obj) : val;
	      /* eslint-disable no-self-compare */
	      if (newVal === value || newVal !== newVal && value !== value) {
	        return;
	      }
	      /* eslint-enable no-self-compare */
	      if (process.env.NODE_ENV !== 'production' && customSetter) {
	        customSetter();
	      }
	      if (setter) {
	        setter.call(obj, newVal);
	      } else {
	        val = newVal;
	      }
	      childOb = observe(newVal);
	      dep.notify();
	    }
	  });
	}

	/**
	 * Set a property on an object. Adds the new property and
	 * triggers change notification if the property doesn't
	 * already exist.
	 */
	function set(target, key, val) {
	  if (Array.isArray(target) && typeof key === 'number') {
	    target.length = Math.max(target.length, key);
	    target.splice(key, 1, val);
	    return val;
	  }
	  if (hasOwn(target, key)) {
	    target[key] = val;
	    return val;
	  }
	  var ob = target.__ob__;
	  if (target._isVue || ob && ob.vmCount) {
	    process.env.NODE_ENV !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');
	    return val;
	  }
	  if (!ob) {
	    target[key] = val;
	    return val;
	  }
	  defineReactive$$1(ob.value, key, val);
	  ob.dep.notify();
	  return val;
	}

	/**
	 * Delete a property and trigger change if necessary.
	 */
	function del(target, key) {
	  if (Array.isArray(target) && typeof key === 'number') {
	    target.splice(key, 1);
	    return;
	  }
	  var ob = target.__ob__;
	  if (target._isVue || ob && ob.vmCount) {
	    process.env.NODE_ENV !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');
	    return;
	  }
	  if (!hasOwn(target, key)) {
	    return;
	  }
	  delete target[key];
	  if (!ob) {
	    return;
	  }
	  ob.dep.notify();
	}

	/**
	 * Collect dependencies on array elements when the array is touched, since
	 * we cannot intercept array element access like property getters.
	 */
	function dependArray(value) {
	  for (var e = void 0, i = 0, l = value.length; i < l; i++) {
	    e = value[i];
	    e && e.__ob__ && e.__ob__.dep.depend();
	    if (Array.isArray(e)) {
	      dependArray(e);
	    }
	  }
	}

	/*  */

	/**
	 * Option overwriting strategies are functions that handle
	 * how to merge a parent option value and a child option
	 * value into the final value.
	 */
	var strats = config.optionMergeStrategies;

	/**
	 * Options with restrictions
	 */
	if (process.env.NODE_ENV !== 'production') {
	  strats.el = strats.propsData = function (parent, child, vm, key) {
	    if (!vm) {
	      warn("option \"" + key + "\" can only be used during instance " + 'creation with the `new` keyword.');
	    }
	    return defaultStrat(parent, child);
	  };
	}

	/**
	 * Helper that recursively merges two data objects together.
	 */
	function mergeData(to, from) {
	  if (!from) {
	    return to;
	  }
	  var key, toVal, fromVal;
	  var keys = Object.keys(from);
	  for (var i = 0; i < keys.length; i++) {
	    key = keys[i];
	    toVal = to[key];
	    fromVal = from[key];
	    if (!hasOwn(to, key)) {
	      set(to, key, fromVal);
	    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
	      mergeData(toVal, fromVal);
	    }
	  }
	  return to;
	}

	/**
	 * Data
	 */
	strats.data = function (parentVal, childVal, vm) {
	  if (!vm) {
	    // in a Vue.extend merge, both should be functions
	    if (!childVal) {
	      return parentVal;
	    }
	    if (typeof childVal !== 'function') {
	      process.env.NODE_ENV !== 'production' && warn('The "data" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);
	      return parentVal;
	    }
	    if (!parentVal) {
	      return childVal;
	    }
	    // when parentVal & childVal are both present,
	    // we need to return a function that returns the
	    // merged result of both functions... no need to
	    // check if parentVal is a function here because
	    // it has to be a function to pass previous merges.
	    return function mergedDataFn() {
	      return mergeData(childVal.call(this), parentVal.call(this));
	    };
	  } else if (parentVal || childVal) {
	    return function mergedInstanceDataFn() {
	      // instance merge
	      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;
	      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;
	      if (instanceData) {
	        return mergeData(instanceData, defaultData);
	      } else {
	        return defaultData;
	      }
	    };
	  }
	};

	/**
	 * Hooks and props are merged as arrays.
	 */
	function mergeHook(parentVal, childVal) {
	  return childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
	}

	LIFECYCLE_HOOKS.forEach(function (hook) {
	  strats[hook] = mergeHook;
	});

	/**
	 * Assets
	 *
	 * When a vm is present (instance creation), we need to do
	 * a three-way merge between constructor options, instance
	 * options and parent options.
	 */
	function mergeAssets(parentVal, childVal) {
	  var res = Object.create(parentVal || null);
	  return childVal ? extend(res, childVal) : res;
	}

	ASSET_TYPES.forEach(function (type) {
	  strats[type + 's'] = mergeAssets;
	});

	/**
	 * Watchers.
	 *
	 * Watchers hashes should not overwrite one
	 * another, so we merge them as arrays.
	 */
	strats.watch = function (parentVal, childVal) {
	  /* istanbul ignore if */
	  if (!childVal) {
	    return Object.create(parentVal || null);
	  }
	  if (!parentVal) {
	    return childVal;
	  }
	  var ret = {};
	  extend(ret, parentVal);
	  for (var key in childVal) {
	    var parent = ret[key];
	    var child = childVal[key];
	    if (parent && !Array.isArray(parent)) {
	      parent = [parent];
	    }
	    ret[key] = parent ? parent.concat(child) : [child];
	  }
	  return ret;
	};

	/**
	 * Other object hashes.
	 */
	strats.props = strats.methods = strats.computed = function (parentVal, childVal) {
	  if (!childVal) {
	    return Object.create(parentVal || null);
	  }
	  if (!parentVal) {
	    return childVal;
	  }
	  var ret = Object.create(null);
	  extend(ret, parentVal);
	  extend(ret, childVal);
	  return ret;
	};

	/**
	 * Default strategy.
	 */
	var defaultStrat = function defaultStrat(parentVal, childVal) {
	  return childVal === undefined ? parentVal : childVal;
	};

	/**
	 * Validate component names
	 */
	function checkComponents(options) {
	  for (var key in options.components) {
	    var lower = key.toLowerCase();
	    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {
	      warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);
	    }
	  }
	}

	/**
	 * Ensure all props option syntax are normalized into the
	 * Object-based format.
	 */
	function normalizeProps(options) {
	  var props = options.props;
	  if (!props) {
	    return;
	  }
	  var res = {};
	  var i, val, name;
	  if (Array.isArray(props)) {
	    i = props.length;
	    while (i--) {
	      val = props[i];
	      if (typeof val === 'string') {
	        name = camelize(val);
	        res[name] = { type: null };
	      } else if (process.env.NODE_ENV !== 'production') {
	        warn('props must be strings when using array syntax.');
	      }
	    }
	  } else if (isPlainObject(props)) {
	    for (var key in props) {
	      val = props[key];
	      name = camelize(key);
	      res[name] = isPlainObject(val) ? val : { type: val };
	    }
	  }
	  options.props = res;
	}

	/**
	 * Normalize raw function directives into object format.
	 */
	function normalizeDirectives(options) {
	  var dirs = options.directives;
	  if (dirs) {
	    for (var key in dirs) {
	      var def = dirs[key];
	      if (typeof def === 'function') {
	        dirs[key] = { bind: def, update: def };
	      }
	    }
	  }
	}

	/**
	 * Merge two option objects into a new one.
	 * Core utility used in both instantiation and inheritance.
	 */
	function mergeOptions(parent, child, vm) {
	  if (process.env.NODE_ENV !== 'production') {
	    checkComponents(child);
	  }

	  if (typeof child === 'function') {
	    child = child.options;
	  }

	  normalizeProps(child);
	  normalizeDirectives(child);
	  var extendsFrom = child.extends;
	  if (extendsFrom) {
	    parent = mergeOptions(parent, extendsFrom, vm);
	  }
	  if (child.mixins) {
	    for (var i = 0, l = child.mixins.length; i < l; i++) {
	      parent = mergeOptions(parent, child.mixins[i], vm);
	    }
	  }
	  var options = {};
	  var key;
	  for (key in parent) {
	    mergeField(key);
	  }
	  for (key in child) {
	    if (!hasOwn(parent, key)) {
	      mergeField(key);
	    }
	  }
	  function mergeField(key) {
	    var strat = strats[key] || defaultStrat;
	    options[key] = strat(parent[key], child[key], vm, key);
	  }
	  return options;
	}

	/**
	 * Resolve an asset.
	 * This function is used because child instances need access
	 * to assets defined in its ancestor chain.
	 */
	function resolveAsset(options, type, id, warnMissing) {
	  /* istanbul ignore if */
	  if (typeof id !== 'string') {
	    return;
	  }
	  var assets = options[type];
	  // check local registration variations first
	  if (hasOwn(assets, id)) {
	    return assets[id];
	  }
	  var camelizedId = camelize(id);
	  if (hasOwn(assets, camelizedId)) {
	    return assets[camelizedId];
	  }
	  var PascalCaseId = capitalize(camelizedId);
	  if (hasOwn(assets, PascalCaseId)) {
	    return assets[PascalCaseId];
	  }
	  // fallback to prototype chain
	  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
	  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {
	    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);
	  }
	  return res;
	}

	/*  */

	function validateProp(key, propOptions, propsData, vm) {
	  var prop = propOptions[key];
	  var absent = !hasOwn(propsData, key);
	  var value = propsData[key];
	  // handle boolean props
	  if (isType(Boolean, prop.type)) {
	    if (absent && !hasOwn(prop, 'default')) {
	      value = false;
	    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {
	      value = true;
	    }
	  }
	  // check default value
	  if (value === undefined) {
	    value = getPropDefaultValue(vm, prop, key);
	    // since the default value is a fresh copy,
	    // make sure to observe it.
	    var prevShouldConvert = observerState.shouldConvert;
	    observerState.shouldConvert = true;
	    observe(value);
	    observerState.shouldConvert = prevShouldConvert;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    assertProp(prop, key, value, vm, absent);
	  }
	  return value;
	}

	/**
	 * Get the default value of a prop.
	 */
	function getPropDefaultValue(vm, prop, key) {
	  // no default, return undefined
	  if (!hasOwn(prop, 'default')) {
	    return undefined;
	  }
	  var def = prop.default;
	  // warn against non-factory defaults for Object & Array
	  if (process.env.NODE_ENV !== 'production' && isObject(def)) {
	    warn('Invalid default value for prop "' + key + '": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);
	  }
	  // the raw prop value was also undefined from previous render,
	  // return previous default value to avoid unnecessary watcher trigger
	  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {
	    return vm._props[key];
	  }
	  // call factory function for non-Function types
	  // a value is Function if its prototype is function even across different execution context
	  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;
	}

	/**
	 * Assert whether a prop is valid.
	 */
	function assertProp(prop, name, value, vm, absent) {
	  if (prop.required && absent) {
	    warn('Missing required prop: "' + name + '"', vm);
	    return;
	  }
	  if (value == null && !prop.required) {
	    return;
	  }
	  var type = prop.type;
	  var valid = !type || type === true;
	  var expectedTypes = [];
	  if (type) {
	    if (!Array.isArray(type)) {
	      type = [type];
	    }
	    for (var i = 0; i < type.length && !valid; i++) {
	      var assertedType = assertType(value, type[i]);
	      expectedTypes.push(assertedType.expectedType || '');
	      valid = assertedType.valid;
	    }
	  }
	  if (!valid) {
	    warn('Invalid prop: type check failed for prop "' + name + '".' + ' Expected ' + expectedTypes.map(capitalize).join(', ') + ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.', vm);
	    return;
	  }
	  var validator = prop.validator;
	  if (validator) {
	    if (!validator(value)) {
	      warn('Invalid prop: custom validator check failed for prop "' + name + '".', vm);
	    }
	  }
	}

	var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

	function assertType(value, type) {
	  var valid;
	  var expectedType = getType(type);
	  if (simpleCheckRE.test(expectedType)) {
	    valid = (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === expectedType.toLowerCase();
	  } else if (expectedType === 'Object') {
	    valid = isPlainObject(value);
	  } else if (expectedType === 'Array') {
	    valid = Array.isArray(value);
	  } else {
	    valid = value instanceof type;
	  }
	  return {
	    valid: valid,
	    expectedType: expectedType
	  };
	}

	/**
	 * Use function string name to check built-in types,
	 * because a simple equality check will fail when running
	 * across different vms / iframes.
	 */
	function getType(fn) {
	  var match = fn && fn.toString().match(/^\s*function (\w+)/);
	  return match ? match[1] : '';
	}

	function isType(type, fn) {
	  if (!Array.isArray(fn)) {
	    return getType(fn) === getType(type);
	  }
	  for (var i = 0, len = fn.length; i < len; i++) {
	    if (getType(fn[i]) === getType(type)) {
	      return true;
	    }
	  }
	  /* istanbul ignore next */
	  return false;
	}

	/*  */

	var mark;
	var measure;

	if (process.env.NODE_ENV !== 'production') {
	  var perf = inBrowser && window.performance;
	  /* istanbul ignore if */
	  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {
	    mark = function mark(tag) {
	      return perf.mark(tag);
	    };
	    measure = function measure(name, startTag, endTag) {
	      perf.measure(name, startTag, endTag);
	      perf.clearMarks(startTag);
	      perf.clearMarks(endTag);
	      perf.clearMeasures(name);
	    };
	  }
	}

	/* not type checking this file because flow doesn't play well with Proxy */

	var initProxy;

	if (process.env.NODE_ENV !== 'production') {
	  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify
	  );

	  var warnNonPresent = function warnNonPresent(target, key) {
	    warn("Property or method \"" + key + "\" is not defined on the instance but " + "referenced during render. Make sure to declare reactive data " + "properties in the data option.", target);
	  };

	  var hasProxy = typeof Proxy !== 'undefined' && Proxy.toString().match(/native code/);

	  if (hasProxy) {
	    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');
	    config.keyCodes = new Proxy(config.keyCodes, {
	      set: function set(target, key, value) {
	        if (isBuiltInModifier(key)) {
	          warn("Avoid overwriting built-in modifier in config.keyCodes: ." + key);
	          return false;
	        } else {
	          target[key] = value;
	          return true;
	        }
	      }
	    });
	  }

	  var hasHandler = {
	    has: function has(target, key) {
	      var has = key in target;
	      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
	      if (!has && !isAllowed) {
	        warnNonPresent(target, key);
	      }
	      return has || !isAllowed;
	    }
	  };

	  var getHandler = {
	    get: function get(target, key) {
	      if (typeof key === 'string' && !(key in target)) {
	        warnNonPresent(target, key);
	      }
	      return target[key];
	    }
	  };

	  initProxy = function initProxy(vm) {
	    if (hasProxy) {
	      // determine which proxy handler to use
	      var options = vm.$options;
	      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;
	      vm._renderProxy = new Proxy(vm, handlers);
	    } else {
	      vm._renderProxy = vm;
	    }
	  };
	}

	/*  */

	var VNode = function VNode(tag, data, children, text, elm, context, componentOptions) {
	  this.tag = tag;
	  this.data = data;
	  this.children = children;
	  this.text = text;
	  this.elm = elm;
	  this.ns = undefined;
	  this.context = context;
	  this.functionalContext = undefined;
	  this.key = data && data.key;
	  this.componentOptions = componentOptions;
	  this.componentInstance = undefined;
	  this.parent = undefined;
	  this.raw = false;
	  this.isStatic = false;
	  this.isRootInsert = true;
	  this.isComment = false;
	  this.isCloned = false;
	  this.isOnce = false;
	};

	var prototypeAccessors = { child: {} };

	// DEPRECATED: alias for componentInstance for backwards compat.
	/* istanbul ignore next */
	prototypeAccessors.child.get = function () {
	  return this.componentInstance;
	};

	Object.defineProperties(VNode.prototype, prototypeAccessors);

	var createEmptyVNode = function createEmptyVNode() {
	  var node = new VNode();
	  node.text = '';
	  node.isComment = true;
	  return node;
	};

	function createTextVNode(val) {
	  return new VNode(undefined, undefined, undefined, String(val));
	}

	// optimized shallow clone
	// used for static nodes and slot nodes because they may be reused across
	// multiple renders, cloning them avoids errors when DOM manipulations rely
	// on their elm reference.
	function cloneVNode(vnode) {
	  var cloned = new VNode(vnode.tag, vnode.data, vnode.children, vnode.text, vnode.elm, vnode.context, vnode.componentOptions);
	  cloned.ns = vnode.ns;
	  cloned.isStatic = vnode.isStatic;
	  cloned.key = vnode.key;
	  cloned.isComment = vnode.isComment;
	  cloned.isCloned = true;
	  return cloned;
	}

	function cloneVNodes(vnodes) {
	  var len = vnodes.length;
	  var res = new Array(len);
	  for (var i = 0; i < len; i++) {
	    res[i] = cloneVNode(vnodes[i]);
	  }
	  return res;
	}

	/*  */

	var normalizeEvent = cached(function (name) {
	  var passive = name.charAt(0) === '&';
	  name = passive ? name.slice(1) : name;
	  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
	  name = once$$1 ? name.slice(1) : name;
	  var capture = name.charAt(0) === '!';
	  name = capture ? name.slice(1) : name;
	  return {
	    name: name,
	    once: once$$1,
	    capture: capture,
	    passive: passive
	  };
	});

	function createFnInvoker(fns) {
	  function invoker() {
	    var arguments$1 = arguments;

	    var fns = invoker.fns;
	    if (Array.isArray(fns)) {
	      for (var i = 0; i < fns.length; i++) {
	        fns[i].apply(null, arguments$1);
	      }
	    } else {
	      // return handler return value for single handlers
	      return fns.apply(null, arguments);
	    }
	  }
	  invoker.fns = fns;
	  return invoker;
	}

	function updateListeners(on, oldOn, add, remove$$1, vm) {
	  var name, cur, old, event;
	  for (name in on) {
	    cur = on[name];
	    old = oldOn[name];
	    event = normalizeEvent(name);
	    if (isUndef(cur)) {
	      process.env.NODE_ENV !== 'production' && warn("Invalid handler for event \"" + event.name + "\": got " + String(cur), vm);
	    } else if (isUndef(old)) {
	      if (isUndef(cur.fns)) {
	        cur = on[name] = createFnInvoker(cur);
	      }
	      add(event.name, cur, event.once, event.capture, event.passive);
	    } else if (cur !== old) {
	      old.fns = cur;
	      on[name] = old;
	    }
	  }
	  for (name in oldOn) {
	    if (isUndef(on[name])) {
	      event = normalizeEvent(name);
	      remove$$1(event.name, oldOn[name], event.capture);
	    }
	  }
	}

	/*  */

	function mergeVNodeHook(def, hookKey, hook) {
	  var invoker;
	  var oldHook = def[hookKey];

	  function wrappedHook() {
	    hook.apply(this, arguments);
	    // important: remove merged hook to ensure it's called only once
	    // and prevent memory leak
	    remove(invoker.fns, wrappedHook);
	  }

	  if (isUndef(oldHook)) {
	    // no existing hook
	    invoker = createFnInvoker([wrappedHook]);
	  } else {
	    /* istanbul ignore if */
	    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
	      // already a merged invoker
	      invoker = oldHook;
	      invoker.fns.push(wrappedHook);
	    } else {
	      // existing plain hook
	      invoker = createFnInvoker([oldHook, wrappedHook]);
	    }
	  }

	  invoker.merged = true;
	  def[hookKey] = invoker;
	}

	/*  */

	function extractPropsFromVNodeData(data, Ctor, tag) {
	  // we are only extracting raw values here.
	  // validation and default values are handled in the child
	  // component itself.
	  var propOptions = Ctor.options.props;
	  if (isUndef(propOptions)) {
	    return;
	  }
	  var res = {};
	  var attrs = data.attrs;
	  var props = data.props;
	  if (isDef(attrs) || isDef(props)) {
	    for (var key in propOptions) {
	      var altKey = hyphenate(key);
	      if (process.env.NODE_ENV !== 'production') {
	        var keyInLowerCase = key.toLowerCase();
	        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {
	          tip("Prop \"" + keyInLowerCase + "\" is passed to component " + formatComponentName(tag || Ctor) + ", but the declared prop name is" + " \"" + key + "\". " + "Note that HTML attributes are case-insensitive and camelCased " + "props need to use their kebab-case equivalents when using in-DOM " + "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\".");
	        }
	      }
	      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);
	    }
	  }
	  return res;
	}

	function checkProp(res, hash, key, altKey, preserve) {
	  if (isDef(hash)) {
	    if (hasOwn(hash, key)) {
	      res[key] = hash[key];
	      if (!preserve) {
	        delete hash[key];
	      }
	      return true;
	    } else if (hasOwn(hash, altKey)) {
	      res[key] = hash[altKey];
	      if (!preserve) {
	        delete hash[altKey];
	      }
	      return true;
	    }
	  }
	  return false;
	}

	/*  */

	// The template compiler attempts to minimize the need for normalization by
	// statically analyzing the template at compile time.
	//
	// For plain HTML markup, normalization can be completely skipped because the
	// generated render function is guaranteed to return Array<VNode>. There are
	// two cases where extra normalization is needed:

	// 1. When the children contains components - because a functional component
	// may return an Array instead of a single root. In this case, just a simple
	// normalization is needed - if any child is an Array, we flatten the whole
	// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
	// because functional components already normalize their own children.
	function simpleNormalizeChildren(children) {
	  for (var i = 0; i < children.length; i++) {
	    if (Array.isArray(children[i])) {
	      return Array.prototype.concat.apply([], children);
	    }
	  }
	  return children;
	}

	// 2. When the children contains constructs that always generated nested Arrays,
	// e.g. <template>, <slot>, v-for, or when the children is provided by user
	// with hand-written render functions / JSX. In such cases a full normalization
	// is needed to cater to all possible types of children values.
	function normalizeChildren(children) {
	  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;
	}

	function isTextNode(node) {
	  return isDef(node) && isDef(node.text) && isFalse(node.isComment);
	}

	function normalizeArrayChildren(children, nestedIndex) {
	  var res = [];
	  var i, c, last;
	  for (i = 0; i < children.length; i++) {
	    c = children[i];
	    if (isUndef(c) || typeof c === 'boolean') {
	      continue;
	    }
	    last = res[res.length - 1];
	    //  nested
	    if (Array.isArray(c)) {
	      res.push.apply(res, normalizeArrayChildren(c, (nestedIndex || '') + "_" + i));
	    } else if (isPrimitive(c)) {
	      if (isTextNode(last)) {
	        // merge adjacent text nodes
	        // this is necessary for SSR hydration because text nodes are
	        // essentially merged when rendered to HTML strings
	        last.text += String(c);
	      } else if (c !== '') {
	        // convert primitive to vnode
	        res.push(createTextVNode(c));
	      }
	    } else {
	      if (isTextNode(c) && isTextNode(last)) {
	        // merge adjacent text nodes
	        res[res.length - 1] = createTextVNode(last.text + c.text);
	      } else {
	        // default key for nested array children (likely generated by v-for)
	        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {
	          c.key = "__vlist" + nestedIndex + "_" + i + "__";
	        }
	        res.push(c);
	      }
	    }
	  }
	  return res;
	}

	/*  */

	function ensureCtor(comp, base) {
	  return isObject(comp) ? base.extend(comp) : comp;
	}

	function resolveAsyncComponent(factory, baseCtor, context) {
	  if (isTrue(factory.error) && isDef(factory.errorComp)) {
	    return factory.errorComp;
	  }

	  if (isDef(factory.resolved)) {
	    return factory.resolved;
	  }

	  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
	    return factory.loadingComp;
	  }

	  if (isDef(factory.contexts)) {
	    // already pending
	    factory.contexts.push(context);
	  } else {
	    var contexts = factory.contexts = [context];
	    var sync = true;

	    var forceRender = function forceRender() {
	      for (var i = 0, l = contexts.length; i < l; i++) {
	        contexts[i].$forceUpdate();
	      }
	    };

	    var resolve = once(function (res) {
	      // cache resolved
	      factory.resolved = ensureCtor(res, baseCtor);
	      // invoke callbacks only if this is not a synchronous resolve
	      // (async resolves are shimmed as synchronous during SSR)
	      if (!sync) {
	        forceRender();
	      }
	    });

	    var reject = once(function (reason) {
	      process.env.NODE_ENV !== 'production' && warn("Failed to resolve async component: " + String(factory) + (reason ? "\nReason: " + reason : ''));
	      if (isDef(factory.errorComp)) {
	        factory.error = true;
	        forceRender();
	      }
	    });

	    var res = factory(resolve, reject);

	    if (isObject(res)) {
	      if (typeof res.then === 'function') {
	        // () => Promise
	        if (isUndef(factory.resolved)) {
	          res.then(resolve, reject);
	        }
	      } else if (isDef(res.component) && typeof res.component.then === 'function') {
	        res.component.then(resolve, reject);

	        if (isDef(res.error)) {
	          factory.errorComp = ensureCtor(res.error, baseCtor);
	        }

	        if (isDef(res.loading)) {
	          factory.loadingComp = ensureCtor(res.loading, baseCtor);
	          if (res.delay === 0) {
	            factory.loading = true;
	          } else {
	            setTimeout(function () {
	              if (isUndef(factory.resolved) && isUndef(factory.error)) {
	                factory.loading = true;
	                forceRender();
	              }
	            }, res.delay || 200);
	          }
	        }

	        if (isDef(res.timeout)) {
	          setTimeout(function () {
	            if (isUndef(factory.resolved)) {
	              reject(process.env.NODE_ENV !== 'production' ? "timeout (" + res.timeout + "ms)" : null);
	            }
	          }, res.timeout);
	        }
	      }
	    }

	    sync = false;
	    // return in case resolved synchronously
	    return factory.loading ? factory.loadingComp : factory.resolved;
	  }
	}

	/*  */

	function getFirstComponentChild(children) {
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      var c = children[i];
	      if (isDef(c) && isDef(c.componentOptions)) {
	        return c;
	      }
	    }
	  }
	}

	/*  */

	/*  */

	function initEvents(vm) {
	  vm._events = Object.create(null);
	  vm._hasHookEvent = false;
	  // init parent attached events
	  var listeners = vm.$options._parentListeners;
	  if (listeners) {
	    updateComponentListeners(vm, listeners);
	  }
	}

	var target;

	function add(event, fn, once$$1) {
	  if (once$$1) {
	    target.$once(event, fn);
	  } else {
	    target.$on(event, fn);
	  }
	}

	function remove$1(event, fn) {
	  target.$off(event, fn);
	}

	function updateComponentListeners(vm, listeners, oldListeners) {
	  target = vm;
	  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
	}

	function eventsMixin(Vue) {
	  var hookRE = /^hook:/;
	  Vue.prototype.$on = function (event, fn) {
	    var this$1 = this;

	    var vm = this;
	    if (Array.isArray(event)) {
	      for (var i = 0, l = event.length; i < l; i++) {
	        this$1.$on(event[i], fn);
	      }
	    } else {
	      (vm._events[event] || (vm._events[event] = [])).push(fn);
	      // optimize hook:event cost by using a boolean flag marked at registration
	      // instead of a hash lookup
	      if (hookRE.test(event)) {
	        vm._hasHookEvent = true;
	      }
	    }
	    return vm;
	  };

	  Vue.prototype.$once = function (event, fn) {
	    var vm = this;
	    function on() {
	      vm.$off(event, on);
	      fn.apply(vm, arguments);
	    }
	    on.fn = fn;
	    vm.$on(event, on);
	    return vm;
	  };

	  Vue.prototype.$off = function (event, fn) {
	    var this$1 = this;

	    var vm = this;
	    // all
	    if (!arguments.length) {
	      vm._events = Object.create(null);
	      return vm;
	    }
	    // array of events
	    if (Array.isArray(event)) {
	      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
	        this$1.$off(event[i$1], fn);
	      }
	      return vm;
	    }
	    // specific event
	    var cbs = vm._events[event];
	    if (!cbs) {
	      return vm;
	    }
	    if (arguments.length === 1) {
	      vm._events[event] = null;
	      return vm;
	    }
	    // specific handler
	    var cb;
	    var i = cbs.length;
	    while (i--) {
	      cb = cbs[i];
	      if (cb === fn || cb.fn === fn) {
	        cbs.splice(i, 1);
	        break;
	      }
	    }
	    return vm;
	  };

	  Vue.prototype.$emit = function (event) {
	    var vm = this;
	    if (process.env.NODE_ENV !== 'production') {
	      var lowerCaseEvent = event.toLowerCase();
	      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
	        tip("Event \"" + lowerCaseEvent + "\" is emitted in component " + formatComponentName(vm) + " but the handler is registered for \"" + event + "\". " + "Note that HTML attributes are case-insensitive and you cannot use " + "v-on to listen to camelCase events when using in-DOM templates. " + "You should probably use \"" + hyphenate(event) + "\" instead of \"" + event + "\".");
	      }
	    }
	    var cbs = vm._events[event];
	    if (cbs) {
	      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
	      var args = toArray(arguments, 1);
	      for (var i = 0, l = cbs.length; i < l; i++) {
	        cbs[i].apply(vm, args);
	      }
	    }
	    return vm;
	  };
	}

	/*  */

	/**
	 * Runtime helper for resolving raw children VNodes into a slot object.
	 */
	function resolveSlots(children, context) {
	  var slots = {};
	  if (!children) {
	    return slots;
	  }
	  var defaultSlot = [];
	  for (var i = 0, l = children.length; i < l; i++) {
	    var child = children[i];
	    // named slots should only be respected if the vnode was rendered in the
	    // same context.
	    if ((child.context === context || child.functionalContext === context) && child.data && child.data.slot != null) {
	      var name = child.data.slot;
	      var slot = slots[name] || (slots[name] = []);
	      if (child.tag === 'template') {
	        slot.push.apply(slot, child.children);
	      } else {
	        slot.push(child);
	      }
	    } else {
	      defaultSlot.push(child);
	    }
	  }
	  // ignore whitespace
	  if (!defaultSlot.every(isWhitespace)) {
	    slots.default = defaultSlot;
	  }
	  return slots;
	}

	function isWhitespace(node) {
	  return node.isComment || node.text === ' ';
	}

	function resolveScopedSlots(fns, // see flow/vnode
	res) {
	  res = res || {};
	  for (var i = 0; i < fns.length; i++) {
	    if (Array.isArray(fns[i])) {
	      resolveScopedSlots(fns[i], res);
	    } else {
	      res[fns[i].key] = fns[i].fn;
	    }
	  }
	  return res;
	}

	/*  */

	var activeInstance = null;

	function initLifecycle(vm) {
	  var options = vm.$options;

	  // locate first non-abstract parent
	  var parent = options.parent;
	  if (parent && !options.abstract) {
	    while (parent.$options.abstract && parent.$parent) {
	      parent = parent.$parent;
	    }
	    parent.$children.push(vm);
	  }

	  vm.$parent = parent;
	  vm.$root = parent ? parent.$root : vm;

	  vm.$children = [];
	  vm.$refs = {};

	  vm._watcher = null;
	  vm._inactive = null;
	  vm._directInactive = false;
	  vm._isMounted = false;
	  vm._isDestroyed = false;
	  vm._isBeingDestroyed = false;
	}

	function lifecycleMixin(Vue) {
	  Vue.prototype._update = function (vnode, hydrating) {
	    var vm = this;
	    if (vm._isMounted) {
	      callHook(vm, 'beforeUpdate');
	    }
	    var prevEl = vm.$el;
	    var prevVnode = vm._vnode;
	    var prevActiveInstance = activeInstance;
	    activeInstance = vm;
	    vm._vnode = vnode;
	    // Vue.prototype.__patch__ is injected in entry points
	    // based on the rendering backend used.
	    if (!prevVnode) {
	      // initial render
	      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */
	      , vm.$options._parentElm, vm.$options._refElm);
	    } else {
	      // updates
	      vm.$el = vm.__patch__(prevVnode, vnode);
	    }
	    activeInstance = prevActiveInstance;
	    // update __vue__ reference
	    if (prevEl) {
	      prevEl.__vue__ = null;
	    }
	    if (vm.$el) {
	      vm.$el.__vue__ = vm;
	    }
	    // if parent is an HOC, update its $el as well
	    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
	      vm.$parent.$el = vm.$el;
	    }
	    // updated hook is called by the scheduler to ensure that children are
	    // updated in a parent's updated hook.
	  };

	  Vue.prototype.$forceUpdate = function () {
	    var vm = this;
	    if (vm._watcher) {
	      vm._watcher.update();
	    }
	  };

	  Vue.prototype.$destroy = function () {
	    var vm = this;
	    if (vm._isBeingDestroyed) {
	      return;
	    }
	    callHook(vm, 'beforeDestroy');
	    vm._isBeingDestroyed = true;
	    // remove self from parent
	    var parent = vm.$parent;
	    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
	      remove(parent.$children, vm);
	    }
	    // teardown watchers
	    if (vm._watcher) {
	      vm._watcher.teardown();
	    }
	    var i = vm._watchers.length;
	    while (i--) {
	      vm._watchers[i].teardown();
	    }
	    // remove reference from data ob
	    // frozen object may not have observer.
	    if (vm._data.__ob__) {
	      vm._data.__ob__.vmCount--;
	    }
	    // call the last hook...
	    vm._isDestroyed = true;
	    // invoke destroy hooks on current rendered tree
	    vm.__patch__(vm._vnode, null);
	    // fire destroyed hook
	    callHook(vm, 'destroyed');
	    // turn off all instance listeners.
	    vm.$off();
	    // remove __vue__ reference
	    if (vm.$el) {
	      vm.$el.__vue__ = null;
	    }
	    // remove reference to DOM nodes (prevents leak)
	    vm.$options._parentElm = vm.$options._refElm = null;
	  };
	}

	function mountComponent(vm, el, hydrating) {
	  vm.$el = el;
	  if (!vm.$options.render) {
	    vm.$options.render = createEmptyVNode;
	    if (process.env.NODE_ENV !== 'production') {
	      /* istanbul ignore if */
	      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {
	        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);
	      } else {
	        warn('Failed to mount component: template or render function not defined.', vm);
	      }
	    }
	  }
	  callHook(vm, 'beforeMount');

	  var updateComponent;
	  /* istanbul ignore if */
	  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
	    updateComponent = function updateComponent() {
	      var name = vm._name;
	      var id = vm._uid;
	      var startTag = "vue-perf-start:" + id;
	      var endTag = "vue-perf-end:" + id;

	      mark(startTag);
	      var vnode = vm._render();
	      mark(endTag);
	      measure(name + " render", startTag, endTag);

	      mark(startTag);
	      vm._update(vnode, hydrating);
	      mark(endTag);
	      measure(name + " patch", startTag, endTag);
	    };
	  } else {
	    updateComponent = function updateComponent() {
	      vm._update(vm._render(), hydrating);
	    };
	  }

	  vm._watcher = new Watcher(vm, updateComponent, noop);
	  hydrating = false;

	  // manually mounted instance, call mounted on self
	  // mounted is called for render-created child components in its inserted hook
	  if (vm.$vnode == null) {
	    vm._isMounted = true;
	    callHook(vm, 'mounted');
	  }
	  return vm;
	}

	function updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {
	  // determine whether component has slot children
	  // we need to do this before overwriting $options._renderChildren
	  var hasChildren = !!(renderChildren || // has new static slots
	  vm.$options._renderChildren || // has old static slots
	  parentVnode.data.scopedSlots || // has new scoped slots
	  vm.$scopedSlots !== emptyObject // has old scoped slots
	  );

	  vm.$options._parentVnode = parentVnode;
	  vm.$vnode = parentVnode; // update vm's placeholder node without re-render
	  if (vm._vnode) {
	    // update child tree's parent
	    vm._vnode.parent = parentVnode;
	  }
	  vm.$options._renderChildren = renderChildren;

	  // update props
	  if (propsData && vm.$options.props) {
	    observerState.shouldConvert = false;
	    if (process.env.NODE_ENV !== 'production') {
	      observerState.isSettingProps = true;
	    }
	    var props = vm._props;
	    var propKeys = vm.$options._propKeys || [];
	    for (var i = 0; i < propKeys.length; i++) {
	      var key = propKeys[i];
	      props[key] = validateProp(key, vm.$options.props, propsData, vm);
	    }
	    observerState.shouldConvert = true;
	    if (process.env.NODE_ENV !== 'production') {
	      observerState.isSettingProps = false;
	    }
	    // keep a copy of raw propsData
	    vm.$options.propsData = propsData;
	  }
	  // update listeners
	  if (listeners) {
	    var oldListeners = vm.$options._parentListeners;
	    vm.$options._parentListeners = listeners;
	    updateComponentListeners(vm, listeners, oldListeners);
	  }
	  // resolve slots + force update if has children
	  if (hasChildren) {
	    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
	    vm.$forceUpdate();
	  }
	}

	function isInInactiveTree(vm) {
	  while (vm && (vm = vm.$parent)) {
	    if (vm._inactive) {
	      return true;
	    }
	  }
	  return false;
	}

	function activateChildComponent(vm, direct) {
	  if (direct) {
	    vm._directInactive = false;
	    if (isInInactiveTree(vm)) {
	      return;
	    }
	  } else if (vm._directInactive) {
	    return;
	  }
	  if (vm._inactive || vm._inactive === null) {
	    vm._inactive = false;
	    for (var i = 0; i < vm.$children.length; i++) {
	      activateChildComponent(vm.$children[i]);
	    }
	    callHook(vm, 'activated');
	  }
	}

	function deactivateChildComponent(vm, direct) {
	  if (direct) {
	    vm._directInactive = true;
	    if (isInInactiveTree(vm)) {
	      return;
	    }
	  }
	  if (!vm._inactive) {
	    vm._inactive = true;
	    for (var i = 0; i < vm.$children.length; i++) {
	      deactivateChildComponent(vm.$children[i]);
	    }
	    callHook(vm, 'deactivated');
	  }
	}

	function callHook(vm, hook) {
	  var handlers = vm.$options[hook];
	  if (handlers) {
	    for (var i = 0, j = handlers.length; i < j; i++) {
	      try {
	        handlers[i].call(vm);
	      } catch (e) {
	        handleError(e, vm, hook + " hook");
	      }
	    }
	  }
	  if (vm._hasHookEvent) {
	    vm.$emit('hook:' + hook);
	  }
	}

	/*  */

	var MAX_UPDATE_COUNT = 100;

	var queue = [];
	var activatedChildren = [];
	var has = {};
	var circular = {};
	var waiting = false;
	var flushing = false;
	var index = 0;

	/**
	 * Reset the scheduler's state.
	 */
	function resetSchedulerState() {
	  index = queue.length = activatedChildren.length = 0;
	  has = {};
	  if (process.env.NODE_ENV !== 'production') {
	    circular = {};
	  }
	  waiting = flushing = false;
	}

	/**
	 * Flush both queues and run the watchers.
	 */
	function flushSchedulerQueue() {
	  flushing = true;
	  var watcher, id;

	  // Sort queue before flush.
	  // This ensures that:
	  // 1. Components are updated from parent to child. (because parent is always
	  //    created before the child)
	  // 2. A component's user watchers are run before its render watcher (because
	  //    user watchers are created before the render watcher)
	  // 3. If a component is destroyed during a parent component's watcher run,
	  //    its watchers can be skipped.
	  queue.sort(function (a, b) {
	    return a.id - b.id;
	  });

	  // do not cache length because more watchers might be pushed
	  // as we run existing watchers
	  for (index = 0; index < queue.length; index++) {
	    watcher = queue[index];
	    id = watcher.id;
	    has[id] = null;
	    watcher.run();
	    // in dev build, check and stop circular updates.
	    if (process.env.NODE_ENV !== 'production' && has[id] != null) {
	      circular[id] = (circular[id] || 0) + 1;
	      if (circular[id] > MAX_UPDATE_COUNT) {
	        warn('You may have an infinite update loop ' + (watcher.user ? "in watcher with expression \"" + watcher.expression + "\"" : "in a component render function."), watcher.vm);
	        break;
	      }
	    }
	  }

	  // keep copies of post queues before resetting state
	  var activatedQueue = activatedChildren.slice();
	  var updatedQueue = queue.slice();

	  resetSchedulerState();

	  // call component updated and activated hooks
	  callActivatedHooks(activatedQueue);
	  callUpdateHooks(updatedQueue);

	  // devtool hook
	  /* istanbul ignore if */
	  if (devtools && config.devtools) {
	    devtools.emit('flush');
	  }
	}

	function callUpdateHooks(queue) {
	  var i = queue.length;
	  while (i--) {
	    var watcher = queue[i];
	    var vm = watcher.vm;
	    if (vm._watcher === watcher && vm._isMounted) {
	      callHook(vm, 'updated');
	    }
	  }
	}

	/**
	 * Queue a kept-alive component that was activated during patch.
	 * The queue will be processed after the entire tree has been patched.
	 */
	function queueActivatedComponent(vm) {
	  // setting _inactive to false here so that a render function can
	  // rely on checking whether it's in an inactive tree (e.g. router-view)
	  vm._inactive = false;
	  activatedChildren.push(vm);
	}

	function callActivatedHooks(queue) {
	  for (var i = 0; i < queue.length; i++) {
	    queue[i]._inactive = true;
	    activateChildComponent(queue[i], true /* true */);
	  }
	}

	/**
	 * Push a watcher into the watcher queue.
	 * Jobs with duplicate IDs will be skipped unless it's
	 * pushed when the queue is being flushed.
	 */
	function queueWatcher(watcher) {
	  var id = watcher.id;
	  if (has[id] == null) {
	    has[id] = true;
	    if (!flushing) {
	      queue.push(watcher);
	    } else {
	      // if already flushing, splice the watcher based on its id
	      // if already past its id, it will be run next immediately.
	      var i = queue.length - 1;
	      while (i > index && queue[i].id > watcher.id) {
	        i--;
	      }
	      queue.splice(i + 1, 0, watcher);
	    }
	    // queue the flush
	    if (!waiting) {
	      waiting = true;
	      nextTick(flushSchedulerQueue);
	    }
	  }
	}

	/*  */

	var uid$2 = 0;

	/**
	 * A watcher parses an expression, collects dependencies,
	 * and fires callback when the expression value changes.
	 * This is used for both the $watch() api and directives.
	 */
	var Watcher = function Watcher(vm, expOrFn, cb, options) {
	  this.vm = vm;
	  vm._watchers.push(this);
	  // options
	  if (options) {
	    this.deep = !!options.deep;
	    this.user = !!options.user;
	    this.lazy = !!options.lazy;
	    this.sync = !!options.sync;
	  } else {
	    this.deep = this.user = this.lazy = this.sync = false;
	  }
	  this.cb = cb;
	  this.id = ++uid$2; // uid for batching
	  this.active = true;
	  this.dirty = this.lazy; // for lazy watchers
	  this.deps = [];
	  this.newDeps = [];
	  this.depIds = new _Set();
	  this.newDepIds = new _Set();
	  this.expression = process.env.NODE_ENV !== 'production' ? expOrFn.toString() : '';
	  // parse expression for getter
	  if (typeof expOrFn === 'function') {
	    this.getter = expOrFn;
	  } else {
	    this.getter = parsePath(expOrFn);
	    if (!this.getter) {
	      this.getter = function () {};
	      process.env.NODE_ENV !== 'production' && warn("Failed watching path: \"" + expOrFn + "\" " + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);
	    }
	  }
	  this.value = this.lazy ? undefined : this.get();
	};

	/**
	 * Evaluate the getter, and re-collect dependencies.
	 */
	Watcher.prototype.get = function get() {
	  pushTarget(this);
	  var value;
	  var vm = this.vm;
	  if (this.user) {
	    try {
	      value = this.getter.call(vm, vm);
	    } catch (e) {
	      handleError(e, vm, "getter for watcher \"" + this.expression + "\"");
	    }
	  } else {
	    value = this.getter.call(vm, vm);
	  }
	  // "touch" every property so they are all tracked as
	  // dependencies for deep watching
	  if (this.deep) {
	    traverse(value);
	  }
	  popTarget();
	  this.cleanupDeps();
	  return value;
	};

	/**
	 * Add a dependency to this directive.
	 */
	Watcher.prototype.addDep = function addDep(dep) {
	  var id = dep.id;
	  if (!this.newDepIds.has(id)) {
	    this.newDepIds.add(id);
	    this.newDeps.push(dep);
	    if (!this.depIds.has(id)) {
	      dep.addSub(this);
	    }
	  }
	};

	/**
	 * Clean up for dependency collection.
	 */
	Watcher.prototype.cleanupDeps = function cleanupDeps() {
	  var this$1 = this;

	  var i = this.deps.length;
	  while (i--) {
	    var dep = this$1.deps[i];
	    if (!this$1.newDepIds.has(dep.id)) {
	      dep.removeSub(this$1);
	    }
	  }
	  var tmp = this.depIds;
	  this.depIds = this.newDepIds;
	  this.newDepIds = tmp;
	  this.newDepIds.clear();
	  tmp = this.deps;
	  this.deps = this.newDeps;
	  this.newDeps = tmp;
	  this.newDeps.length = 0;
	};

	/**
	 * Subscriber interface.
	 * Will be called when a dependency changes.
	 */
	Watcher.prototype.update = function update() {
	  /* istanbul ignore else */
	  if (this.lazy) {
	    this.dirty = true;
	  } else if (this.sync) {
	    this.run();
	  } else {
	    queueWatcher(this);
	  }
	};

	/**
	 * Scheduler job interface.
	 * Will be called by the scheduler.
	 */
	Watcher.prototype.run = function run() {
	  if (this.active) {
	    var value = this.get();
	    if (value !== this.value ||
	    // Deep watchers and watchers on Object/Arrays should fire even
	    // when the value is the same, because the value may
	    // have mutated.
	    isObject(value) || this.deep) {
	      // set new value
	      var oldValue = this.value;
	      this.value = value;
	      if (this.user) {
	        try {
	          this.cb.call(this.vm, value, oldValue);
	        } catch (e) {
	          handleError(e, this.vm, "callback for watcher \"" + this.expression + "\"");
	        }
	      } else {
	        this.cb.call(this.vm, value, oldValue);
	      }
	    }
	  }
	};

	/**
	 * Evaluate the value of the watcher.
	 * This only gets called for lazy watchers.
	 */
	Watcher.prototype.evaluate = function evaluate() {
	  this.value = this.get();
	  this.dirty = false;
	};

	/**
	 * Depend on all deps collected by this watcher.
	 */
	Watcher.prototype.depend = function depend() {
	  var this$1 = this;

	  var i = this.deps.length;
	  while (i--) {
	    this$1.deps[i].depend();
	  }
	};

	/**
	 * Remove self from all dependencies' subscriber list.
	 */
	Watcher.prototype.teardown = function teardown() {
	  var this$1 = this;

	  if (this.active) {
	    // remove self from vm's watcher list
	    // this is a somewhat expensive operation so we skip it
	    // if the vm is being destroyed.
	    if (!this.vm._isBeingDestroyed) {
	      remove(this.vm._watchers, this);
	    }
	    var i = this.deps.length;
	    while (i--) {
	      this$1.deps[i].removeSub(this$1);
	    }
	    this.active = false;
	  }
	};

	/**
	 * Recursively traverse an object to evoke all converted
	 * getters, so that every nested property inside the object
	 * is collected as a "deep" dependency.
	 */
	var seenObjects = new _Set();
	function traverse(val) {
	  seenObjects.clear();
	  _traverse(val, seenObjects);
	}

	function _traverse(val, seen) {
	  var i, keys;
	  var isA = Array.isArray(val);
	  if (!isA && !isObject(val) || !Object.isExtensible(val)) {
	    return;
	  }
	  if (val.__ob__) {
	    var depId = val.__ob__.dep.id;
	    if (seen.has(depId)) {
	      return;
	    }
	    seen.add(depId);
	  }
	  if (isA) {
	    i = val.length;
	    while (i--) {
	      _traverse(val[i], seen);
	    }
	  } else {
	    keys = Object.keys(val);
	    i = keys.length;
	    while (i--) {
	      _traverse(val[keys[i]], seen);
	    }
	  }
	}

	/*  */

	var sharedPropertyDefinition = {
	  enumerable: true,
	  configurable: true,
	  get: noop,
	  set: noop
	};

	function proxy(target, sourceKey, key) {
	  sharedPropertyDefinition.get = function proxyGetter() {
	    return this[sourceKey][key];
	  };
	  sharedPropertyDefinition.set = function proxySetter(val) {
	    this[sourceKey][key] = val;
	  };
	  Object.defineProperty(target, key, sharedPropertyDefinition);
	}

	function initState(vm) {
	  vm._watchers = [];
	  var opts = vm.$options;
	  if (opts.props) {
	    initProps(vm, opts.props);
	  }
	  if (opts.methods) {
	    initMethods(vm, opts.methods);
	  }
	  if (opts.data) {
	    initData(vm);
	  } else {
	    observe(vm._data = {}, true /* asRootData */);
	  }
	  if (opts.computed) {
	    initComputed(vm, opts.computed);
	  }
	  if (opts.watch) {
	    initWatch(vm, opts.watch);
	  }
	}

	var isReservedProp = {
	  key: 1,
	  ref: 1,
	  slot: 1
	};

	function initProps(vm, propsOptions) {
	  var propsData = vm.$options.propsData || {};
	  var props = vm._props = {};
	  // cache prop keys so that future props updates can iterate using Array
	  // instead of dynamic object key enumeration.
	  var keys = vm.$options._propKeys = [];
	  var isRoot = !vm.$parent;
	  // root instance props should be converted
	  observerState.shouldConvert = isRoot;
	  var loop = function loop(key) {
	    keys.push(key);
	    var value = validateProp(key, propsOptions, propsData, vm);
	    /* istanbul ignore else */
	    if (process.env.NODE_ENV !== 'production') {
	      if (isReservedProp[key] || config.isReservedAttr(key)) {
	        warn("\"" + key + "\" is a reserved attribute and cannot be used as component prop.", vm);
	      }
	      defineReactive$$1(props, key, value, function () {
	        if (vm.$parent && !observerState.isSettingProps) {
	          warn("Avoid mutating a prop directly since the value will be " + "overwritten whenever the parent component re-renders. " + "Instead, use a data or computed property based on the prop's " + "value. Prop being mutated: \"" + key + "\"", vm);
	        }
	      });
	    } else {
	      defineReactive$$1(props, key, value);
	    }
	    // static props are already proxied on the component's prototype
	    // during Vue.extend(). We only need to proxy props defined at
	    // instantiation here.
	    if (!(key in vm)) {
	      proxy(vm, "_props", key);
	    }
	  };

	  for (var key in propsOptions) {
	    loop(key);
	  }observerState.shouldConvert = true;
	}

	function initData(vm) {
	  var data = vm.$options.data;
	  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};
	  if (!isPlainObject(data)) {
	    data = {};
	    process.env.NODE_ENV !== 'production' && warn('data functions should return an object:\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);
	  }
	  // proxy data on instance
	  var keys = Object.keys(data);
	  var props = vm.$options.props;
	  var i = keys.length;
	  while (i--) {
	    if (props && hasOwn(props, keys[i])) {
	      process.env.NODE_ENV !== 'production' && warn("The data property \"" + keys[i] + "\" is already declared as a prop. " + "Use prop default value instead.", vm);
	    } else if (!isReserved(keys[i])) {
	      proxy(vm, "_data", keys[i]);
	    }
	  }
	  // observe data
	  observe(data, true /* asRootData */);
	}

	function getData(data, vm) {
	  try {
	    return data.call(vm);
	  } catch (e) {
	    handleError(e, vm, "data()");
	    return {};
	  }
	}

	var computedWatcherOptions = { lazy: true };

	function initComputed(vm, computed) {
	  var watchers = vm._computedWatchers = Object.create(null);

	  for (var key in computed) {
	    var userDef = computed[key];
	    var getter = typeof userDef === 'function' ? userDef : userDef.get;
	    if (process.env.NODE_ENV !== 'production') {
	      if (getter === undefined) {
	        warn("No getter function has been defined for computed property \"" + key + "\".", vm);
	        getter = noop;
	      }
	    }
	    // create internal watcher for the computed property.
	    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);

	    // component-defined computed properties are already defined on the
	    // component prototype. We only need to define computed properties defined
	    // at instantiation here.
	    if (!(key in vm)) {
	      defineComputed(vm, key, userDef);
	    } else if (process.env.NODE_ENV !== 'production') {
	      if (key in vm.$data) {
	        warn("The computed property \"" + key + "\" is already defined in data.", vm);
	      } else if (vm.$options.props && key in vm.$options.props) {
	        warn("The computed property \"" + key + "\" is already defined as a prop.", vm);
	      }
	    }
	  }
	}

	function defineComputed(target, key, userDef) {
	  if (typeof userDef === 'function') {
	    sharedPropertyDefinition.get = createComputedGetter(key);
	    sharedPropertyDefinition.set = noop;
	  } else {
	    sharedPropertyDefinition.get = userDef.get ? userDef.cache !== false ? createComputedGetter(key) : userDef.get : noop;
	    sharedPropertyDefinition.set = userDef.set ? userDef.set : noop;
	  }
	  Object.defineProperty(target, key, sharedPropertyDefinition);
	}

	function createComputedGetter(key) {
	  return function computedGetter() {
	    var watcher = this._computedWatchers && this._computedWatchers[key];
	    if (watcher) {
	      if (watcher.dirty) {
	        watcher.evaluate();
	      }
	      if (Dep.target) {
	        watcher.depend();
	      }
	      return watcher.value;
	    }
	  };
	}

	function initMethods(vm, methods) {
	  var props = vm.$options.props;
	  for (var key in methods) {
	    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
	    if (process.env.NODE_ENV !== 'production') {
	      if (methods[key] == null) {
	        warn("method \"" + key + "\" has an undefined value in the component definition. " + "Did you reference the function correctly?", vm);
	      }
	      if (props && hasOwn(props, key)) {
	        warn("method \"" + key + "\" has already been defined as a prop.", vm);
	      }
	    }
	  }
	}

	function initWatch(vm, watch) {
	  for (var key in watch) {
	    var handler = watch[key];
	    if (Array.isArray(handler)) {
	      for (var i = 0; i < handler.length; i++) {
	        createWatcher(vm, key, handler[i]);
	      }
	    } else {
	      createWatcher(vm, key, handler);
	    }
	  }
	}

	function createWatcher(vm, key, handler) {
	  var options;
	  if (isPlainObject(handler)) {
	    options = handler;
	    handler = handler.handler;
	  }
	  if (typeof handler === 'string') {
	    handler = vm[handler];
	  }
	  vm.$watch(key, handler, options);
	}

	function stateMixin(Vue) {
	  // flow somehow has problems with directly declared definition object
	  // when using Object.defineProperty, so we have to procedurally build up
	  // the object here.
	  var dataDef = {};
	  dataDef.get = function () {
	    return this._data;
	  };
	  var propsDef = {};
	  propsDef.get = function () {
	    return this._props;
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    dataDef.set = function (newData) {
	      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);
	    };
	    propsDef.set = function () {
	      warn("$props is readonly.", this);
	    };
	  }
	  Object.defineProperty(Vue.prototype, '$data', dataDef);
	  Object.defineProperty(Vue.prototype, '$props', propsDef);

	  Vue.prototype.$set = set;
	  Vue.prototype.$delete = del;

	  Vue.prototype.$watch = function (expOrFn, cb, options) {
	    var vm = this;
	    options = options || {};
	    options.user = true;
	    var watcher = new Watcher(vm, expOrFn, cb, options);
	    if (options.immediate) {
	      cb.call(vm, watcher.value);
	    }
	    return function unwatchFn() {
	      watcher.teardown();
	    };
	  };
	}

	/*  */

	function initProvide(vm) {
	  var provide = vm.$options.provide;
	  if (provide) {
	    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;
	  }
	}

	function initInjections(vm) {
	  var result = resolveInject(vm.$options.inject, vm);
	  if (result) {
	    Object.keys(result).forEach(function (key) {
	      /* istanbul ignore else */
	      if (process.env.NODE_ENV !== 'production') {
	        defineReactive$$1(vm, key, result[key], function () {
	          warn("Avoid mutating an injected value directly since the changes will be " + "overwritten whenever the provided component re-renders. " + "injection being mutated: \"" + key + "\"", vm);
	        });
	      } else {
	        defineReactive$$1(vm, key, result[key]);
	      }
	    });
	  }
	}

	function resolveInject(inject, vm) {
	  if (inject) {
	    // inject is :any because flow is not smart enough to figure out cached
	    // isArray here
	    var isArray = Array.isArray(inject);
	    var result = Object.create(null);
	    var keys = isArray ? inject : hasSymbol ? Reflect.ownKeys(inject) : Object.keys(inject);

	    for (var i = 0; i < keys.length; i++) {
	      var key = keys[i];
	      var provideKey = isArray ? key : inject[key];
	      var source = vm;
	      while (source) {
	        if (source._provided && provideKey in source._provided) {
	          result[key] = source._provided[provideKey];
	          break;
	        }
	        source = source.$parent;
	      }
	    }
	    return result;
	  }
	}

	/*  */

	function createFunctionalComponent(Ctor, propsData, data, context, children) {
	  var props = {};
	  var propOptions = Ctor.options.props;
	  if (isDef(propOptions)) {
	    for (var key in propOptions) {
	      props[key] = validateProp(key, propOptions, propsData || {});
	    }
	  } else {
	    if (isDef(data.attrs)) {
	      mergeProps(props, data.attrs);
	    }
	    if (isDef(data.props)) {
	      mergeProps(props, data.props);
	    }
	  }
	  // ensure the createElement function in functional components
	  // gets a unique context - this is necessary for correct named slot check
	  var _context = Object.create(context);
	  var h = function h(a, b, c, d) {
	    return createElement(_context, a, b, c, d, true);
	  };
	  var vnode = Ctor.options.render.call(null, h, {
	    data: data,
	    props: props,
	    children: children,
	    parent: context,
	    listeners: data.on || {},
	    injections: resolveInject(Ctor.options.inject, context),
	    slots: function slots() {
	      return resolveSlots(children, context);
	    }
	  });
	  if (vnode instanceof VNode) {
	    vnode.functionalContext = context;
	    vnode.functionalOptions = Ctor.options;
	    if (data.slot) {
	      (vnode.data || (vnode.data = {})).slot = data.slot;
	    }
	  }
	  return vnode;
	}

	function mergeProps(to, from) {
	  for (var key in from) {
	    to[camelize(key)] = from[key];
	  }
	}

	/*  */

	// hooks to be invoked on component VNodes during patch
	var componentVNodeHooks = {
	  init: function init(vnode, hydrating, parentElm, refElm) {
	    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {
	      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance, parentElm, refElm);
	      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
	    } else if (vnode.data.keepAlive) {
	      // kept-alive components, treat as a patch
	      var mountedNode = vnode; // work around flow
	      componentVNodeHooks.prepatch(mountedNode, mountedNode);
	    }
	  },

	  prepatch: function prepatch(oldVnode, vnode) {
	    var options = vnode.componentOptions;
	    var child = vnode.componentInstance = oldVnode.componentInstance;
	    updateChildComponent(child, options.propsData, // updated props
	    options.listeners, // updated listeners
	    vnode, // new parent vnode
	    options.children // new children
	    );
	  },

	  insert: function insert(vnode) {
	    var context = vnode.context;
	    var componentInstance = vnode.componentInstance;
	    if (!componentInstance._isMounted) {
	      componentInstance._isMounted = true;
	      callHook(componentInstance, 'mounted');
	    }
	    if (vnode.data.keepAlive) {
	      if (context._isMounted) {
	        // vue-router#1212
	        // During updates, a kept-alive component's child components may
	        // change, so directly walking the tree here may call activated hooks
	        // on incorrect children. Instead we push them into a queue which will
	        // be processed after the whole patch process ended.
	        queueActivatedComponent(componentInstance);
	      } else {
	        activateChildComponent(componentInstance, true /* direct */);
	      }
	    }
	  },

	  destroy: function destroy(vnode) {
	    var componentInstance = vnode.componentInstance;
	    if (!componentInstance._isDestroyed) {
	      if (!vnode.data.keepAlive) {
	        componentInstance.$destroy();
	      } else {
	        deactivateChildComponent(componentInstance, true /* direct */);
	      }
	    }
	  }
	};

	var hooksToMerge = Object.keys(componentVNodeHooks);

	function createComponent(Ctor, data, context, children, tag) {
	  if (isUndef(Ctor)) {
	    return;
	  }

	  var baseCtor = context.$options._base;

	  // plain options object: turn it into a constructor
	  if (isObject(Ctor)) {
	    Ctor = baseCtor.extend(Ctor);
	  }

	  // if at this stage it's not a constructor or an async component factory,
	  // reject.
	  if (typeof Ctor !== 'function') {
	    if (process.env.NODE_ENV !== 'production') {
	      warn("Invalid Component definition: " + String(Ctor), context);
	    }
	    return;
	  }

	  // async component
	  if (isUndef(Ctor.cid)) {
	    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);
	    if (Ctor === undefined) {
	      // return nothing if this is indeed an async component
	      // wait for the callback to trigger parent update.
	      return;
	    }
	  }

	  // resolve constructor options in case global mixins are applied after
	  // component constructor creation
	  resolveConstructorOptions(Ctor);

	  data = data || {};

	  // transform component v-model data into props & events
	  if (isDef(data.model)) {
	    transformModel(Ctor.options, data);
	  }

	  // extract props
	  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

	  // functional component
	  if (isTrue(Ctor.options.functional)) {
	    return createFunctionalComponent(Ctor, propsData, data, context, children);
	  }

	  // extract listeners, since these needs to be treated as
	  // child component listeners instead of DOM listeners
	  var listeners = data.on;
	  // replace with listeners with .native modifier
	  data.on = data.nativeOn;

	  if (isTrue(Ctor.options.abstract)) {
	    // abstract components do not keep anything
	    // other than props & listeners
	    data = {};
	  }

	  // merge component management hooks onto the placeholder node
	  mergeHooks(data);

	  // return a placeholder vnode
	  var name = Ctor.options.name || tag;
	  var vnode = new VNode("vue-component-" + Ctor.cid + (name ? "-" + name : ''), data, undefined, undefined, undefined, context, { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children });
	  return vnode;
	}

	function createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't
	parent, // activeInstance in lifecycle state
	parentElm, refElm) {
	  var vnodeComponentOptions = vnode.componentOptions;
	  var options = {
	    _isComponent: true,
	    parent: parent,
	    propsData: vnodeComponentOptions.propsData,
	    _componentTag: vnodeComponentOptions.tag,
	    _parentVnode: vnode,
	    _parentListeners: vnodeComponentOptions.listeners,
	    _renderChildren: vnodeComponentOptions.children,
	    _parentElm: parentElm || null,
	    _refElm: refElm || null
	  };
	  // check inline-template render functions
	  var inlineTemplate = vnode.data.inlineTemplate;
	  if (isDef(inlineTemplate)) {
	    options.render = inlineTemplate.render;
	    options.staticRenderFns = inlineTemplate.staticRenderFns;
	  }
	  return new vnodeComponentOptions.Ctor(options);
	}

	function mergeHooks(data) {
	  if (!data.hook) {
	    data.hook = {};
	  }
	  for (var i = 0; i < hooksToMerge.length; i++) {
	    var key = hooksToMerge[i];
	    var fromParent = data.hook[key];
	    var ours = componentVNodeHooks[key];
	    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;
	  }
	}

	function mergeHook$1(one, two) {
	  return function (a, b, c, d) {
	    one(a, b, c, d);
	    two(a, b, c, d);
	  };
	}

	// transform component v-model info (value and callback) into
	// prop and event handler respectively.
	function transformModel(options, data) {
	  var prop = options.model && options.model.prop || 'value';
	  var event = options.model && options.model.event || 'input';(data.props || (data.props = {}))[prop] = data.model.value;
	  var on = data.on || (data.on = {});
	  if (isDef(on[event])) {
	    on[event] = [data.model.callback].concat(on[event]);
	  } else {
	    on[event] = data.model.callback;
	  }
	}

	/*  */

	var SIMPLE_NORMALIZE = 1;
	var ALWAYS_NORMALIZE = 2;

	// wrapper function for providing a more flexible interface
	// without getting yelled at by flow
	function createElement(context, tag, data, children, normalizationType, alwaysNormalize) {
	  if (Array.isArray(data) || isPrimitive(data)) {
	    normalizationType = children;
	    children = data;
	    data = undefined;
	  }
	  if (isTrue(alwaysNormalize)) {
	    normalizationType = ALWAYS_NORMALIZE;
	  }
	  return _createElement(context, tag, data, children, normalizationType);
	}

	function _createElement(context, tag, data, children, normalizationType) {
	  if (isDef(data) && isDef(data.__ob__)) {
	    process.env.NODE_ENV !== 'production' && warn("Avoid using observed data object as vnode data: " + JSON.stringify(data) + "\n" + 'Always create fresh vnode data objects in each render!', context);
	    return createEmptyVNode();
	  }
	  if (!tag) {
	    // in case of component :is set to falsy value
	    return createEmptyVNode();
	  }
	  // support single function children as default scoped slot
	  if (Array.isArray(children) && typeof children[0] === 'function') {
	    data = data || {};
	    data.scopedSlots = { default: children[0] };
	    children.length = 0;
	  }
	  if (normalizationType === ALWAYS_NORMALIZE) {
	    children = normalizeChildren(children);
	  } else if (normalizationType === SIMPLE_NORMALIZE) {
	    children = simpleNormalizeChildren(children);
	  }
	  var vnode, ns;
	  if (typeof tag === 'string') {
	    var Ctor;
	    ns = config.getTagNamespace(tag);
	    if (config.isReservedTag(tag)) {
	      // platform built-in elements
	      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);
	    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
	      // component
	      vnode = createComponent(Ctor, data, context, children, tag);
	    } else {
	      // unknown or unlisted namespaced elements
	      // check at runtime because it may get assigned a namespace when its
	      // parent normalizes children
	      vnode = new VNode(tag, data, children, undefined, undefined, context);
	    }
	  } else {
	    // direct component options / constructor
	    vnode = createComponent(tag, data, context, children);
	  }
	  if (isDef(vnode)) {
	    if (ns) {
	      applyNS(vnode, ns);
	    }
	    return vnode;
	  } else {
	    return createEmptyVNode();
	  }
	}

	function applyNS(vnode, ns) {
	  vnode.ns = ns;
	  if (vnode.tag === 'foreignObject') {
	    // use default namespace inside foreignObject
	    return;
	  }
	  if (isDef(vnode.children)) {
	    for (var i = 0, l = vnode.children.length; i < l; i++) {
	      var child = vnode.children[i];
	      if (isDef(child.tag) && isUndef(child.ns)) {
	        applyNS(child, ns);
	      }
	    }
	  }
	}

	/*  */

	/**
	 * Runtime helper for rendering v-for lists.
	 */
	function renderList(val, render) {
	  var ret, i, l, keys, key;
	  if (Array.isArray(val) || typeof val === 'string') {
	    ret = new Array(val.length);
	    for (i = 0, l = val.length; i < l; i++) {
	      ret[i] = render(val[i], i);
	    }
	  } else if (typeof val === 'number') {
	    ret = new Array(val);
	    for (i = 0; i < val; i++) {
	      ret[i] = render(i + 1, i);
	    }
	  } else if (isObject(val)) {
	    keys = Object.keys(val);
	    ret = new Array(keys.length);
	    for (i = 0, l = keys.length; i < l; i++) {
	      key = keys[i];
	      ret[i] = render(val[key], key, i);
	    }
	  }
	  if (isDef(ret)) {
	    ret._isVList = true;
	  }
	  return ret;
	}

	/*  */

	/**
	 * Runtime helper for rendering <slot>
	 */
	function renderSlot(name, fallback, props, bindObject) {
	  var scopedSlotFn = this.$scopedSlots[name];
	  if (scopedSlotFn) {
	    // scoped slot
	    props = props || {};
	    if (bindObject) {
	      extend(props, bindObject);
	    }
	    return scopedSlotFn(props) || fallback;
	  } else {
	    var slotNodes = this.$slots[name];
	    // warn duplicate slot usage
	    if (slotNodes && process.env.NODE_ENV !== 'production') {
	      slotNodes._rendered && warn("Duplicate presence of slot \"" + name + "\" found in the same render tree " + "- this will likely cause render errors.", this);
	      slotNodes._rendered = true;
	    }
	    return slotNodes || fallback;
	  }
	}

	/*  */

	/**
	 * Runtime helper for resolving filters
	 */
	function resolveFilter(id) {
	  return resolveAsset(this.$options, 'filters', id, true) || identity;
	}

	/*  */

	/**
	 * Runtime helper for checking keyCodes from config.
	 */
	function checkKeyCodes(eventKeyCode, key, builtInAlias) {
	  var keyCodes = config.keyCodes[key] || builtInAlias;
	  if (Array.isArray(keyCodes)) {
	    return keyCodes.indexOf(eventKeyCode) === -1;
	  } else {
	    return keyCodes !== eventKeyCode;
	  }
	}

	/*  */

	/**
	 * Runtime helper for merging v-bind="object" into a VNode's data.
	 */
	function bindObjectProps(data, tag, value, asProp) {
	  if (value) {
	    if (!isObject(value)) {
	      process.env.NODE_ENV !== 'production' && warn('v-bind without argument expects an Object or Array value', this);
	    } else {
	      if (Array.isArray(value)) {
	        value = toObject(value);
	      }
	      var hash;
	      for (var key in value) {
	        if (key === 'class' || key === 'style') {
	          hash = data;
	        } else {
	          var type = data.attrs && data.attrs.type;
	          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});
	        }
	        if (!(key in hash)) {
	          hash[key] = value[key];
	        }
	      }
	    }
	  }
	  return data;
	}

	/*  */

	/**
	 * Runtime helper for rendering static trees.
	 */
	function renderStatic(index, isInFor) {
	  var tree = this._staticTrees[index];
	  // if has already-rendered static tree and not inside v-for,
	  // we can reuse the same tree by doing a shallow clone.
	  if (tree && !isInFor) {
	    return Array.isArray(tree) ? cloneVNodes(tree) : cloneVNode(tree);
	  }
	  // otherwise, render a fresh tree.
	  tree = this._staticTrees[index] = this.$options.staticRenderFns[index].call(this._renderProxy);
	  markStatic(tree, "__static__" + index, false);
	  return tree;
	}

	/**
	 * Runtime helper for v-once.
	 * Effectively it means marking the node as static with a unique key.
	 */
	function markOnce(tree, index, key) {
	  markStatic(tree, "__once__" + index + (key ? "_" + key : ""), true);
	  return tree;
	}

	function markStatic(tree, key, isOnce) {
	  if (Array.isArray(tree)) {
	    for (var i = 0; i < tree.length; i++) {
	      if (tree[i] && typeof tree[i] !== 'string') {
	        markStaticNode(tree[i], key + "_" + i, isOnce);
	      }
	    }
	  } else {
	    markStaticNode(tree, key, isOnce);
	  }
	}

	function markStaticNode(node, key, isOnce) {
	  node.isStatic = true;
	  node.key = key;
	  node.isOnce = isOnce;
	}

	/*  */

	function initRender(vm) {
	  vm._vnode = null; // the root of the child tree
	  vm._staticTrees = null;
	  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree
	  var renderContext = parentVnode && parentVnode.context;
	  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);
	  vm.$scopedSlots = emptyObject;
	  // bind the createElement fn to this instance
	  // so that we get proper render context inside it.
	  // args order: tag, data, children, normalizationType, alwaysNormalize
	  // internal version is used by render functions compiled from templates
	  vm._c = function (a, b, c, d) {
	    return createElement(vm, a, b, c, d, false);
	  };
	  // normalization is always applied for the public version, used in
	  // user-written render functions.
	  vm.$createElement = function (a, b, c, d) {
	    return createElement(vm, a, b, c, d, true);
	  };
	}

	function renderMixin(Vue) {
	  Vue.prototype.$nextTick = function (fn) {
	    return nextTick(fn, this);
	  };

	  Vue.prototype._render = function () {
	    var vm = this;
	    var ref = vm.$options;
	    var render = ref.render;
	    var staticRenderFns = ref.staticRenderFns;
	    var _parentVnode = ref._parentVnode;

	    if (vm._isMounted) {
	      // clone slot nodes on re-renders
	      for (var key in vm.$slots) {
	        vm.$slots[key] = cloneVNodes(vm.$slots[key]);
	      }
	    }

	    vm.$scopedSlots = _parentVnode && _parentVnode.data.scopedSlots || emptyObject;

	    if (staticRenderFns && !vm._staticTrees) {
	      vm._staticTrees = [];
	    }
	    // set parent vnode. this allows render functions to have access
	    // to the data on the placeholder node.
	    vm.$vnode = _parentVnode;
	    // render self
	    var vnode;
	    try {
	      vnode = render.call(vm._renderProxy, vm.$createElement);
	    } catch (e) {
	      handleError(e, vm, "render function");
	      // return error render result,
	      // or previous vnode to prevent render error causing blank component
	      /* istanbul ignore else */
	      if (process.env.NODE_ENV !== 'production') {
	        vnode = vm.$options.renderError ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e) : vm._vnode;
	      } else {
	        vnode = vm._vnode;
	      }
	    }
	    // return empty vnode in case the render function errored out
	    if (!(vnode instanceof VNode)) {
	      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {
	        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);
	      }
	      vnode = createEmptyVNode();
	    }
	    // set parent
	    vnode.parent = _parentVnode;
	    return vnode;
	  };

	  // internal render helpers.
	  // these are exposed on the instance prototype to reduce generated render
	  // code size.
	  Vue.prototype._o = markOnce;
	  Vue.prototype._n = toNumber;
	  Vue.prototype._s = toString;
	  Vue.prototype._l = renderList;
	  Vue.prototype._t = renderSlot;
	  Vue.prototype._q = looseEqual;
	  Vue.prototype._i = looseIndexOf;
	  Vue.prototype._m = renderStatic;
	  Vue.prototype._f = resolveFilter;
	  Vue.prototype._k = checkKeyCodes;
	  Vue.prototype._b = bindObjectProps;
	  Vue.prototype._v = createTextVNode;
	  Vue.prototype._e = createEmptyVNode;
	  Vue.prototype._u = resolveScopedSlots;
	}

	/*  */

	var uid$1 = 0;

	function initMixin(Vue) {
	  Vue.prototype._init = function (options) {
	    var vm = this;
	    // a uid
	    vm._uid = uid$1++;

	    var startTag, endTag;
	    /* istanbul ignore if */
	    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
	      startTag = "vue-perf-init:" + vm._uid;
	      endTag = "vue-perf-end:" + vm._uid;
	      mark(startTag);
	    }

	    // a flag to avoid this being observed
	    vm._isVue = true;
	    // merge options
	    if (options && options._isComponent) {
	      // optimize internal component instantiation
	      // since dynamic options merging is pretty slow, and none of the
	      // internal component options needs special treatment.
	      initInternalComponent(vm, options);
	    } else {
	      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);
	    }
	    /* istanbul ignore else */
	    if (process.env.NODE_ENV !== 'production') {
	      initProxy(vm);
	    } else {
	      vm._renderProxy = vm;
	    }
	    // expose real self
	    vm._self = vm;
	    initLifecycle(vm);
	    initEvents(vm);
	    initRender(vm);
	    callHook(vm, 'beforeCreate');
	    initInjections(vm); // resolve injections before data/props
	    initState(vm);
	    initProvide(vm); // resolve provide after data/props
	    callHook(vm, 'created');

	    /* istanbul ignore if */
	    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
	      vm._name = formatComponentName(vm, false);
	      mark(endTag);
	      measure(vm._name + " init", startTag, endTag);
	    }

	    if (vm.$options.el) {
	      vm.$mount(vm.$options.el);
	    }
	  };
	}

	function initInternalComponent(vm, options) {
	  var opts = vm.$options = Object.create(vm.constructor.options);
	  // doing this because it's faster than dynamic enumeration.
	  opts.parent = options.parent;
	  opts.propsData = options.propsData;
	  opts._parentVnode = options._parentVnode;
	  opts._parentListeners = options._parentListeners;
	  opts._renderChildren = options._renderChildren;
	  opts._componentTag = options._componentTag;
	  opts._parentElm = options._parentElm;
	  opts._refElm = options._refElm;
	  if (options.render) {
	    opts.render = options.render;
	    opts.staticRenderFns = options.staticRenderFns;
	  }
	}

	function resolveConstructorOptions(Ctor) {
	  var options = Ctor.options;
	  if (Ctor.super) {
	    var superOptions = resolveConstructorOptions(Ctor.super);
	    var cachedSuperOptions = Ctor.superOptions;
	    if (superOptions !== cachedSuperOptions) {
	      // super option changed,
	      // need to resolve new options.
	      Ctor.superOptions = superOptions;
	      // check if there are any late-modified/attached options (#4976)
	      var modifiedOptions = resolveModifiedOptions(Ctor);
	      // update base extend options
	      if (modifiedOptions) {
	        extend(Ctor.extendOptions, modifiedOptions);
	      }
	      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
	      if (options.name) {
	        options.components[options.name] = Ctor;
	      }
	    }
	  }
	  return options;
	}

	function resolveModifiedOptions(Ctor) {
	  var modified;
	  var latest = Ctor.options;
	  var extended = Ctor.extendOptions;
	  var sealed = Ctor.sealedOptions;
	  for (var key in latest) {
	    if (latest[key] !== sealed[key]) {
	      if (!modified) {
	        modified = {};
	      }
	      modified[key] = dedupe(latest[key], extended[key], sealed[key]);
	    }
	  }
	  return modified;
	}

	function dedupe(latest, extended, sealed) {
	  // compare latest and sealed to ensure lifecycle hooks won't be duplicated
	  // between merges
	  if (Array.isArray(latest)) {
	    var res = [];
	    sealed = Array.isArray(sealed) ? sealed : [sealed];
	    extended = Array.isArray(extended) ? extended : [extended];
	    for (var i = 0; i < latest.length; i++) {
	      // push original options and not sealed options to exclude duplicated options
	      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
	        res.push(latest[i]);
	      }
	    }
	    return res;
	  } else {
	    return latest;
	  }
	}

	function Vue$3(options) {
	  if (process.env.NODE_ENV !== 'production' && !(this instanceof Vue$3)) {
	    warn('Vue is a constructor and should be called with the `new` keyword');
	  }
	  this._init(options);
	}

	initMixin(Vue$3);
	stateMixin(Vue$3);
	eventsMixin(Vue$3);
	lifecycleMixin(Vue$3);
	renderMixin(Vue$3);

	/*  */

	function initUse(Vue) {
	  Vue.use = function (plugin) {
	    /* istanbul ignore if */
	    if (plugin.installed) {
	      return this;
	    }
	    // additional parameters
	    var args = toArray(arguments, 1);
	    args.unshift(this);
	    if (typeof plugin.install === 'function') {
	      plugin.install.apply(plugin, args);
	    } else if (typeof plugin === 'function') {
	      plugin.apply(null, args);
	    }
	    plugin.installed = true;
	    return this;
	  };
	}

	/*  */

	function initMixin$1(Vue) {
	  Vue.mixin = function (mixin) {
	    this.options = mergeOptions(this.options, mixin);
	    return this;
	  };
	}

	/*  */

	function initExtend(Vue) {
	  /**
	   * Each instance constructor, including Vue, has a unique
	   * cid. This enables us to create wrapped "child
	   * constructors" for prototypal inheritance and cache them.
	   */
	  Vue.cid = 0;
	  var cid = 1;

	  /**
	   * Class inheritance
	   */
	  Vue.extend = function (extendOptions) {
	    extendOptions = extendOptions || {};
	    var Super = this;
	    var SuperId = Super.cid;
	    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
	    if (cachedCtors[SuperId]) {
	      return cachedCtors[SuperId];
	    }

	    var name = extendOptions.name || Super.options.name;
	    if (process.env.NODE_ENV !== 'production') {
	      if (!/^[a-zA-Z][\w-]*$/.test(name)) {
	        warn('Invalid component name: "' + name + '". Component names ' + 'can only contain alphanumeric characters and the hyphen, ' + 'and must start with a letter.');
	      }
	    }

	    var Sub = function VueComponent(options) {
	      this._init(options);
	    };
	    Sub.prototype = Object.create(Super.prototype);
	    Sub.prototype.constructor = Sub;
	    Sub.cid = cid++;
	    Sub.options = mergeOptions(Super.options, extendOptions);
	    Sub['super'] = Super;

	    // For props and computed properties, we define the proxy getters on
	    // the Vue instances at extension time, on the extended prototype. This
	    // avoids Object.defineProperty calls for each instance created.
	    if (Sub.options.props) {
	      initProps$1(Sub);
	    }
	    if (Sub.options.computed) {
	      initComputed$1(Sub);
	    }

	    // allow further extension/mixin/plugin usage
	    Sub.extend = Super.extend;
	    Sub.mixin = Super.mixin;
	    Sub.use = Super.use;

	    // create asset registers, so extended classes
	    // can have their private assets too.
	    ASSET_TYPES.forEach(function (type) {
	      Sub[type] = Super[type];
	    });
	    // enable recursive self-lookup
	    if (name) {
	      Sub.options.components[name] = Sub;
	    }

	    // keep a reference to the super options at extension time.
	    // later at instantiation we can check if Super's options have
	    // been updated.
	    Sub.superOptions = Super.options;
	    Sub.extendOptions = extendOptions;
	    Sub.sealedOptions = extend({}, Sub.options);

	    // cache constructor
	    cachedCtors[SuperId] = Sub;
	    return Sub;
	  };
	}

	function initProps$1(Comp) {
	  var props = Comp.options.props;
	  for (var key in props) {
	    proxy(Comp.prototype, "_props", key);
	  }
	}

	function initComputed$1(Comp) {
	  var computed = Comp.options.computed;
	  for (var key in computed) {
	    defineComputed(Comp.prototype, key, computed[key]);
	  }
	}

	/*  */

	function initAssetRegisters(Vue) {
	  /**
	   * Create asset registration methods.
	   */
	  ASSET_TYPES.forEach(function (type) {
	    Vue[type] = function (id, definition) {
	      if (!definition) {
	        return this.options[type + 's'][id];
	      } else {
	        /* istanbul ignore if */
	        if (process.env.NODE_ENV !== 'production') {
	          if (type === 'component' && config.isReservedTag(id)) {
	            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);
	          }
	        }
	        if (type === 'component' && isPlainObject(definition)) {
	          definition.name = definition.name || id;
	          definition = this.options._base.extend(definition);
	        }
	        if (type === 'directive' && typeof definition === 'function') {
	          definition = { bind: definition, update: definition };
	        }
	        this.options[type + 's'][id] = definition;
	        return definition;
	      }
	    };
	  });
	}

	/*  */

	var patternTypes = [String, RegExp];

	function getComponentName(opts) {
	  return opts && (opts.Ctor.options.name || opts.tag);
	}

	function matches(pattern, name) {
	  if (typeof pattern === 'string') {
	    return pattern.split(',').indexOf(name) > -1;
	  } else if (isRegExp(pattern)) {
	    return pattern.test(name);
	  }
	  /* istanbul ignore next */
	  return false;
	}

	function pruneCache(cache, current, filter) {
	  for (var key in cache) {
	    var cachedNode = cache[key];
	    if (cachedNode) {
	      var name = getComponentName(cachedNode.componentOptions);
	      if (name && !filter(name)) {
	        if (cachedNode !== current) {
	          pruneCacheEntry(cachedNode);
	        }
	        cache[key] = null;
	      }
	    }
	  }
	}

	function pruneCacheEntry(vnode) {
	  if (vnode) {
	    vnode.componentInstance.$destroy();
	  }
	}

	var KeepAlive = {
	  name: 'keep-alive',
	  abstract: true,

	  props: {
	    include: patternTypes,
	    exclude: patternTypes
	  },

	  created: function created() {
	    this.cache = Object.create(null);
	  },

	  destroyed: function destroyed() {
	    var this$1 = this;

	    for (var key in this$1.cache) {
	      pruneCacheEntry(this$1.cache[key]);
	    }
	  },

	  watch: {
	    include: function include(val) {
	      pruneCache(this.cache, this._vnode, function (name) {
	        return matches(val, name);
	      });
	    },
	    exclude: function exclude(val) {
	      pruneCache(this.cache, this._vnode, function (name) {
	        return !matches(val, name);
	      });
	    }
	  },

	  render: function render() {
	    var vnode = getFirstComponentChild(this.$slots.default);
	    var componentOptions = vnode && vnode.componentOptions;
	    if (componentOptions) {
	      // check pattern
	      var name = getComponentName(componentOptions);
	      if (name && (this.include && !matches(this.include, name) || this.exclude && matches(this.exclude, name))) {
	        return vnode;
	      }
	      var key = vnode.key == null
	      // same constructor may get registered as different local components
	      // so cid alone is not enough (#3269)
	      ? componentOptions.Ctor.cid + (componentOptions.tag ? "::" + componentOptions.tag : '') : vnode.key;
	      if (this.cache[key]) {
	        vnode.componentInstance = this.cache[key].componentInstance;
	      } else {
	        this.cache[key] = vnode;
	      }
	      vnode.data.keepAlive = true;
	    }
	    return vnode;
	  }
	};

	var builtInComponents = {
	  KeepAlive: KeepAlive
	};

	/*  */

	function initGlobalAPI(Vue) {
	  // config
	  var configDef = {};
	  configDef.get = function () {
	    return config;
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    configDef.set = function () {
	      warn('Do not replace the Vue.config object, set individual fields instead.');
	    };
	  }
	  Object.defineProperty(Vue, 'config', configDef);

	  // exposed util methods.
	  // NOTE: these are not considered part of the public API - avoid relying on
	  // them unless you are aware of the risk.
	  Vue.util = {
	    warn: warn,
	    extend: extend,
	    mergeOptions: mergeOptions,
	    defineReactive: defineReactive$$1
	  };

	  Vue.set = set;
	  Vue.delete = del;
	  Vue.nextTick = nextTick;

	  Vue.options = Object.create(null);
	  ASSET_TYPES.forEach(function (type) {
	    Vue.options[type + 's'] = Object.create(null);
	  });

	  // this is used to identify the "base" constructor to extend all plain-object
	  // components with in Weex's multi-instance scenarios.
	  Vue.options._base = Vue;

	  extend(Vue.options.components, builtInComponents);

	  initUse(Vue);
	  initMixin$1(Vue);
	  initExtend(Vue);
	  initAssetRegisters(Vue);
	}

	initGlobalAPI(Vue$3);

	Object.defineProperty(Vue$3.prototype, '$isServer', {
	  get: isServerRendering
	});

	Object.defineProperty(Vue$3.prototype, '$ssrContext', {
	  get: function get() {
	    /* istanbul ignore next */
	    return this.$vnode.ssrContext;
	  }
	});

	Vue$3.version = '2.3.4';

	/*  */

	// these are reserved for web because they are directly compiled away
	// during template compilation
	var isReservedAttr = makeMap('style,class');

	// attributes that should be using props for binding
	var acceptValue = makeMap('input,textarea,option,select');
	var mustUseProp = function mustUseProp(tag, type, attr) {
	  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';
	};

	var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

	var isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');

	var xlinkNS = 'http://www.w3.org/1999/xlink';

	var isXlink = function isXlink(name) {
	  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';
	};

	var getXlinkProp = function getXlinkProp(name) {
	  return isXlink(name) ? name.slice(6, name.length) : '';
	};

	var isFalsyAttrValue = function isFalsyAttrValue(val) {
	  return val == null || val === false;
	};

	/*  */

	function genClassForVnode(vnode) {
	  var data = vnode.data;
	  var parentNode = vnode;
	  var childNode = vnode;
	  while (isDef(childNode.componentInstance)) {
	    childNode = childNode.componentInstance._vnode;
	    if (childNode.data) {
	      data = mergeClassData(childNode.data, data);
	    }
	  }
	  while (isDef(parentNode = parentNode.parent)) {
	    if (parentNode.data) {
	      data = mergeClassData(data, parentNode.data);
	    }
	  }
	  return genClassFromData(data);
	}

	function mergeClassData(child, parent) {
	  return {
	    staticClass: concat(child.staticClass, parent.staticClass),
	    class: isDef(child.class) ? [child.class, parent.class] : parent.class
	  };
	}

	function genClassFromData(data) {
	  var dynamicClass = data.class;
	  var staticClass = data.staticClass;
	  if (isDef(staticClass) || isDef(dynamicClass)) {
	    return concat(staticClass, stringifyClass(dynamicClass));
	  }
	  /* istanbul ignore next */
	  return '';
	}

	function concat(a, b) {
	  return a ? b ? a + ' ' + b : a : b || '';
	}

	function stringifyClass(value) {
	  if (isUndef(value)) {
	    return '';
	  }
	  if (typeof value === 'string') {
	    return value;
	  }
	  var res = '';
	  if (Array.isArray(value)) {
	    var stringified;
	    for (var i = 0, l = value.length; i < l; i++) {
	      if (isDef(value[i])) {
	        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
	          res += stringified + ' ';
	        }
	      }
	    }
	    return res.slice(0, -1);
	  }
	  if (isObject(value)) {
	    for (var key in value) {
	      if (value[key]) {
	        res += key + ' ';
	      }
	    }
	    return res.slice(0, -1);
	  }
	  /* istanbul ignore next */
	  return res;
	}

	/*  */

	var namespaceMap = {
	  svg: 'http://www.w3.org/2000/svg',
	  math: 'http://www.w3.org/1998/Math/MathML'
	};

	var isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template');

	// this map is intentionally selective, only covering SVG elements that may
	// contain child elements.
	var isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);

	var isPreTag = function isPreTag(tag) {
	  return tag === 'pre';
	};

	var isReservedTag = function isReservedTag(tag) {
	  return isHTMLTag(tag) || isSVG(tag);
	};

	function getTagNamespace(tag) {
	  if (isSVG(tag)) {
	    return 'svg';
	  }
	  // basic support for MathML
	  // note it doesn't support other MathML elements being component roots
	  if (tag === 'math') {
	    return 'math';
	  }
	}

	var unknownElementCache = Object.create(null);
	function isUnknownElement(tag) {
	  /* istanbul ignore if */
	  if (!inBrowser) {
	    return true;
	  }
	  if (isReservedTag(tag)) {
	    return false;
	  }
	  tag = tag.toLowerCase();
	  /* istanbul ignore if */
	  if (unknownElementCache[tag] != null) {
	    return unknownElementCache[tag];
	  }
	  var el = document.createElement(tag);
	  if (tag.indexOf('-') > -1) {
	    // http://stackoverflow.com/a/28210364/1070244
	    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;
	  } else {
	    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());
	  }
	}

	/*  */

	/**
	 * Query an element selector if it's not an element already.
	 */
	function query(el) {
	  if (typeof el === 'string') {
	    var selected = document.querySelector(el);
	    if (!selected) {
	      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + el);
	      return document.createElement('div');
	    }
	    return selected;
	  } else {
	    return el;
	  }
	}

	/*  */

	function createElement$1(tagName, vnode) {
	  var elm = document.createElement(tagName);
	  if (tagName !== 'select') {
	    return elm;
	  }
	  // false or null will remove the attribute but undefined will not
	  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
	    elm.setAttribute('multiple', 'multiple');
	  }
	  return elm;
	}

	function createElementNS(namespace, tagName) {
	  return document.createElementNS(namespaceMap[namespace], tagName);
	}

	function createTextNode(text) {
	  return document.createTextNode(text);
	}

	function createComment(text) {
	  return document.createComment(text);
	}

	function insertBefore(parentNode, newNode, referenceNode) {
	  parentNode.insertBefore(newNode, referenceNode);
	}

	function removeChild(node, child) {
	  node.removeChild(child);
	}

	function appendChild(node, child) {
	  node.appendChild(child);
	}

	function parentNode(node) {
	  return node.parentNode;
	}

	function nextSibling(node) {
	  return node.nextSibling;
	}

	function tagName(node) {
	  return node.tagName;
	}

	function setTextContent(node, text) {
	  node.textContent = text;
	}

	function setAttribute(node, key, val) {
	  node.setAttribute(key, val);
	}

	var nodeOps = Object.freeze({
	  createElement: createElement$1,
	  createElementNS: createElementNS,
	  createTextNode: createTextNode,
	  createComment: createComment,
	  insertBefore: insertBefore,
	  removeChild: removeChild,
	  appendChild: appendChild,
	  parentNode: parentNode,
	  nextSibling: nextSibling,
	  tagName: tagName,
	  setTextContent: setTextContent,
	  setAttribute: setAttribute
	});

	/*  */

	var ref = {
	  create: function create(_, vnode) {
	    registerRef(vnode);
	  },
	  update: function update(oldVnode, vnode) {
	    if (oldVnode.data.ref !== vnode.data.ref) {
	      registerRef(oldVnode, true);
	      registerRef(vnode);
	    }
	  },
	  destroy: function destroy(vnode) {
	    registerRef(vnode, true);
	  }
	};

	function registerRef(vnode, isRemoval) {
	  var key = vnode.data.ref;
	  if (!key) {
	    return;
	  }

	  var vm = vnode.context;
	  var ref = vnode.componentInstance || vnode.elm;
	  var refs = vm.$refs;
	  if (isRemoval) {
	    if (Array.isArray(refs[key])) {
	      remove(refs[key], ref);
	    } else if (refs[key] === ref) {
	      refs[key] = undefined;
	    }
	  } else {
	    if (vnode.data.refInFor) {
	      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {
	        refs[key].push(ref);
	      } else {
	        refs[key] = [ref];
	      }
	    } else {
	      refs[key] = ref;
	    }
	  }
	}

	/**
	 * Virtual DOM patching algorithm based on Snabbdom by
	 * Simon Friis Vindum (@paldepind)
	 * Licensed under the MIT License
	 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
	 *
	 * modified by Evan You (@yyx990803)
	 *

	/*
	 * Not type-checking this because this file is perf-critical and the cost
	 * of making flow understand it is not worth it.
	 */

	var emptyNode = new VNode('', {}, []);

	var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

	function sameVnode(a, b) {
	  return a.key === b.key && a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b);
	}

	// Some browsers do not support dynamically changing type for <input>
	// so they need to be treated as different nodes
	function sameInputType(a, b) {
	  if (a.tag !== 'input') {
	    return true;
	  }
	  var i;
	  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
	  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
	  return typeA === typeB;
	}

	function createKeyToOldIdx(children, beginIdx, endIdx) {
	  var i, key;
	  var map = {};
	  for (i = beginIdx; i <= endIdx; ++i) {
	    key = children[i].key;
	    if (isDef(key)) {
	      map[key] = i;
	    }
	  }
	  return map;
	}

	function createPatchFunction(backend) {
	  var i, j;
	  var cbs = {};

	  var modules = backend.modules;
	  var nodeOps = backend.nodeOps;

	  for (i = 0; i < hooks.length; ++i) {
	    cbs[hooks[i]] = [];
	    for (j = 0; j < modules.length; ++j) {
	      if (isDef(modules[j][hooks[i]])) {
	        cbs[hooks[i]].push(modules[j][hooks[i]]);
	      }
	    }
	  }

	  function emptyNodeAt(elm) {
	    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);
	  }

	  function createRmCb(childElm, listeners) {
	    function remove$$1() {
	      if (--remove$$1.listeners === 0) {
	        removeNode(childElm);
	      }
	    }
	    remove$$1.listeners = listeners;
	    return remove$$1;
	  }

	  function removeNode(el) {
	    var parent = nodeOps.parentNode(el);
	    // element may have already been removed due to v-html / v-text
	    if (isDef(parent)) {
	      nodeOps.removeChild(parent, el);
	    }
	  }

	  var inPre = 0;
	  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested) {
	    vnode.isRootInsert = !nested; // for transition enter check
	    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
	      return;
	    }

	    var data = vnode.data;
	    var children = vnode.children;
	    var tag = vnode.tag;
	    if (isDef(tag)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (data && data.pre) {
	          inPre++;
	        }
	        if (!inPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) && config.isUnknownElement(tag)) {
	          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the "name" option.', vnode.context);
	        }
	      }
	      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);
	      setScope(vnode);

	      /* istanbul ignore if */
	      {
	        createChildren(vnode, children, insertedVnodeQueue);
	        if (isDef(data)) {
	          invokeCreateHooks(vnode, insertedVnodeQueue);
	        }
	        insert(parentElm, vnode.elm, refElm);
	      }

	      if (process.env.NODE_ENV !== 'production' && data && data.pre) {
	        inPre--;
	      }
	    } else if (isTrue(vnode.isComment)) {
	      vnode.elm = nodeOps.createComment(vnode.text);
	      insert(parentElm, vnode.elm, refElm);
	    } else {
	      vnode.elm = nodeOps.createTextNode(vnode.text);
	      insert(parentElm, vnode.elm, refElm);
	    }
	  }

	  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
	    var i = vnode.data;
	    if (isDef(i)) {
	      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
	      if (isDef(i = i.hook) && isDef(i = i.init)) {
	        i(vnode, false /* hydrating */, parentElm, refElm);
	      }
	      // after calling the init hook, if the vnode is a child component
	      // it should've created a child instance and mounted it. the child
	      // component also has set the placeholder vnode's elm.
	      // in that case we can just return the element and be done.
	      if (isDef(vnode.componentInstance)) {
	        initComponent(vnode, insertedVnodeQueue);
	        if (isTrue(isReactivated)) {
	          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
	        }
	        return true;
	      }
	    }
	  }

	  function initComponent(vnode, insertedVnodeQueue) {
	    if (isDef(vnode.data.pendingInsert)) {
	      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
	      vnode.data.pendingInsert = null;
	    }
	    vnode.elm = vnode.componentInstance.$el;
	    if (isPatchable(vnode)) {
	      invokeCreateHooks(vnode, insertedVnodeQueue);
	      setScope(vnode);
	    } else {
	      // empty component root.
	      // skip all element-related modules except for ref (#3455)
	      registerRef(vnode);
	      // make sure to invoke the insert hook
	      insertedVnodeQueue.push(vnode);
	    }
	  }

	  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
	    var i;
	    // hack for #4339: a reactivated component with inner transition
	    // does not trigger because the inner node's created hooks are not called
	    // again. It's not ideal to involve module-specific logic in here but
	    // there doesn't seem to be a better way to do it.
	    var innerNode = vnode;
	    while (innerNode.componentInstance) {
	      innerNode = innerNode.componentInstance._vnode;
	      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
	        for (i = 0; i < cbs.activate.length; ++i) {
	          cbs.activate[i](emptyNode, innerNode);
	        }
	        insertedVnodeQueue.push(innerNode);
	        break;
	      }
	    }
	    // unlike a newly created component,
	    // a reactivated keep-alive component doesn't insert itself
	    insert(parentElm, vnode.elm, refElm);
	  }

	  function insert(parent, elm, ref) {
	    if (isDef(parent)) {
	      if (isDef(ref)) {
	        if (ref.parentNode === parent) {
	          nodeOps.insertBefore(parent, elm, ref);
	        }
	      } else {
	        nodeOps.appendChild(parent, elm);
	      }
	    }
	  }

	  function createChildren(vnode, children, insertedVnodeQueue) {
	    if (Array.isArray(children)) {
	      for (var i = 0; i < children.length; ++i) {
	        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);
	      }
	    } else if (isPrimitive(vnode.text)) {
	      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));
	    }
	  }

	  function isPatchable(vnode) {
	    while (vnode.componentInstance) {
	      vnode = vnode.componentInstance._vnode;
	    }
	    return isDef(vnode.tag);
	  }

	  function invokeCreateHooks(vnode, insertedVnodeQueue) {
	    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
	      cbs.create[i$1](emptyNode, vnode);
	    }
	    i = vnode.data.hook; // Reuse variable
	    if (isDef(i)) {
	      if (isDef(i.create)) {
	        i.create(emptyNode, vnode);
	      }
	      if (isDef(i.insert)) {
	        insertedVnodeQueue.push(vnode);
	      }
	    }
	  }

	  // set scope id attribute for scoped CSS.
	  // this is implemented as a special case to avoid the overhead
	  // of going through the normal attribute patching process.
	  function setScope(vnode) {
	    var i;
	    var ancestor = vnode;
	    while (ancestor) {
	      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
	        nodeOps.setAttribute(vnode.elm, i, '');
	      }
	      ancestor = ancestor.parent;
	    }
	    // for slot content they should also get the scopeId from the host instance.
	    if (isDef(i = activeInstance) && i !== vnode.context && isDef(i = i.$options._scopeId)) {
	      nodeOps.setAttribute(vnode.elm, i, '');
	    }
	  }

	  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
	    for (; startIdx <= endIdx; ++startIdx) {
	      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);
	    }
	  }

	  function invokeDestroyHook(vnode) {
	    var i, j;
	    var data = vnode.data;
	    if (isDef(data)) {
	      if (isDef(i = data.hook) && isDef(i = i.destroy)) {
	        i(vnode);
	      }
	      for (i = 0; i < cbs.destroy.length; ++i) {
	        cbs.destroy[i](vnode);
	      }
	    }
	    if (isDef(i = vnode.children)) {
	      for (j = 0; j < vnode.children.length; ++j) {
	        invokeDestroyHook(vnode.children[j]);
	      }
	    }
	  }

	  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
	    for (; startIdx <= endIdx; ++startIdx) {
	      var ch = vnodes[startIdx];
	      if (isDef(ch)) {
	        if (isDef(ch.tag)) {
	          removeAndInvokeRemoveHook(ch);
	          invokeDestroyHook(ch);
	        } else {
	          // Text node
	          removeNode(ch.elm);
	        }
	      }
	    }
	  }

	  function removeAndInvokeRemoveHook(vnode, rm) {
	    if (isDef(rm) || isDef(vnode.data)) {
	      var i;
	      var listeners = cbs.remove.length + 1;
	      if (isDef(rm)) {
	        // we have a recursively passed down rm callback
	        // increase the listeners count
	        rm.listeners += listeners;
	      } else {
	        // directly removing
	        rm = createRmCb(vnode.elm, listeners);
	      }
	      // recursively invoke hooks on child component root node
	      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
	        removeAndInvokeRemoveHook(i, rm);
	      }
	      for (i = 0; i < cbs.remove.length; ++i) {
	        cbs.remove[i](vnode, rm);
	      }
	      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
	        i(vnode, rm);
	      } else {
	        rm();
	      }
	    } else {
	      removeNode(vnode.elm);
	    }
	  }

	  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
	    var oldStartIdx = 0;
	    var newStartIdx = 0;
	    var oldEndIdx = oldCh.length - 1;
	    var oldStartVnode = oldCh[0];
	    var oldEndVnode = oldCh[oldEndIdx];
	    var newEndIdx = newCh.length - 1;
	    var newStartVnode = newCh[0];
	    var newEndVnode = newCh[newEndIdx];
	    var oldKeyToIdx, idxInOld, elmToMove, refElm;

	    // removeOnly is a special flag used only by <transition-group>
	    // to ensure removed elements stay in correct relative positions
	    // during leaving transitions
	    var canMove = !removeOnly;

	    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
	      if (isUndef(oldStartVnode)) {
	        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
	      } else if (isUndef(oldEndVnode)) {
	        oldEndVnode = oldCh[--oldEndIdx];
	      } else if (sameVnode(oldStartVnode, newStartVnode)) {
	        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
	        oldStartVnode = oldCh[++oldStartIdx];
	        newStartVnode = newCh[++newStartIdx];
	      } else if (sameVnode(oldEndVnode, newEndVnode)) {
	        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
	        oldEndVnode = oldCh[--oldEndIdx];
	        newEndVnode = newCh[--newEndIdx];
	      } else if (sameVnode(oldStartVnode, newEndVnode)) {
	        // Vnode moved right
	        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
	        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
	        oldStartVnode = oldCh[++oldStartIdx];
	        newEndVnode = newCh[--newEndIdx];
	      } else if (sameVnode(oldEndVnode, newStartVnode)) {
	        // Vnode moved left
	        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
	        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
	        oldEndVnode = oldCh[--oldEndIdx];
	        newStartVnode = newCh[++newStartIdx];
	      } else {
	        if (isUndef(oldKeyToIdx)) {
	          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
	        }
	        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;
	        if (isUndef(idxInOld)) {
	          // New element
	          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
	          newStartVnode = newCh[++newStartIdx];
	        } else {
	          elmToMove = oldCh[idxInOld];
	          /* istanbul ignore if */
	          if (process.env.NODE_ENV !== 'production' && !elmToMove) {
	            warn('It seems there are duplicate keys that is causing an update error. ' + 'Make sure each v-for item has a unique key.');
	          }
	          if (sameVnode(elmToMove, newStartVnode)) {
	            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
	            oldCh[idxInOld] = undefined;
	            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);
	            newStartVnode = newCh[++newStartIdx];
	          } else {
	            // same key but different element. treat as new element
	            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);
	            newStartVnode = newCh[++newStartIdx];
	          }
	        }
	      }
	    }
	    if (oldStartIdx > oldEndIdx) {
	      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
	      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
	    } else if (newStartIdx > newEndIdx) {
	      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
	    }
	  }

	  function patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly) {
	    if (oldVnode === vnode) {
	      return;
	    }
	    // reuse element for static trees.
	    // note we only do this if the vnode is cloned -
	    // if the new node is not cloned it means the render functions have been
	    // reset by the hot-reload-api and we need to do a proper re-render.
	    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {
	      vnode.elm = oldVnode.elm;
	      vnode.componentInstance = oldVnode.componentInstance;
	      return;
	    }
	    var i;
	    var data = vnode.data;
	    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
	      i(oldVnode, vnode);
	    }
	    var elm = vnode.elm = oldVnode.elm;
	    var oldCh = oldVnode.children;
	    var ch = vnode.children;
	    if (isDef(data) && isPatchable(vnode)) {
	      for (i = 0; i < cbs.update.length; ++i) {
	        cbs.update[i](oldVnode, vnode);
	      }
	      if (isDef(i = data.hook) && isDef(i = i.update)) {
	        i(oldVnode, vnode);
	      }
	    }
	    if (isUndef(vnode.text)) {
	      if (isDef(oldCh) && isDef(ch)) {
	        if (oldCh !== ch) {
	          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
	        }
	      } else if (isDef(ch)) {
	        if (isDef(oldVnode.text)) {
	          nodeOps.setTextContent(elm, '');
	        }
	        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
	      } else if (isDef(oldCh)) {
	        removeVnodes(elm, oldCh, 0, oldCh.length - 1);
	      } else if (isDef(oldVnode.text)) {
	        nodeOps.setTextContent(elm, '');
	      }
	    } else if (oldVnode.text !== vnode.text) {
	      nodeOps.setTextContent(elm, vnode.text);
	    }
	    if (isDef(data)) {
	      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
	        i(oldVnode, vnode);
	      }
	    }
	  }

	  function invokeInsertHook(vnode, queue, initial) {
	    // delay insert hooks for component root nodes, invoke them after the
	    // element is really inserted
	    if (isTrue(initial) && isDef(vnode.parent)) {
	      vnode.parent.data.pendingInsert = queue;
	    } else {
	      for (var i = 0; i < queue.length; ++i) {
	        queue[i].data.hook.insert(queue[i]);
	      }
	    }
	  }

	  var bailed = false;
	  // list of modules that can skip create hook during hydration because they
	  // are already rendered on the client or has no need for initialization
	  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');

	  // Note: this is a browser-only function so we can assume elms are DOM nodes.
	  function hydrate(elm, vnode, insertedVnodeQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (!assertNodeMatch(elm, vnode)) {
	        return false;
	      }
	    }
	    vnode.elm = elm;
	    var tag = vnode.tag;
	    var data = vnode.data;
	    var children = vnode.children;
	    if (isDef(data)) {
	      if (isDef(i = data.hook) && isDef(i = i.init)) {
	        i(vnode, true /* hydrating */);
	      }
	      if (isDef(i = vnode.componentInstance)) {
	        // child component. it should have hydrated its own tree.
	        initComponent(vnode, insertedVnodeQueue);
	        return true;
	      }
	    }
	    if (isDef(tag)) {
	      if (isDef(children)) {
	        // empty element, allow client to pick up and populate children
	        if (!elm.hasChildNodes()) {
	          createChildren(vnode, children, insertedVnodeQueue);
	        } else {
	          var childrenMatch = true;
	          var childNode = elm.firstChild;
	          for (var i$1 = 0; i$1 < children.length; i$1++) {
	            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {
	              childrenMatch = false;
	              break;
	            }
	            childNode = childNode.nextSibling;
	          }
	          // if childNode is not null, it means the actual childNodes list is
	          // longer than the virtual children list.
	          if (!childrenMatch || childNode) {
	            if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined' && !bailed) {
	              bailed = true;
	              console.warn('Parent: ', elm);
	              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
	            }
	            return false;
	          }
	        }
	      }
	      if (isDef(data)) {
	        for (var key in data) {
	          if (!isRenderedModule(key)) {
	            invokeCreateHooks(vnode, insertedVnodeQueue);
	            break;
	          }
	        }
	      }
	    } else if (elm.data !== vnode.text) {
	      elm.data = vnode.text;
	    }
	    return true;
	  }

	  function assertNodeMatch(node, vnode) {
	    if (isDef(vnode.tag)) {
	      return vnode.tag.indexOf('vue-component') === 0 || vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());
	    } else {
	      return node.nodeType === (vnode.isComment ? 8 : 3);
	    }
	  }

	  return function patch(oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
	    if (isUndef(vnode)) {
	      if (isDef(oldVnode)) {
	        invokeDestroyHook(oldVnode);
	      }
	      return;
	    }

	    var isInitialPatch = false;
	    var insertedVnodeQueue = [];

	    if (isUndef(oldVnode)) {
	      // empty mount (likely as component), create new root element
	      isInitialPatch = true;
	      createElm(vnode, insertedVnodeQueue, parentElm, refElm);
	    } else {
	      var isRealElement = isDef(oldVnode.nodeType);
	      if (!isRealElement && sameVnode(oldVnode, vnode)) {
	        // patch existing root node
	        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
	      } else {
	        if (isRealElement) {
	          // mounting to a real element
	          // check if this is server-rendered content and if we can perform
	          // a successful hydration.
	          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
	            oldVnode.removeAttribute(SSR_ATTR);
	            hydrating = true;
	          }
	          if (isTrue(hydrating)) {
	            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
	              invokeInsertHook(vnode, insertedVnodeQueue, true);
	              return oldVnode;
	            } else if (process.env.NODE_ENV !== 'production') {
	              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');
	            }
	          }
	          // either not server-rendered, or hydration failed.
	          // create an empty node and replace it
	          oldVnode = emptyNodeAt(oldVnode);
	        }
	        // replacing existing element
	        var oldElm = oldVnode.elm;
	        var parentElm$1 = nodeOps.parentNode(oldElm);
	        createElm(vnode, insertedVnodeQueue,
	        // extremely rare edge case: do not insert if old element is in a
	        // leaving transition. Only happens when combining transition +
	        // keep-alive + HOCs. (#4590)
	        oldElm._leaveCb ? null : parentElm$1, nodeOps.nextSibling(oldElm));

	        if (isDef(vnode.parent)) {
	          // component root element replaced.
	          // update parent placeholder node element, recursively
	          var ancestor = vnode.parent;
	          while (ancestor) {
	            ancestor.elm = vnode.elm;
	            ancestor = ancestor.parent;
	          }
	          if (isPatchable(vnode)) {
	            for (var i = 0; i < cbs.create.length; ++i) {
	              cbs.create[i](emptyNode, vnode.parent);
	            }
	          }
	        }

	        if (isDef(parentElm$1)) {
	          removeVnodes(parentElm$1, [oldVnode], 0, 0);
	        } else if (isDef(oldVnode.tag)) {
	          invokeDestroyHook(oldVnode);
	        }
	      }
	    }

	    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
	    return vnode.elm;
	  };
	}

	/*  */

	var directives = {
	  create: updateDirectives,
	  update: updateDirectives,
	  destroy: function unbindDirectives(vnode) {
	    updateDirectives(vnode, emptyNode);
	  }
	};

	function updateDirectives(oldVnode, vnode) {
	  if (oldVnode.data.directives || vnode.data.directives) {
	    _update(oldVnode, vnode);
	  }
	}

	function _update(oldVnode, vnode) {
	  var isCreate = oldVnode === emptyNode;
	  var isDestroy = vnode === emptyNode;
	  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
	  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

	  var dirsWithInsert = [];
	  var dirsWithPostpatch = [];

	  var key, oldDir, dir;
	  for (key in newDirs) {
	    oldDir = oldDirs[key];
	    dir = newDirs[key];
	    if (!oldDir) {
	      // new directive, bind
	      callHook$1(dir, 'bind', vnode, oldVnode);
	      if (dir.def && dir.def.inserted) {
	        dirsWithInsert.push(dir);
	      }
	    } else {
	      // existing directive, update
	      dir.oldValue = oldDir.value;
	      callHook$1(dir, 'update', vnode, oldVnode);
	      if (dir.def && dir.def.componentUpdated) {
	        dirsWithPostpatch.push(dir);
	      }
	    }
	  }

	  if (dirsWithInsert.length) {
	    var callInsert = function callInsert() {
	      for (var i = 0; i < dirsWithInsert.length; i++) {
	        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
	      }
	    };
	    if (isCreate) {
	      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);
	    } else {
	      callInsert();
	    }
	  }

	  if (dirsWithPostpatch.length) {
	    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {
	      for (var i = 0; i < dirsWithPostpatch.length; i++) {
	        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
	      }
	    });
	  }

	  if (!isCreate) {
	    for (key in oldDirs) {
	      if (!newDirs[key]) {
	        // no longer present, unbind
	        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
	      }
	    }
	  }
	}

	var emptyModifiers = Object.create(null);

	function normalizeDirectives$1(dirs, vm) {
	  var res = Object.create(null);
	  if (!dirs) {
	    return res;
	  }
	  var i, dir;
	  for (i = 0; i < dirs.length; i++) {
	    dir = dirs[i];
	    if (!dir.modifiers) {
	      dir.modifiers = emptyModifiers;
	    }
	    res[getRawDirName(dir)] = dir;
	    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
	  }
	  return res;
	}

	function getRawDirName(dir) {
	  return dir.rawName || dir.name + "." + Object.keys(dir.modifiers || {}).join('.');
	}

	function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
	  var fn = dir.def && dir.def[hook];
	  if (fn) {
	    try {
	      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
	    } catch (e) {
	      handleError(e, vnode.context, "directive " + dir.name + " " + hook + " hook");
	    }
	  }
	}

	var baseModules = [ref, directives];

	/*  */

	function updateAttrs(oldVnode, vnode) {
	  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
	    return;
	  }
	  var key, cur, old;
	  var elm = vnode.elm;
	  var oldAttrs = oldVnode.data.attrs || {};
	  var attrs = vnode.data.attrs || {};
	  // clone observed objects, as the user probably wants to mutate it
	  if (isDef(attrs.__ob__)) {
	    attrs = vnode.data.attrs = extend({}, attrs);
	  }

	  for (key in attrs) {
	    cur = attrs[key];
	    old = oldAttrs[key];
	    if (old !== cur) {
	      setAttr(elm, key, cur);
	    }
	  }
	  // #4391: in IE9, setting type can reset value for input[type=radio]
	  /* istanbul ignore if */
	  if (isIE9 && attrs.value !== oldAttrs.value) {
	    setAttr(elm, 'value', attrs.value);
	  }
	  for (key in oldAttrs) {
	    if (isUndef(attrs[key])) {
	      if (isXlink(key)) {
	        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
	      } else if (!isEnumeratedAttr(key)) {
	        elm.removeAttribute(key);
	      }
	    }
	  }
	}

	function setAttr(el, key, value) {
	  if (isBooleanAttr(key)) {
	    // set attribute for blank value
	    // e.g. <option disabled>Select one</option>
	    if (isFalsyAttrValue(value)) {
	      el.removeAttribute(key);
	    } else {
	      el.setAttribute(key, key);
	    }
	  } else if (isEnumeratedAttr(key)) {
	    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
	  } else if (isXlink(key)) {
	    if (isFalsyAttrValue(value)) {
	      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
	    } else {
	      el.setAttributeNS(xlinkNS, key, value);
	    }
	  } else {
	    if (isFalsyAttrValue(value)) {
	      el.removeAttribute(key);
	    } else {
	      el.setAttribute(key, value);
	    }
	  }
	}

	var attrs = {
	  create: updateAttrs,
	  update: updateAttrs
	};

	/*  */

	function updateClass(oldVnode, vnode) {
	  var el = vnode.elm;
	  var data = vnode.data;
	  var oldData = oldVnode.data;
	  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {
	    return;
	  }

	  var cls = genClassForVnode(vnode);

	  // handle transition classes
	  var transitionClass = el._transitionClasses;
	  if (isDef(transitionClass)) {
	    cls = concat(cls, stringifyClass(transitionClass));
	  }

	  // set the class
	  if (cls !== el._prevClass) {
	    el.setAttribute('class', cls);
	    el._prevClass = cls;
	  }
	}

	var klass = {
	  create: updateClass,
	  update: updateClass
	};

	/*  */

	var validDivisionCharRE = /[\w).+\-_$\]]/;

	function parseFilters(exp) {
	  var inSingle = false;
	  var inDouble = false;
	  var inTemplateString = false;
	  var inRegex = false;
	  var curly = 0;
	  var square = 0;
	  var paren = 0;
	  var lastFilterIndex = 0;
	  var c, prev, i, expression, filters;

	  for (i = 0; i < exp.length; i++) {
	    prev = c;
	    c = exp.charCodeAt(i);
	    if (inSingle) {
	      if (c === 0x27 && prev !== 0x5C) {
	        inSingle = false;
	      }
	    } else if (inDouble) {
	      if (c === 0x22 && prev !== 0x5C) {
	        inDouble = false;
	      }
	    } else if (inTemplateString) {
	      if (c === 0x60 && prev !== 0x5C) {
	        inTemplateString = false;
	      }
	    } else if (inRegex) {
	      if (c === 0x2f && prev !== 0x5C) {
	        inRegex = false;
	      }
	    } else if (c === 0x7C && // pipe
	    exp.charCodeAt(i + 1) !== 0x7C && exp.charCodeAt(i - 1) !== 0x7C && !curly && !square && !paren) {
	      if (expression === undefined) {
	        // first filter, end of expression
	        lastFilterIndex = i + 1;
	        expression = exp.slice(0, i).trim();
	      } else {
	        pushFilter();
	      }
	    } else {
	      switch (c) {
	        case 0x22:
	          inDouble = true;break; // "
	        case 0x27:
	          inSingle = true;break; // '
	        case 0x60:
	          inTemplateString = true;break; // `
	        case 0x28:
	          paren++;break; // (
	        case 0x29:
	          paren--;break; // )
	        case 0x5B:
	          square++;break; // [
	        case 0x5D:
	          square--;break; // ]
	        case 0x7B:
	          curly++;break; // {
	        case 0x7D:
	          curly--;break; // }
	      }
	      if (c === 0x2f) {
	        // /
	        var j = i - 1;
	        var p = void 0;
	        // find first non-whitespace prev char
	        for (; j >= 0; j--) {
	          p = exp.charAt(j);
	          if (p !== ' ') {
	            break;
	          }
	        }
	        if (!p || !validDivisionCharRE.test(p)) {
	          inRegex = true;
	        }
	      }
	    }
	  }

	  if (expression === undefined) {
	    expression = exp.slice(0, i).trim();
	  } else if (lastFilterIndex !== 0) {
	    pushFilter();
	  }

	  function pushFilter() {
	    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
	    lastFilterIndex = i + 1;
	  }

	  if (filters) {
	    for (i = 0; i < filters.length; i++) {
	      expression = wrapFilter(expression, filters[i]);
	    }
	  }

	  return expression;
	}

	function wrapFilter(exp, filter) {
	  var i = filter.indexOf('(');
	  if (i < 0) {
	    // _f: resolveFilter
	    return "_f(\"" + filter + "\")(" + exp + ")";
	  } else {
	    var name = filter.slice(0, i);
	    var args = filter.slice(i + 1);
	    return "_f(\"" + name + "\")(" + exp + "," + args;
	  }
	}

	/*  */

	function baseWarn(msg) {
	  console.error("[Vue compiler]: " + msg);
	}

	function pluckModuleFunction(modules, key) {
	  return modules ? modules.map(function (m) {
	    return m[key];
	  }).filter(function (_) {
	    return _;
	  }) : [];
	}

	function addProp(el, name, value) {
	  (el.props || (el.props = [])).push({ name: name, value: value });
	}

	function addAttr(el, name, value) {
	  (el.attrs || (el.attrs = [])).push({ name: name, value: value });
	}

	function addDirective(el, name, rawName, value, arg, modifiers) {
	  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });
	}

	function addHandler(el, name, value, modifiers, important, warn) {
	  // warn prevent and passive modifier
	  /* istanbul ignore if */
	  if (process.env.NODE_ENV !== 'production' && warn && modifiers && modifiers.prevent && modifiers.passive) {
	    warn('passive and prevent can\'t be used together. ' + 'Passive handler can\'t prevent default event.');
	  }
	  // check capture modifier
	  if (modifiers && modifiers.capture) {
	    delete modifiers.capture;
	    name = '!' + name; // mark the event as captured
	  }
	  if (modifiers && modifiers.once) {
	    delete modifiers.once;
	    name = '~' + name; // mark the event as once
	  }
	  /* istanbul ignore if */
	  if (modifiers && modifiers.passive) {
	    delete modifiers.passive;
	    name = '&' + name; // mark the event as passive
	  }
	  var events;
	  if (modifiers && modifiers.native) {
	    delete modifiers.native;
	    events = el.nativeEvents || (el.nativeEvents = {});
	  } else {
	    events = el.events || (el.events = {});
	  }
	  var newHandler = { value: value, modifiers: modifiers };
	  var handlers = events[name];
	  /* istanbul ignore if */
	  if (Array.isArray(handlers)) {
	    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
	  } else if (handlers) {
	    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
	  } else {
	    events[name] = newHandler;
	  }
	}

	function getBindingAttr(el, name, getStatic) {
	  var dynamicValue = getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);
	  if (dynamicValue != null) {
	    return parseFilters(dynamicValue);
	  } else if (getStatic !== false) {
	    var staticValue = getAndRemoveAttr(el, name);
	    if (staticValue != null) {
	      return JSON.stringify(staticValue);
	    }
	  }
	}

	function getAndRemoveAttr(el, name) {
	  var val;
	  if ((val = el.attrsMap[name]) != null) {
	    var list = el.attrsList;
	    for (var i = 0, l = list.length; i < l; i++) {
	      if (list[i].name === name) {
	        list.splice(i, 1);
	        break;
	      }
	    }
	  }
	  return val;
	}

	/*  */

	/**
	 * Cross-platform code generation for component v-model
	 */
	function genComponentModel(el, value, modifiers) {
	  var ref = modifiers || {};
	  var number = ref.number;
	  var trim = ref.trim;

	  var baseValueExpression = '$$v';
	  var valueExpression = baseValueExpression;
	  if (trim) {
	    valueExpression = "(typeof " + baseValueExpression + " === 'string'" + "? " + baseValueExpression + ".trim()" + ": " + baseValueExpression + ")";
	  }
	  if (number) {
	    valueExpression = "_n(" + valueExpression + ")";
	  }
	  var assignment = genAssignmentCode(value, valueExpression);

	  el.model = {
	    value: "(" + value + ")",
	    expression: "\"" + value + "\"",
	    callback: "function (" + baseValueExpression + ") {" + assignment + "}"
	  };
	}

	/**
	 * Cross-platform codegen helper for generating v-model value assignment code.
	 */
	function genAssignmentCode(value, assignment) {
	  var modelRs = parseModel(value);
	  if (modelRs.idx === null) {
	    return value + "=" + assignment;
	  } else {
	    return "var $$exp = " + modelRs.exp + ", $$idx = " + modelRs.idx + ";" + "if (!Array.isArray($$exp)){" + value + "=" + assignment + "}" + "else{$$exp.splice($$idx, 1, " + assignment + ")}";
	  }
	}

	/**
	 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
	 *
	 * for loop possible cases:
	 *
	 * - test
	 * - test[idx]
	 * - test[test1[idx]]
	 * - test["a"][idx]
	 * - xxx.test[a[a].test1[idx]]
	 * - test.xxx.a["asa"][test1[idx]]
	 *
	 */

	var len;
	var str;
	var chr;
	var index$1;
	var expressionPos;
	var expressionEndPos;

	function parseModel(val) {
	  str = val;
	  len = str.length;
	  index$1 = expressionPos = expressionEndPos = 0;

	  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
	    return {
	      exp: val,
	      idx: null
	    };
	  }

	  while (!eof()) {
	    chr = next();
	    /* istanbul ignore if */
	    if (isStringStart(chr)) {
	      parseString(chr);
	    } else if (chr === 0x5B) {
	      parseBracket(chr);
	    }
	  }

	  return {
	    exp: val.substring(0, expressionPos),
	    idx: val.substring(expressionPos + 1, expressionEndPos)
	  };
	}

	function next() {
	  return str.charCodeAt(++index$1);
	}

	function eof() {
	  return index$1 >= len;
	}

	function isStringStart(chr) {
	  return chr === 0x22 || chr === 0x27;
	}

	function parseBracket(chr) {
	  var inBracket = 1;
	  expressionPos = index$1;
	  while (!eof()) {
	    chr = next();
	    if (isStringStart(chr)) {
	      parseString(chr);
	      continue;
	    }
	    if (chr === 0x5B) {
	      inBracket++;
	    }
	    if (chr === 0x5D) {
	      inBracket--;
	    }
	    if (inBracket === 0) {
	      expressionEndPos = index$1;
	      break;
	    }
	  }
	}

	function parseString(chr) {
	  var stringQuote = chr;
	  while (!eof()) {
	    chr = next();
	    if (chr === stringQuote) {
	      break;
	    }
	  }
	}

	/*  */

	var warn$1;

	// in some cases, the event used has to be determined at runtime
	// so we used some reserved tokens during compile.
	var RANGE_TOKEN = '__r';
	var CHECKBOX_RADIO_TOKEN = '__c';

	function model(el, dir, _warn) {
	  warn$1 = _warn;
	  var value = dir.value;
	  var modifiers = dir.modifiers;
	  var tag = el.tag;
	  var type = el.attrsMap.type;

	  if (process.env.NODE_ENV !== 'production') {
	    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
	    if (tag === 'input' && dynamicType) {
	      warn$1("<input :type=\"" + dynamicType + "\" v-model=\"" + value + "\">:\n" + "v-model does not support dynamic input types. Use v-if branches instead.");
	    }
	    // inputs with type="file" are read only and setting the input's
	    // value will throw an error.
	    if (tag === 'input' && type === 'file') {
	      warn$1("<" + el.tag + " v-model=\"" + value + "\" type=\"file\">:\n" + "File inputs are read only. Use a v-on:change listener instead.");
	    }
	  }

	  if (tag === 'select') {
	    genSelect(el, value, modifiers);
	  } else if (tag === 'input' && type === 'checkbox') {
	    genCheckboxModel(el, value, modifiers);
	  } else if (tag === 'input' && type === 'radio') {
	    genRadioModel(el, value, modifiers);
	  } else if (tag === 'input' || tag === 'textarea') {
	    genDefaultModel(el, value, modifiers);
	  } else if (!config.isReservedTag(tag)) {
	    genComponentModel(el, value, modifiers);
	    // component v-model doesn't need extra runtime
	    return false;
	  } else if (process.env.NODE_ENV !== 'production') {
	    warn$1("<" + el.tag + " v-model=\"" + value + "\">: " + "v-model is not supported on this element type. " + 'If you are working with contenteditable, it\'s recommended to ' + 'wrap a library dedicated for that purpose inside a custom component.');
	  }

	  // ensure runtime directive metadata
	  return true;
	}

	function genCheckboxModel(el, value, modifiers) {
	  var number = modifiers && modifiers.number;
	  var valueBinding = getBindingAttr(el, 'value') || 'null';
	  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
	  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
	  addProp(el, 'checked', "Array.isArray(" + value + ")" + "?_i(" + value + "," + valueBinding + ")>-1" + (trueValueBinding === 'true' ? ":(" + value + ")" : ":_q(" + value + "," + trueValueBinding + ")"));
	  addHandler(el, CHECKBOX_RADIO_TOKEN, "var $$a=" + value + "," + '$$el=$event.target,' + "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" + 'if(Array.isArray($$a)){' + "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," + '$$i=_i($$a,$$v);' + "if($$c){$$i<0&&(" + value + "=$$a.concat($$v))}" + "else{$$i>-1&&(" + value + "=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}" + "}else{" + genAssignmentCode(value, '$$c') + "}", null, true);
	}

	function genRadioModel(el, value, modifiers) {
	  var number = modifiers && modifiers.number;
	  var valueBinding = getBindingAttr(el, 'value') || 'null';
	  valueBinding = number ? "_n(" + valueBinding + ")" : valueBinding;
	  addProp(el, 'checked', "_q(" + value + "," + valueBinding + ")");
	  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);
	}

	function genSelect(el, value, modifiers) {
	  var number = modifiers && modifiers.number;
	  var selectedVal = "Array.prototype.filter" + ".call($event.target.options,function(o){return o.selected})" + ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" + "return " + (number ? '_n(val)' : 'val') + "})";

	  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
	  var code = "var $$selectedVal = " + selectedVal + ";";
	  code = code + " " + genAssignmentCode(value, assignment);
	  addHandler(el, 'change', code, null, true);
	}

	function genDefaultModel(el, value, modifiers) {
	  var type = el.attrsMap.type;
	  var ref = modifiers || {};
	  var lazy = ref.lazy;
	  var number = ref.number;
	  var trim = ref.trim;
	  var needCompositionGuard = !lazy && type !== 'range';
	  var event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input';

	  var valueExpression = '$event.target.value';
	  if (trim) {
	    valueExpression = "$event.target.value.trim()";
	  }
	  if (number) {
	    valueExpression = "_n(" + valueExpression + ")";
	  }

	  var code = genAssignmentCode(value, valueExpression);
	  if (needCompositionGuard) {
	    code = "if($event.target.composing)return;" + code;
	  }

	  addProp(el, 'value', "(" + value + ")");
	  addHandler(el, event, code, null, true);
	  if (trim || number || type === 'number') {
	    addHandler(el, 'blur', '$forceUpdate()');
	  }
	}

	/*  */

	// normalize v-model event tokens that can only be determined at runtime.
	// it's important to place the event as the first in the array because
	// the whole point is ensuring the v-model callback gets called before
	// user-attached handlers.
	function normalizeEvents(on) {
	  var event;
	  /* istanbul ignore if */
	  if (isDef(on[RANGE_TOKEN])) {
	    // IE input[type=range] only supports `change` event
	    event = isIE ? 'change' : 'input';
	    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
	    delete on[RANGE_TOKEN];
	  }
	  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
	    // Chrome fires microtasks in between click/change, leads to #4521
	    event = isChrome ? 'click' : 'change';
	    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);
	    delete on[CHECKBOX_RADIO_TOKEN];
	  }
	}

	var target$1;

	function add$1(event, _handler, once$$1, capture, passive) {
	  if (once$$1) {
	    var oldHandler = _handler;
	    var _target = target$1; // save current target element in closure
	    _handler = function handler(ev) {
	      var res = arguments.length === 1 ? oldHandler(ev) : oldHandler.apply(null, arguments);
	      if (res !== null) {
	        remove$2(event, _handler, capture, _target);
	      }
	    };
	  }
	  target$1.addEventListener(event, _handler, supportsPassive ? { capture: capture, passive: passive } : capture);
	}

	function remove$2(event, handler, capture, _target) {
	  (_target || target$1).removeEventListener(event, handler, capture);
	}

	function updateDOMListeners(oldVnode, vnode) {
	  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
	    return;
	  }
	  var on = vnode.data.on || {};
	  var oldOn = oldVnode.data.on || {};
	  target$1 = vnode.elm;
	  normalizeEvents(on);
	  updateListeners(on, oldOn, add$1, remove$2, vnode.context);
	}

	var events = {
	  create: updateDOMListeners,
	  update: updateDOMListeners
	};

	/*  */

	function updateDOMProps(oldVnode, vnode) {
	  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
	    return;
	  }
	  var key, cur;
	  var elm = vnode.elm;
	  var oldProps = oldVnode.data.domProps || {};
	  var props = vnode.data.domProps || {};
	  // clone observed objects, as the user probably wants to mutate it
	  if (isDef(props.__ob__)) {
	    props = vnode.data.domProps = extend({}, props);
	  }

	  for (key in oldProps) {
	    if (isUndef(props[key])) {
	      elm[key] = '';
	    }
	  }
	  for (key in props) {
	    cur = props[key];
	    // ignore children if the node has textContent or innerHTML,
	    // as these will throw away existing DOM nodes and cause removal errors
	    // on subsequent patches (#3360)
	    if (key === 'textContent' || key === 'innerHTML') {
	      if (vnode.children) {
	        vnode.children.length = 0;
	      }
	      if (cur === oldProps[key]) {
	        continue;
	      }
	    }

	    if (key === 'value') {
	      // store value as _value as well since
	      // non-string values will be stringified
	      elm._value = cur;
	      // avoid resetting cursor position when value is the same
	      var strCur = isUndef(cur) ? '' : String(cur);
	      if (shouldUpdateValue(elm, vnode, strCur)) {
	        elm.value = strCur;
	      }
	    } else {
	      elm[key] = cur;
	    }
	  }
	}

	// check platforms/web/util/attrs.js acceptValue


	function shouldUpdateValue(elm, vnode, checkVal) {
	  return !elm.composing && (vnode.tag === 'option' || isDirty(elm, checkVal) || isInputChanged(elm, checkVal));
	}

	function isDirty(elm, checkVal) {
	  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value
	  return document.activeElement !== elm && elm.value !== checkVal;
	}

	function isInputChanged(elm, newVal) {
	  var value = elm.value;
	  var modifiers = elm._vModifiers; // injected by v-model runtime
	  if (isDef(modifiers) && modifiers.number || elm.type === 'number') {
	    return toNumber(value) !== toNumber(newVal);
	  }
	  if (isDef(modifiers) && modifiers.trim) {
	    return value.trim() !== newVal.trim();
	  }
	  return value !== newVal;
	}

	var domProps = {
	  create: updateDOMProps,
	  update: updateDOMProps
	};

	/*  */

	var parseStyleText = cached(function (cssText) {
	  var res = {};
	  var listDelimiter = /;(?![^(]*\))/g;
	  var propertyDelimiter = /:(.+)/;
	  cssText.split(listDelimiter).forEach(function (item) {
	    if (item) {
	      var tmp = item.split(propertyDelimiter);
	      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
	    }
	  });
	  return res;
	});

	// merge static and dynamic style data on the same vnode
	function normalizeStyleData(data) {
	  var style = normalizeStyleBinding(data.style);
	  // static style is pre-processed into an object during compilation
	  // and is always a fresh object, so it's safe to merge into it
	  return data.staticStyle ? extend(data.staticStyle, style) : style;
	}

	// normalize possible array / string values into Object
	function normalizeStyleBinding(bindingStyle) {
	  if (Array.isArray(bindingStyle)) {
	    return toObject(bindingStyle);
	  }
	  if (typeof bindingStyle === 'string') {
	    return parseStyleText(bindingStyle);
	  }
	  return bindingStyle;
	}

	/**
	 * parent component style should be after child's
	 * so that parent component's style could override it
	 */
	function getStyle(vnode, checkChild) {
	  var res = {};
	  var styleData;

	  if (checkChild) {
	    var childNode = vnode;
	    while (childNode.componentInstance) {
	      childNode = childNode.componentInstance._vnode;
	      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {
	        extend(res, styleData);
	      }
	    }
	  }

	  if (styleData = normalizeStyleData(vnode.data)) {
	    extend(res, styleData);
	  }

	  var parentNode = vnode;
	  while (parentNode = parentNode.parent) {
	    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
	      extend(res, styleData);
	    }
	  }
	  return res;
	}

	/*  */

	var cssVarRE = /^--/;
	var importantRE = /\s*!important$/;
	var setProp = function setProp(el, name, val) {
	  /* istanbul ignore if */
	  if (cssVarRE.test(name)) {
	    el.style.setProperty(name, val);
	  } else if (importantRE.test(val)) {
	    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
	  } else {
	    var normalizedName = normalize(name);
	    if (Array.isArray(val)) {
	      // Support values array created by autoprefixer, e.g.
	      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
	      // Set them one by one, and the browser will only set those it can recognize
	      for (var i = 0, len = val.length; i < len; i++) {
	        el.style[normalizedName] = val[i];
	      }
	    } else {
	      el.style[normalizedName] = val;
	    }
	  }
	};

	var prefixes = ['Webkit', 'Moz', 'ms'];

	var testEl;
	var normalize = cached(function (prop) {
	  testEl = testEl || document.createElement('div');
	  prop = camelize(prop);
	  if (prop !== 'filter' && prop in testEl.style) {
	    return prop;
	  }
	  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);
	  for (var i = 0; i < prefixes.length; i++) {
	    var prefixed = prefixes[i] + upper;
	    if (prefixed in testEl.style) {
	      return prefixed;
	    }
	  }
	});

	function updateStyle(oldVnode, vnode) {
	  var data = vnode.data;
	  var oldData = oldVnode.data;

	  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {
	    return;
	  }

	  var cur, name;
	  var el = vnode.elm;
	  var oldStaticStyle = oldData.staticStyle;
	  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

	  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
	  var oldStyle = oldStaticStyle || oldStyleBinding;

	  var style = normalizeStyleBinding(vnode.data.style) || {};

	  // store normalized style under a different key for next diff
	  // make sure to clone it if it's reactive, since the user likley wants
	  // to mutate it.
	  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;

	  var newStyle = getStyle(vnode, true);

	  for (name in oldStyle) {
	    if (isUndef(newStyle[name])) {
	      setProp(el, name, '');
	    }
	  }
	  for (name in newStyle) {
	    cur = newStyle[name];
	    if (cur !== oldStyle[name]) {
	      // ie9 setting to null has no effect, must use empty string
	      setProp(el, name, cur == null ? '' : cur);
	    }
	  }
	}

	var style = {
	  create: updateStyle,
	  update: updateStyle
	};

	/*  */

	/**
	 * Add class with compatibility for SVG since classList is not supported on
	 * SVG elements in IE
	 */
	function addClass(el, cls) {
	  /* istanbul ignore if */
	  if (!cls || !(cls = cls.trim())) {
	    return;
	  }

	  /* istanbul ignore else */
	  if (el.classList) {
	    if (cls.indexOf(' ') > -1) {
	      cls.split(/\s+/).forEach(function (c) {
	        return el.classList.add(c);
	      });
	    } else {
	      el.classList.add(cls);
	    }
	  } else {
	    var cur = " " + (el.getAttribute('class') || '') + " ";
	    if (cur.indexOf(' ' + cls + ' ') < 0) {
	      el.setAttribute('class', (cur + cls).trim());
	    }
	  }
	}

	/**
	 * Remove class with compatibility for SVG since classList is not supported on
	 * SVG elements in IE
	 */
	function removeClass(el, cls) {
	  /* istanbul ignore if */
	  if (!cls || !(cls = cls.trim())) {
	    return;
	  }

	  /* istanbul ignore else */
	  if (el.classList) {
	    if (cls.indexOf(' ') > -1) {
	      cls.split(/\s+/).forEach(function (c) {
	        return el.classList.remove(c);
	      });
	    } else {
	      el.classList.remove(cls);
	    }
	  } else {
	    var cur = " " + (el.getAttribute('class') || '') + " ";
	    var tar = ' ' + cls + ' ';
	    while (cur.indexOf(tar) >= 0) {
	      cur = cur.replace(tar, ' ');
	    }
	    el.setAttribute('class', cur.trim());
	  }
	}

	/*  */

	function resolveTransition(def$$1) {
	  if (!def$$1) {
	    return;
	  }
	  /* istanbul ignore else */
	  if ((typeof def$$1 === 'undefined' ? 'undefined' : _typeof(def$$1)) === 'object') {
	    var res = {};
	    if (def$$1.css !== false) {
	      extend(res, autoCssTransition(def$$1.name || 'v'));
	    }
	    extend(res, def$$1);
	    return res;
	  } else if (typeof def$$1 === 'string') {
	    return autoCssTransition(def$$1);
	  }
	}

	var autoCssTransition = cached(function (name) {
	  return {
	    enterClass: name + "-enter",
	    enterToClass: name + "-enter-to",
	    enterActiveClass: name + "-enter-active",
	    leaveClass: name + "-leave",
	    leaveToClass: name + "-leave-to",
	    leaveActiveClass: name + "-leave-active"
	  };
	});

	var hasTransition = inBrowser && !isIE9;
	var TRANSITION = 'transition';
	var ANIMATION = 'animation';

	// Transition property/event sniffing
	var transitionProp = 'transition';
	var transitionEndEvent = 'transitionend';
	var animationProp = 'animation';
	var animationEndEvent = 'animationend';
	if (hasTransition) {
	  /* istanbul ignore if */
	  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {
	    transitionProp = 'WebkitTransition';
	    transitionEndEvent = 'webkitTransitionEnd';
	  }
	  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
	    animationProp = 'WebkitAnimation';
	    animationEndEvent = 'webkitAnimationEnd';
	  }
	}

	// binding to window is necessary to make hot reload work in IE in strict mode
	var raf = inBrowser && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout;

	function nextFrame(fn) {
	  raf(function () {
	    raf(fn);
	  });
	}

	function addTransitionClass(el, cls) {
	  (el._transitionClasses || (el._transitionClasses = [])).push(cls);
	  addClass(el, cls);
	}

	function removeTransitionClass(el, cls) {
	  if (el._transitionClasses) {
	    remove(el._transitionClasses, cls);
	  }
	  removeClass(el, cls);
	}

	function whenTransitionEnds(el, expectedType, cb) {
	  var ref = getTransitionInfo(el, expectedType);
	  var type = ref.type;
	  var timeout = ref.timeout;
	  var propCount = ref.propCount;
	  if (!type) {
	    return cb();
	  }
	  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
	  var ended = 0;
	  var end = function end() {
	    el.removeEventListener(event, onEnd);
	    cb();
	  };
	  var onEnd = function onEnd(e) {
	    if (e.target === el) {
	      if (++ended >= propCount) {
	        end();
	      }
	    }
	  };
	  setTimeout(function () {
	    if (ended < propCount) {
	      end();
	    }
	  }, timeout + 1);
	  el.addEventListener(event, onEnd);
	}

	var transformRE = /\b(transform|all)(,|$)/;

	function getTransitionInfo(el, expectedType) {
	  var styles = window.getComputedStyle(el);
	  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
	  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
	  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
	  var animationDelays = styles[animationProp + 'Delay'].split(', ');
	  var animationDurations = styles[animationProp + 'Duration'].split(', ');
	  var animationTimeout = getTimeout(animationDelays, animationDurations);

	  var type;
	  var timeout = 0;
	  var propCount = 0;
	  /* istanbul ignore if */
	  if (expectedType === TRANSITION) {
	    if (transitionTimeout > 0) {
	      type = TRANSITION;
	      timeout = transitionTimeout;
	      propCount = transitionDurations.length;
	    }
	  } else if (expectedType === ANIMATION) {
	    if (animationTimeout > 0) {
	      type = ANIMATION;
	      timeout = animationTimeout;
	      propCount = animationDurations.length;
	    }
	  } else {
	    timeout = Math.max(transitionTimeout, animationTimeout);
	    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;
	    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;
	  }
	  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);
	  return {
	    type: type,
	    timeout: timeout,
	    propCount: propCount,
	    hasTransform: hasTransform
	  };
	}

	function getTimeout(delays, durations) {
	  /* istanbul ignore next */
	  while (delays.length < durations.length) {
	    delays = delays.concat(delays);
	  }

	  return Math.max.apply(null, durations.map(function (d, i) {
	    return toMs(d) + toMs(delays[i]);
	  }));
	}

	function toMs(s) {
	  return Number(s.slice(0, -1)) * 1000;
	}

	/*  */

	function enter(vnode, toggleDisplay) {
	  var el = vnode.elm;

	  // call leave callback now
	  if (isDef(el._leaveCb)) {
	    el._leaveCb.cancelled = true;
	    el._leaveCb();
	  }

	  var data = resolveTransition(vnode.data.transition);
	  if (isUndef(data)) {
	    return;
	  }

	  /* istanbul ignore if */
	  if (isDef(el._enterCb) || el.nodeType !== 1) {
	    return;
	  }

	  var css = data.css;
	  var type = data.type;
	  var enterClass = data.enterClass;
	  var enterToClass = data.enterToClass;
	  var enterActiveClass = data.enterActiveClass;
	  var appearClass = data.appearClass;
	  var appearToClass = data.appearToClass;
	  var appearActiveClass = data.appearActiveClass;
	  var beforeEnter = data.beforeEnter;
	  var enter = data.enter;
	  var afterEnter = data.afterEnter;
	  var enterCancelled = data.enterCancelled;
	  var beforeAppear = data.beforeAppear;
	  var appear = data.appear;
	  var afterAppear = data.afterAppear;
	  var appearCancelled = data.appearCancelled;
	  var duration = data.duration;

	  // activeInstance will always be the <transition> component managing this
	  // transition. One edge case to check is when the <transition> is placed
	  // as the root node of a child component. In that case we need to check
	  // <transition>'s parent for appear check.
	  var context = activeInstance;
	  var transitionNode = activeInstance.$vnode;
	  while (transitionNode && transitionNode.parent) {
	    transitionNode = transitionNode.parent;
	    context = transitionNode.context;
	  }

	  var isAppear = !context._isMounted || !vnode.isRootInsert;

	  if (isAppear && !appear && appear !== '') {
	    return;
	  }

	  var startClass = isAppear && appearClass ? appearClass : enterClass;
	  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;
	  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;

	  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;
	  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;
	  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;
	  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;

	  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);

	  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {
	    checkDuration(explicitEnterDuration, 'enter', vnode);
	  }

	  var expectsCSS = css !== false && !isIE9;
	  var userWantsControl = getHookArgumentsLength(enterHook);

	  var cb = el._enterCb = once(function () {
	    if (expectsCSS) {
	      removeTransitionClass(el, toClass);
	      removeTransitionClass(el, activeClass);
	    }
	    if (cb.cancelled) {
	      if (expectsCSS) {
	        removeTransitionClass(el, startClass);
	      }
	      enterCancelledHook && enterCancelledHook(el);
	    } else {
	      afterEnterHook && afterEnterHook(el);
	    }
	    el._enterCb = null;
	  });

	  if (!vnode.data.show) {
	    // remove pending leave element on enter by injecting an insert hook
	    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {
	      var parent = el.parentNode;
	      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
	      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {
	        pendingNode.elm._leaveCb();
	      }
	      enterHook && enterHook(el, cb);
	    });
	  }

	  // start enter transition
	  beforeEnterHook && beforeEnterHook(el);
	  if (expectsCSS) {
	    addTransitionClass(el, startClass);
	    addTransitionClass(el, activeClass);
	    nextFrame(function () {
	      addTransitionClass(el, toClass);
	      removeTransitionClass(el, startClass);
	      if (!cb.cancelled && !userWantsControl) {
	        if (isValidDuration(explicitEnterDuration)) {
	          setTimeout(cb, explicitEnterDuration);
	        } else {
	          whenTransitionEnds(el, type, cb);
	        }
	      }
	    });
	  }

	  if (vnode.data.show) {
	    toggleDisplay && toggleDisplay();
	    enterHook && enterHook(el, cb);
	  }

	  if (!expectsCSS && !userWantsControl) {
	    cb();
	  }
	}

	function leave(vnode, rm) {
	  var el = vnode.elm;

	  // call enter callback now
	  if (isDef(el._enterCb)) {
	    el._enterCb.cancelled = true;
	    el._enterCb();
	  }

	  var data = resolveTransition(vnode.data.transition);
	  if (isUndef(data)) {
	    return rm();
	  }

	  /* istanbul ignore if */
	  if (isDef(el._leaveCb) || el.nodeType !== 1) {
	    return;
	  }

	  var css = data.css;
	  var type = data.type;
	  var leaveClass = data.leaveClass;
	  var leaveToClass = data.leaveToClass;
	  var leaveActiveClass = data.leaveActiveClass;
	  var beforeLeave = data.beforeLeave;
	  var leave = data.leave;
	  var afterLeave = data.afterLeave;
	  var leaveCancelled = data.leaveCancelled;
	  var delayLeave = data.delayLeave;
	  var duration = data.duration;

	  var expectsCSS = css !== false && !isIE9;
	  var userWantsControl = getHookArgumentsLength(leave);

	  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);

	  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {
	    checkDuration(explicitLeaveDuration, 'leave', vnode);
	  }

	  var cb = el._leaveCb = once(function () {
	    if (el.parentNode && el.parentNode._pending) {
	      el.parentNode._pending[vnode.key] = null;
	    }
	    if (expectsCSS) {
	      removeTransitionClass(el, leaveToClass);
	      removeTransitionClass(el, leaveActiveClass);
	    }
	    if (cb.cancelled) {
	      if (expectsCSS) {
	        removeTransitionClass(el, leaveClass);
	      }
	      leaveCancelled && leaveCancelled(el);
	    } else {
	      rm();
	      afterLeave && afterLeave(el);
	    }
	    el._leaveCb = null;
	  });

	  if (delayLeave) {
	    delayLeave(performLeave);
	  } else {
	    performLeave();
	  }

	  function performLeave() {
	    // the delayed leave may have already been cancelled
	    if (cb.cancelled) {
	      return;
	    }
	    // record leaving element
	    if (!vnode.data.show) {
	      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;
	    }
	    beforeLeave && beforeLeave(el);
	    if (expectsCSS) {
	      addTransitionClass(el, leaveClass);
	      addTransitionClass(el, leaveActiveClass);
	      nextFrame(function () {
	        addTransitionClass(el, leaveToClass);
	        removeTransitionClass(el, leaveClass);
	        if (!cb.cancelled && !userWantsControl) {
	          if (isValidDuration(explicitLeaveDuration)) {
	            setTimeout(cb, explicitLeaveDuration);
	          } else {
	            whenTransitionEnds(el, type, cb);
	          }
	        }
	      });
	    }
	    leave && leave(el, cb);
	    if (!expectsCSS && !userWantsControl) {
	      cb();
	    }
	  }
	}

	// only used in dev mode
	function checkDuration(val, name, vnode) {
	  if (typeof val !== 'number') {
	    warn("<transition> explicit " + name + " duration is not a valid number - " + "got " + JSON.stringify(val) + ".", vnode.context);
	  } else if (isNaN(val)) {
	    warn("<transition> explicit " + name + " duration is NaN - " + 'the duration expression might be incorrect.', vnode.context);
	  }
	}

	function isValidDuration(val) {
	  return typeof val === 'number' && !isNaN(val);
	}

	/**
	 * Normalize a transition hook's argument length. The hook may be:
	 * - a merged hook (invoker) with the original in .fns
	 * - a wrapped component method (check ._length)
	 * - a plain function (.length)
	 */
	function getHookArgumentsLength(fn) {
	  if (isUndef(fn)) {
	    return false;
	  }
	  var invokerFns = fn.fns;
	  if (isDef(invokerFns)) {
	    // invoker
	    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);
	  } else {
	    return (fn._length || fn.length) > 1;
	  }
	}

	function _enter(_, vnode) {
	  if (vnode.data.show !== true) {
	    enter(vnode);
	  }
	}

	var transition = inBrowser ? {
	  create: _enter,
	  activate: _enter,
	  remove: function remove$$1(vnode, rm) {
	    /* istanbul ignore else */
	    if (vnode.data.show !== true) {
	      leave(vnode, rm);
	    } else {
	      rm();
	    }
	  }
	} : {};

	var platformModules = [attrs, klass, events, domProps, style, transition];

	/*  */

	// the directive module should be applied last, after all
	// built-in modules have been applied.
	var modules = platformModules.concat(baseModules);

	var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

	/**
	 * Not type checking this file because flow doesn't like attaching
	 * properties to Elements.
	 */

	/* istanbul ignore if */
	if (isIE9) {
	  // http://www.matts411.com/post/internet-explorer-9-oninput/
	  document.addEventListener('selectionchange', function () {
	    var el = document.activeElement;
	    if (el && el.vmodel) {
	      trigger(el, 'input');
	    }
	  });
	}

	var model$1 = {
	  inserted: function inserted(el, binding, vnode) {
	    if (vnode.tag === 'select') {
	      var cb = function cb() {
	        setSelected(el, binding, vnode.context);
	      };
	      cb();
	      /* istanbul ignore if */
	      if (isIE || isEdge) {
	        setTimeout(cb, 0);
	      }
	    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {
	      el._vModifiers = binding.modifiers;
	      if (!binding.modifiers.lazy) {
	        // Safari < 10.2 & UIWebView doesn't fire compositionend when
	        // switching focus before confirming composition choice
	        // this also fixes the issue where some browsers e.g. iOS Chrome
	        // fires "change" instead of "input" on autocomplete.
	        el.addEventListener('change', onCompositionEnd);
	        if (!isAndroid) {
	          el.addEventListener('compositionstart', onCompositionStart);
	          el.addEventListener('compositionend', onCompositionEnd);
	        }
	        /* istanbul ignore if */
	        if (isIE9) {
	          el.vmodel = true;
	        }
	      }
	    }
	  },
	  componentUpdated: function componentUpdated(el, binding, vnode) {
	    if (vnode.tag === 'select') {
	      setSelected(el, binding, vnode.context);
	      // in case the options rendered by v-for have changed,
	      // it's possible that the value is out-of-sync with the rendered options.
	      // detect such cases and filter out values that no longer has a matching
	      // option in the DOM.
	      var needReset = el.multiple ? binding.value.some(function (v) {
	        return hasNoMatchingOption(v, el.options);
	      }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);
	      if (needReset) {
	        trigger(el, 'change');
	      }
	    }
	  }
	};

	function setSelected(el, binding, vm) {
	  var value = binding.value;
	  var isMultiple = el.multiple;
	  if (isMultiple && !Array.isArray(value)) {
	    process.env.NODE_ENV !== 'production' && warn("<select multiple v-model=\"" + binding.expression + "\"> " + "expects an Array value for its binding, but got " + Object.prototype.toString.call(value).slice(8, -1), vm);
	    return;
	  }
	  var selected, option;
	  for (var i = 0, l = el.options.length; i < l; i++) {
	    option = el.options[i];
	    if (isMultiple) {
	      selected = looseIndexOf(value, getValue(option)) > -1;
	      if (option.selected !== selected) {
	        option.selected = selected;
	      }
	    } else {
	      if (looseEqual(getValue(option), value)) {
	        if (el.selectedIndex !== i) {
	          el.selectedIndex = i;
	        }
	        return;
	      }
	    }
	  }
	  if (!isMultiple) {
	    el.selectedIndex = -1;
	  }
	}

	function hasNoMatchingOption(value, options) {
	  for (var i = 0, l = options.length; i < l; i++) {
	    if (looseEqual(getValue(options[i]), value)) {
	      return false;
	    }
	  }
	  return true;
	}

	function getValue(option) {
	  return '_value' in option ? option._value : option.value;
	}

	function onCompositionStart(e) {
	  e.target.composing = true;
	}

	function onCompositionEnd(e) {
	  // prevent triggering an input event for no reason
	  if (!e.target.composing) {
	    return;
	  }
	  e.target.composing = false;
	  trigger(e.target, 'input');
	}

	function trigger(el, type) {
	  var e = document.createEvent('HTMLEvents');
	  e.initEvent(type, true, true);
	  el.dispatchEvent(e);
	}

	/*  */

	// recursively search for possible transition defined inside the component root
	function locateNode(vnode) {
	  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;
	}

	var show = {
	  bind: function bind(el, ref, vnode) {
	    var value = ref.value;

	    vnode = locateNode(vnode);
	    var transition = vnode.data && vnode.data.transition;
	    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;
	    if (value && transition && !isIE9) {
	      vnode.data.show = true;
	      enter(vnode, function () {
	        el.style.display = originalDisplay;
	      });
	    } else {
	      el.style.display = value ? originalDisplay : 'none';
	    }
	  },

	  update: function update(el, ref, vnode) {
	    var value = ref.value;
	    var oldValue = ref.oldValue;

	    /* istanbul ignore if */
	    if (value === oldValue) {
	      return;
	    }
	    vnode = locateNode(vnode);
	    var transition = vnode.data && vnode.data.transition;
	    if (transition && !isIE9) {
	      vnode.data.show = true;
	      if (value) {
	        enter(vnode, function () {
	          el.style.display = el.__vOriginalDisplay;
	        });
	      } else {
	        leave(vnode, function () {
	          el.style.display = 'none';
	        });
	      }
	    } else {
	      el.style.display = value ? el.__vOriginalDisplay : 'none';
	    }
	  },

	  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {
	    if (!isDestroy) {
	      el.style.display = el.__vOriginalDisplay;
	    }
	  }
	};

	var platformDirectives = {
	  model: model$1,
	  show: show
	};

	/*  */

	// Provides transition support for a single element/component.
	// supports transition mode (out-in / in-out)

	var transitionProps = {
	  name: String,
	  appear: Boolean,
	  css: Boolean,
	  mode: String,
	  type: String,
	  enterClass: String,
	  leaveClass: String,
	  enterToClass: String,
	  leaveToClass: String,
	  enterActiveClass: String,
	  leaveActiveClass: String,
	  appearClass: String,
	  appearActiveClass: String,
	  appearToClass: String,
	  duration: [Number, String, Object]
	};

	// in case the child is also an abstract component, e.g. <keep-alive>
	// we want to recursively retrieve the real component to be rendered
	function getRealChild(vnode) {
	  var compOptions = vnode && vnode.componentOptions;
	  if (compOptions && compOptions.Ctor.options.abstract) {
	    return getRealChild(getFirstComponentChild(compOptions.children));
	  } else {
	    return vnode;
	  }
	}

	function extractTransitionData(comp) {
	  var data = {};
	  var options = comp.$options;
	  // props
	  for (var key in options.propsData) {
	    data[key] = comp[key];
	  }
	  // events.
	  // extract listeners and pass them directly to the transition methods
	  var listeners = options._parentListeners;
	  for (var key$1 in listeners) {
	    data[camelize(key$1)] = listeners[key$1];
	  }
	  return data;
	}

	function placeholder(h, rawChild) {
	  if (/\d-keep-alive$/.test(rawChild.tag)) {
	    return h('keep-alive', {
	      props: rawChild.componentOptions.propsData
	    });
	  }
	}

	function hasParentTransition(vnode) {
	  while (vnode = vnode.parent) {
	    if (vnode.data.transition) {
	      return true;
	    }
	  }
	}

	function isSameChild(child, oldChild) {
	  return oldChild.key === child.key && oldChild.tag === child.tag;
	}

	var Transition = {
	  name: 'transition',
	  props: transitionProps,
	  abstract: true,

	  render: function render(h) {
	    var this$1 = this;

	    var children = this.$slots.default;
	    if (!children) {
	      return;
	    }

	    // filter out text nodes (possible whitespaces)
	    children = children.filter(function (c) {
	      return c.tag;
	    });
	    /* istanbul ignore if */
	    if (!children.length) {
	      return;
	    }

	    // warn multiple elements
	    if (process.env.NODE_ENV !== 'production' && children.length > 1) {
	      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);
	    }

	    var mode = this.mode;

	    // warn invalid mode
	    if (process.env.NODE_ENV !== 'production' && mode && mode !== 'in-out' && mode !== 'out-in') {
	      warn('invalid <transition> mode: ' + mode, this.$parent);
	    }

	    var rawChild = children[0];

	    // if this is a component root node and the component's
	    // parent container node also has transition, skip.
	    if (hasParentTransition(this.$vnode)) {
	      return rawChild;
	    }

	    // apply transition data to child
	    // use getRealChild() to ignore abstract components e.g. keep-alive
	    var child = getRealChild(rawChild);
	    /* istanbul ignore if */
	    if (!child) {
	      return rawChild;
	    }

	    if (this._leaving) {
	      return placeholder(h, rawChild);
	    }

	    // ensure a key that is unique to the vnode type and to this transition
	    // component instance. This key will be used to remove pending leaving nodes
	    // during entering.
	    var id = "__transition-" + this._uid + "-";
	    child.key = child.key == null ? id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;

	    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
	    var oldRawChild = this._vnode;
	    var oldChild = getRealChild(oldRawChild);

	    // mark v-show
	    // so that the transition module can hand over the control to the directive
	    if (child.data.directives && child.data.directives.some(function (d) {
	      return d.name === 'show';
	    })) {
	      child.data.show = true;
	    }

	    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {
	      // replace old child transition data with fresh one
	      // important for dynamic transitions!
	      var oldData = oldChild && (oldChild.data.transition = extend({}, data));
	      // handle transition mode
	      if (mode === 'out-in') {
	        // return placeholder node and queue update when leave finishes
	        this._leaving = true;
	        mergeVNodeHook(oldData, 'afterLeave', function () {
	          this$1._leaving = false;
	          this$1.$forceUpdate();
	        });
	        return placeholder(h, rawChild);
	      } else if (mode === 'in-out') {
	        var delayedLeave;
	        var performLeave = function performLeave() {
	          delayedLeave();
	        };
	        mergeVNodeHook(data, 'afterEnter', performLeave);
	        mergeVNodeHook(data, 'enterCancelled', performLeave);
	        mergeVNodeHook(oldData, 'delayLeave', function (leave) {
	          delayedLeave = leave;
	        });
	      }
	    }

	    return rawChild;
	  }
	};

	/*  */

	// Provides transition support for list items.
	// supports move transitions using the FLIP technique.

	// Because the vdom's children update algorithm is "unstable" - i.e.
	// it doesn't guarantee the relative positioning of removed elements,
	// we force transition-group to update its children into two passes:
	// in the first pass, we remove all nodes that need to be removed,
	// triggering their leaving transition; in the second pass, we insert/move
	// into the final desired state. This way in the second pass removed
	// nodes will remain where they should be.

	var props = extend({
	  tag: String,
	  moveClass: String
	}, transitionProps);

	delete props.mode;

	var TransitionGroup = {
	  props: props,

	  render: function render(h) {
	    var tag = this.tag || this.$vnode.data.tag || 'span';
	    var map = Object.create(null);
	    var prevChildren = this.prevChildren = this.children;
	    var rawChildren = this.$slots.default || [];
	    var children = this.children = [];
	    var transitionData = extractTransitionData(this);

	    for (var i = 0; i < rawChildren.length; i++) {
	      var c = rawChildren[i];
	      if (c.tag) {
	        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
	          children.push(c);
	          map[c.key] = c;(c.data || (c.data = {})).transition = transitionData;
	        } else if (process.env.NODE_ENV !== 'production') {
	          var opts = c.componentOptions;
	          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;
	          warn("<transition-group> children must be keyed: <" + name + ">");
	        }
	      }
	    }

	    if (prevChildren) {
	      var kept = [];
	      var removed = [];
	      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
	        var c$1 = prevChildren[i$1];
	        c$1.data.transition = transitionData;
	        c$1.data.pos = c$1.elm.getBoundingClientRect();
	        if (map[c$1.key]) {
	          kept.push(c$1);
	        } else {
	          removed.push(c$1);
	        }
	      }
	      this.kept = h(tag, null, kept);
	      this.removed = removed;
	    }

	    return h(tag, null, children);
	  },

	  beforeUpdate: function beforeUpdate() {
	    // force removing pass
	    this.__patch__(this._vnode, this.kept, false, // hydrating
	    true // removeOnly (!important, avoids unnecessary moves)
	    );
	    this._vnode = this.kept;
	  },

	  updated: function updated() {
	    var children = this.prevChildren;
	    var moveClass = this.moveClass || (this.name || 'v') + '-move';
	    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
	      return;
	    }

	    // we divide the work into three loops to avoid mixing DOM reads and writes
	    // in each iteration - which helps prevent layout thrashing.
	    children.forEach(callPendingCbs);
	    children.forEach(recordPosition);
	    children.forEach(applyTranslation);

	    // force reflow to put everything in position
	    var body = document.body;
	    var f = body.offsetHeight; // eslint-disable-line

	    children.forEach(function (c) {
	      if (c.data.moved) {
	        var el = c.elm;
	        var s = el.style;
	        addTransitionClass(el, moveClass);
	        s.transform = s.WebkitTransform = s.transitionDuration = '';
	        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
	          if (!e || /transform$/.test(e.propertyName)) {
	            el.removeEventListener(transitionEndEvent, cb);
	            el._moveCb = null;
	            removeTransitionClass(el, moveClass);
	          }
	        });
	      }
	    });
	  },

	  methods: {
	    hasMove: function hasMove(el, moveClass) {
	      /* istanbul ignore if */
	      if (!hasTransition) {
	        return false;
	      }
	      if (this._hasMove != null) {
	        return this._hasMove;
	      }
	      // Detect whether an element with the move class applied has
	      // CSS transitions. Since the element may be inside an entering
	      // transition at this very moment, we make a clone of it and remove
	      // all other transition classes applied to ensure only the move class
	      // is applied.
	      var clone = el.cloneNode();
	      if (el._transitionClasses) {
	        el._transitionClasses.forEach(function (cls) {
	          removeClass(clone, cls);
	        });
	      }
	      addClass(clone, moveClass);
	      clone.style.display = 'none';
	      this.$el.appendChild(clone);
	      var info = getTransitionInfo(clone);
	      this.$el.removeChild(clone);
	      return this._hasMove = info.hasTransform;
	    }
	  }
	};

	function callPendingCbs(c) {
	  /* istanbul ignore if */
	  if (c.elm._moveCb) {
	    c.elm._moveCb();
	  }
	  /* istanbul ignore if */
	  if (c.elm._enterCb) {
	    c.elm._enterCb();
	  }
	}

	function recordPosition(c) {
	  c.data.newPos = c.elm.getBoundingClientRect();
	}

	function applyTranslation(c) {
	  var oldPos = c.data.pos;
	  var newPos = c.data.newPos;
	  var dx = oldPos.left - newPos.left;
	  var dy = oldPos.top - newPos.top;
	  if (dx || dy) {
	    c.data.moved = true;
	    var s = c.elm.style;
	    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
	    s.transitionDuration = '0s';
	  }
	}

	var platformComponents = {
	  Transition: Transition,
	  TransitionGroup: TransitionGroup
	};

	/*  */

	// install platform specific utils
	Vue$3.config.mustUseProp = mustUseProp;
	Vue$3.config.isReservedTag = isReservedTag;
	Vue$3.config.isReservedAttr = isReservedAttr;
	Vue$3.config.getTagNamespace = getTagNamespace;
	Vue$3.config.isUnknownElement = isUnknownElement;

	// install platform runtime directives & components
	extend(Vue$3.options.directives, platformDirectives);
	extend(Vue$3.options.components, platformComponents);

	// install platform patch function
	Vue$3.prototype.__patch__ = inBrowser ? patch : noop;

	// public mount method
	Vue$3.prototype.$mount = function (el, hydrating) {
	  el = el && inBrowser ? query(el) : undefined;
	  return mountComponent(this, el, hydrating);
	};

	// devtools global hook
	/* istanbul ignore next */
	setTimeout(function () {
	  if (config.devtools) {
	    if (devtools) {
	      devtools.emit('init', Vue$3);
	    } else if (process.env.NODE_ENV !== 'production' && isChrome) {
	      console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\n' + 'https://github.com/vuejs/vue-devtools');
	    }
	  }
	  if (process.env.NODE_ENV !== 'production' && config.productionTip !== false && inBrowser && typeof console !== 'undefined') {
	    console[console.info ? 'info' : 'log']("You are running Vue in development mode.\n" + "Make sure to turn on production mode when deploying for production.\n" + "See more tips at https://vuejs.org/guide/deployment.html");
	  }
	}, 0);

	/*  */

	// check whether current browser encodes a char inside attribute values
	function shouldDecode(content, encoded) {
	  var div = document.createElement('div');
	  div.innerHTML = "<div a=\"" + content + "\">";
	  return div.innerHTML.indexOf(encoded) > 0;
	}

	// #3663
	// IE encodes newlines inside attribute values while other browsers don't
	var shouldDecodeNewlines = inBrowser ? shouldDecode('\n', '&#10;') : false;

	/*  */

	var isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr');

	// Elements that you can, intentionally, leave open
	// (and which close themselves)
	var canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source');

	// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
	// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
	var isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track');

	/*  */

	var decoder;

	function decode(html) {
	  decoder = decoder || document.createElement('div');
	  decoder.innerHTML = html;
	  return decoder.textContent;
	}

	/**
	 * Not type-checking this file because it's mostly vendor code.
	 */

	/*!
	 * HTML Parser By John Resig (ejohn.org)
	 * Modified by Juriy "kangax" Zaytsev
	 * Original code by Erik Arvidsson, Mozilla Public License
	 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
	 */

	// Regular Expressions for parsing tags and attributes
	var singleAttrIdentifier = /([^\s"'<>/=]+)/;
	var singleAttrAssign = /(?:=)/;
	var singleAttrValues = [
	// attr value double quotes
	/"([^"]*)"+/.source,
	// attr value, single quotes
	/'([^']*)'+/.source,
	// attr value, no quotes
	/([^\s"'=<>`]+)/.source];
	var attribute = new RegExp('^\\s*' + singleAttrIdentifier.source + '(?:\\s*(' + singleAttrAssign.source + ')' + '\\s*(?:' + singleAttrValues.join('|') + '))?');

	// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
	// but for Vue templates we can enforce a simple charset
	var ncname = '[a-zA-Z_][\\w\\-\\.]*';
	var qnameCapture = '((?:' + ncname + '\\:)?' + ncname + ')';
	var startTagOpen = new RegExp('^<' + qnameCapture);
	var startTagClose = /^\s*(\/?)>/;
	var endTag = new RegExp('^<\\/' + qnameCapture + '[^>]*>');
	var doctype = /^<!DOCTYPE [^>]+>/i;
	var comment = /^<!--/;
	var conditionalComment = /^<!\[/;

	var IS_REGEX_CAPTURING_BROKEN = false;
	'x'.replace(/x(.)?/g, function (m, g) {
	  IS_REGEX_CAPTURING_BROKEN = g === '';
	});

	// Special Elements (can contain anything)
	var isPlainTextElement = makeMap('script,style,textarea', true);
	var reCache = {};

	var decodingMap = {
	  '&lt;': '<',
	  '&gt;': '>',
	  '&quot;': '"',
	  '&amp;': '&',
	  '&#10;': '\n'
	};
	var encodedAttr = /&(?:lt|gt|quot|amp);/g;
	var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;

	function decodeAttr(value, shouldDecodeNewlines) {
	  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
	  return value.replace(re, function (match) {
	    return decodingMap[match];
	  });
	}

	function parseHTML(html, options) {
	  var stack = [];
	  var expectHTML = options.expectHTML;
	  var isUnaryTag$$1 = options.isUnaryTag || no;
	  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
	  var index = 0;
	  var last, lastTag;
	  while (html) {
	    last = html;
	    // Make sure we're not in a plaintext content element like script/style
	    if (!lastTag || !isPlainTextElement(lastTag)) {
	      var textEnd = html.indexOf('<');
	      if (textEnd === 0) {
	        // Comment:
	        if (comment.test(html)) {
	          var commentEnd = html.indexOf('-->');

	          if (commentEnd >= 0) {
	            advance(commentEnd + 3);
	            continue;
	          }
	        }

	        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
	        if (conditionalComment.test(html)) {
	          var conditionalEnd = html.indexOf(']>');

	          if (conditionalEnd >= 0) {
	            advance(conditionalEnd + 2);
	            continue;
	          }
	        }

	        // Doctype:
	        var doctypeMatch = html.match(doctype);
	        if (doctypeMatch) {
	          advance(doctypeMatch[0].length);
	          continue;
	        }

	        // End tag:
	        var endTagMatch = html.match(endTag);
	        if (endTagMatch) {
	          var curIndex = index;
	          advance(endTagMatch[0].length);
	          parseEndTag(endTagMatch[1], curIndex, index);
	          continue;
	        }

	        // Start tag:
	        var startTagMatch = parseStartTag();
	        if (startTagMatch) {
	          handleStartTag(startTagMatch);
	          continue;
	        }
	      }

	      var text = void 0,
	          rest$1 = void 0,
	          next = void 0;
	      if (textEnd >= 0) {
	        rest$1 = html.slice(textEnd);
	        while (!endTag.test(rest$1) && !startTagOpen.test(rest$1) && !comment.test(rest$1) && !conditionalComment.test(rest$1)) {
	          // < in plain text, be forgiving and treat it as text
	          next = rest$1.indexOf('<', 1);
	          if (next < 0) {
	            break;
	          }
	          textEnd += next;
	          rest$1 = html.slice(textEnd);
	        }
	        text = html.substring(0, textEnd);
	        advance(textEnd);
	      }

	      if (textEnd < 0) {
	        text = html;
	        html = '';
	      }

	      if (options.chars && text) {
	        options.chars(text);
	      }
	    } else {
	      var stackedTag = lastTag.toLowerCase();
	      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
	      var endTagLength = 0;
	      var rest = html.replace(reStackedTag, function (all, text, endTag) {
	        endTagLength = endTag.length;
	        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
	          text = text.replace(/<!--([\s\S]*?)-->/g, '$1').replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
	        }
	        if (options.chars) {
	          options.chars(text);
	        }
	        return '';
	      });
	      index += html.length - rest.length;
	      html = rest;
	      parseEndTag(stackedTag, index - endTagLength, index);
	    }

	    if (html === last) {
	      options.chars && options.chars(html);
	      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {
	        options.warn("Mal-formatted tag at end of template: \"" + html + "\"");
	      }
	      break;
	    }
	  }

	  // Clean up any remaining tags
	  parseEndTag();

	  function advance(n) {
	    index += n;
	    html = html.substring(n);
	  }

	  function parseStartTag() {
	    var start = html.match(startTagOpen);
	    if (start) {
	      var match = {
	        tagName: start[1],
	        attrs: [],
	        start: index
	      };
	      advance(start[0].length);
	      var end, attr;
	      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
	        advance(attr[0].length);
	        match.attrs.push(attr);
	      }
	      if (end) {
	        match.unarySlash = end[1];
	        advance(end[0].length);
	        match.end = index;
	        return match;
	      }
	    }
	  }

	  function handleStartTag(match) {
	    var tagName = match.tagName;
	    var unarySlash = match.unarySlash;

	    if (expectHTML) {
	      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
	        parseEndTag(lastTag);
	      }
	      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
	        parseEndTag(tagName);
	      }
	    }

	    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;

	    var l = match.attrs.length;
	    var attrs = new Array(l);
	    for (var i = 0; i < l; i++) {
	      var args = match.attrs[i];
	      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
	      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
	        if (args[3] === '') {
	          delete args[3];
	        }
	        if (args[4] === '') {
	          delete args[4];
	        }
	        if (args[5] === '') {
	          delete args[5];
	        }
	      }
	      var value = args[3] || args[4] || args[5] || '';
	      attrs[i] = {
	        name: args[1],
	        value: decodeAttr(value, options.shouldDecodeNewlines)
	      };
	    }

	    if (!unary) {
	      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });
	      lastTag = tagName;
	    }

	    if (options.start) {
	      options.start(tagName, attrs, unary, match.start, match.end);
	    }
	  }

	  function parseEndTag(tagName, start, end) {
	    var pos, lowerCasedTagName;
	    if (start == null) {
	      start = index;
	    }
	    if (end == null) {
	      end = index;
	    }

	    if (tagName) {
	      lowerCasedTagName = tagName.toLowerCase();
	    }

	    // Find the closest opened tag of the same type
	    if (tagName) {
	      for (pos = stack.length - 1; pos >= 0; pos--) {
	        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
	          break;
	        }
	      }
	    } else {
	      // If no tag name is provided, clean shop
	      pos = 0;
	    }

	    if (pos >= 0) {
	      // Close all the open elements, up the stack
	      for (var i = stack.length - 1; i >= pos; i--) {
	        if (process.env.NODE_ENV !== 'production' && (i > pos || !tagName) && options.warn) {
	          options.warn("tag <" + stack[i].tag + "> has no matching end tag.");
	        }
	        if (options.end) {
	          options.end(stack[i].tag, start, end);
	        }
	      }

	      // Remove the open elements from the stack
	      stack.length = pos;
	      lastTag = pos && stack[pos - 1].tag;
	    } else if (lowerCasedTagName === 'br') {
	      if (options.start) {
	        options.start(tagName, [], true, start, end);
	      }
	    } else if (lowerCasedTagName === 'p') {
	      if (options.start) {
	        options.start(tagName, [], false, start, end);
	      }
	      if (options.end) {
	        options.end(tagName, start, end);
	      }
	    }
	  }
	}

	/*  */

	var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
	var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

	var buildRegex = cached(function (delimiters) {
	  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
	  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
	  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g');
	});

	function parseText(text, delimiters) {
	  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
	  if (!tagRE.test(text)) {
	    return;
	  }
	  var tokens = [];
	  var lastIndex = tagRE.lastIndex = 0;
	  var match, index;
	  while (match = tagRE.exec(text)) {
	    index = match.index;
	    // push text token
	    if (index > lastIndex) {
	      tokens.push(JSON.stringify(text.slice(lastIndex, index)));
	    }
	    // tag token
	    var exp = parseFilters(match[1].trim());
	    tokens.push("_s(" + exp + ")");
	    lastIndex = index + match[0].length;
	  }
	  if (lastIndex < text.length) {
	    tokens.push(JSON.stringify(text.slice(lastIndex)));
	  }
	  return tokens.join('+');
	}

	/*  */

	var onRE = /^@|^v-on:/;
	var dirRE = /^v-|^@|^:/;
	var forAliasRE = /(.*?)\s+(?:in|of)\s+(.*)/;
	var forIteratorRE = /\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;

	var argRE = /:(.*)$/;
	var bindRE = /^:|^v-bind:/;
	var modifierRE = /\.[^.]+/g;

	var decodeHTMLCached = cached(decode);

	// configurable state
	var warn$2;
	var delimiters;
	var transforms;
	var preTransforms;
	var postTransforms;
	var platformIsPreTag;
	var platformMustUseProp;
	var platformGetTagNamespace;

	/**
	 * Convert HTML string to AST.
	 */
	function parse(template, options) {
	  warn$2 = options.warn || baseWarn;
	  platformGetTagNamespace = options.getTagNamespace || no;
	  platformMustUseProp = options.mustUseProp || no;
	  platformIsPreTag = options.isPreTag || no;
	  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
	  transforms = pluckModuleFunction(options.modules, 'transformNode');
	  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');
	  delimiters = options.delimiters;

	  var stack = [];
	  var preserveWhitespace = options.preserveWhitespace !== false;
	  var root;
	  var currentParent;
	  var inVPre = false;
	  var inPre = false;
	  var warned = false;

	  function warnOnce(msg) {
	    if (!warned) {
	      warned = true;
	      warn$2(msg);
	    }
	  }

	  function endPre(element) {
	    // check pre state
	    if (element.pre) {
	      inVPre = false;
	    }
	    if (platformIsPreTag(element.tag)) {
	      inPre = false;
	    }
	  }

	  parseHTML(template, {
	    warn: warn$2,
	    expectHTML: options.expectHTML,
	    isUnaryTag: options.isUnaryTag,
	    canBeLeftOpenTag: options.canBeLeftOpenTag,
	    shouldDecodeNewlines: options.shouldDecodeNewlines,
	    start: function start(tag, attrs, unary) {
	      // check namespace.
	      // inherit parent ns if there is one
	      var ns = currentParent && currentParent.ns || platformGetTagNamespace(tag);

	      // handle IE svg bug
	      /* istanbul ignore if */
	      if (isIE && ns === 'svg') {
	        attrs = guardIESVGBug(attrs);
	      }

	      var element = {
	        type: 1,
	        tag: tag,
	        attrsList: attrs,
	        attrsMap: makeAttrsMap(attrs),
	        parent: currentParent,
	        children: []
	      };
	      if (ns) {
	        element.ns = ns;
	      }

	      if (isForbiddenTag(element) && !isServerRendering()) {
	        element.forbidden = true;
	        process.env.NODE_ENV !== 'production' && warn$2('Templates should only be responsible for mapping the state to the ' + 'UI. Avoid placing tags with side-effects in your templates, such as ' + "<" + tag + ">" + ', as they will not be parsed.');
	      }

	      // apply pre-transforms
	      for (var i = 0; i < preTransforms.length; i++) {
	        preTransforms[i](element, options);
	      }

	      if (!inVPre) {
	        processPre(element);
	        if (element.pre) {
	          inVPre = true;
	        }
	      }
	      if (platformIsPreTag(element.tag)) {
	        inPre = true;
	      }
	      if (inVPre) {
	        processRawAttrs(element);
	      } else {
	        processFor(element);
	        processIf(element);
	        processOnce(element);
	        processKey(element);

	        // determine whether this is a plain element after
	        // removing structural attributes
	        element.plain = !element.key && !attrs.length;

	        processRef(element);
	        processSlot(element);
	        processComponent(element);
	        for (var i$1 = 0; i$1 < transforms.length; i$1++) {
	          transforms[i$1](element, options);
	        }
	        processAttrs(element);
	      }

	      function checkRootConstraints(el) {
	        if (process.env.NODE_ENV !== 'production') {
	          if (el.tag === 'slot' || el.tag === 'template') {
	            warnOnce("Cannot use <" + el.tag + "> as component root element because it may " + 'contain multiple nodes.');
	          }
	          if (el.attrsMap.hasOwnProperty('v-for')) {
	            warnOnce('Cannot use v-for on stateful component root element because ' + 'it renders multiple elements.');
	          }
	        }
	      }

	      // tree management
	      if (!root) {
	        root = element;
	        checkRootConstraints(root);
	      } else if (!stack.length) {
	        // allow root elements with v-if, v-else-if and v-else
	        if (root.if && (element.elseif || element.else)) {
	          checkRootConstraints(element);
	          addIfCondition(root, {
	            exp: element.elseif,
	            block: element
	          });
	        } else if (process.env.NODE_ENV !== 'production') {
	          warnOnce("Component template should contain exactly one root element. " + "If you are using v-if on multiple elements, " + "use v-else-if to chain them instead.");
	        }
	      }
	      if (currentParent && !element.forbidden) {
	        if (element.elseif || element.else) {
	          processIfConditions(element, currentParent);
	        } else if (element.slotScope) {
	          // scoped slot
	          currentParent.plain = false;
	          var name = element.slotTarget || '"default"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
	        } else {
	          currentParent.children.push(element);
	          element.parent = currentParent;
	        }
	      }
	      if (!unary) {
	        currentParent = element;
	        stack.push(element);
	      } else {
	        endPre(element);
	      }
	      // apply post-transforms
	      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {
	        postTransforms[i$2](element, options);
	      }
	    },

	    end: function end() {
	      // remove trailing whitespace
	      var element = stack[stack.length - 1];
	      var lastNode = element.children[element.children.length - 1];
	      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
	        element.children.pop();
	      }
	      // pop stack
	      stack.length -= 1;
	      currentParent = stack[stack.length - 1];
	      endPre(element);
	    },

	    chars: function chars(text) {
	      if (!currentParent) {
	        if (process.env.NODE_ENV !== 'production') {
	          if (text === template) {
	            warnOnce('Component template requires a root element, rather than just text.');
	          } else if (text = text.trim()) {
	            warnOnce("text \"" + text + "\" outside root element will be ignored.");
	          }
	        }
	        return;
	      }
	      // IE textarea placeholder bug
	      /* istanbul ignore if */
	      if (isIE && currentParent.tag === 'textarea' && currentParent.attrsMap.placeholder === text) {
	        return;
	      }
	      var children = currentParent.children;
	      text = inPre || text.trim() ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
	      // only preserve whitespace if its not right after a starting tag
	      : preserveWhitespace && children.length ? ' ' : '';
	      if (text) {
	        var expression;
	        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {
	          children.push({
	            type: 2,
	            expression: expression,
	            text: text
	          });
	        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
	          children.push({
	            type: 3,
	            text: text
	          });
	        }
	      }
	    }
	  });
	  return root;
	}

	function processPre(el) {
	  if (getAndRemoveAttr(el, 'v-pre') != null) {
	    el.pre = true;
	  }
	}

	function processRawAttrs(el) {
	  var l = el.attrsList.length;
	  if (l) {
	    var attrs = el.attrs = new Array(l);
	    for (var i = 0; i < l; i++) {
	      attrs[i] = {
	        name: el.attrsList[i].name,
	        value: JSON.stringify(el.attrsList[i].value)
	      };
	    }
	  } else if (!el.pre) {
	    // non root node in pre blocks with no attributes
	    el.plain = true;
	  }
	}

	function processKey(el) {
	  var exp = getBindingAttr(el, 'key');
	  if (exp) {
	    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {
	      warn$2("<template> cannot be keyed. Place the key on real elements instead.");
	    }
	    el.key = exp;
	  }
	}

	function processRef(el) {
	  var ref = getBindingAttr(el, 'ref');
	  if (ref) {
	    el.ref = ref;
	    el.refInFor = checkInFor(el);
	  }
	}

	function processFor(el) {
	  var exp;
	  if (exp = getAndRemoveAttr(el, 'v-for')) {
	    var inMatch = exp.match(forAliasRE);
	    if (!inMatch) {
	      process.env.NODE_ENV !== 'production' && warn$2("Invalid v-for expression: " + exp);
	      return;
	    }
	    el.for = inMatch[2].trim();
	    var alias = inMatch[1].trim();
	    var iteratorMatch = alias.match(forIteratorRE);
	    if (iteratorMatch) {
	      el.alias = iteratorMatch[1].trim();
	      el.iterator1 = iteratorMatch[2].trim();
	      if (iteratorMatch[3]) {
	        el.iterator2 = iteratorMatch[3].trim();
	      }
	    } else {
	      el.alias = alias;
	    }
	  }
	}

	function processIf(el) {
	  var exp = getAndRemoveAttr(el, 'v-if');
	  if (exp) {
	    el.if = exp;
	    addIfCondition(el, {
	      exp: exp,
	      block: el
	    });
	  } else {
	    if (getAndRemoveAttr(el, 'v-else') != null) {
	      el.else = true;
	    }
	    var elseif = getAndRemoveAttr(el, 'v-else-if');
	    if (elseif) {
	      el.elseif = elseif;
	    }
	  }
	}

	function processIfConditions(el, parent) {
	  var prev = findPrevElement(parent.children);
	  if (prev && prev.if) {
	    addIfCondition(prev, {
	      exp: el.elseif,
	      block: el
	    });
	  } else if (process.env.NODE_ENV !== 'production') {
	    warn$2("v-" + (el.elseif ? 'else-if="' + el.elseif + '"' : 'else') + " " + "used on element <" + el.tag + "> without corresponding v-if.");
	  }
	}

	function findPrevElement(children) {
	  var i = children.length;
	  while (i--) {
	    if (children[i].type === 1) {
	      return children[i];
	    } else {
	      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {
	        warn$2("text \"" + children[i].text.trim() + "\" between v-if and v-else(-if) " + "will be ignored.");
	      }
	      children.pop();
	    }
	  }
	}

	function addIfCondition(el, condition) {
	  if (!el.ifConditions) {
	    el.ifConditions = [];
	  }
	  el.ifConditions.push(condition);
	}

	function processOnce(el) {
	  var once$$1 = getAndRemoveAttr(el, 'v-once');
	  if (once$$1 != null) {
	    el.once = true;
	  }
	}

	function processSlot(el) {
	  if (el.tag === 'slot') {
	    el.slotName = getBindingAttr(el, 'name');
	    if (process.env.NODE_ENV !== 'production' && el.key) {
	      warn$2("`key` does not work on <slot> because slots are abstract outlets " + "and can possibly expand into multiple elements. " + "Use the key on a wrapping element instead.");
	    }
	  } else {
	    var slotTarget = getBindingAttr(el, 'slot');
	    if (slotTarget) {
	      el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
	    }
	    if (el.tag === 'template') {
	      el.slotScope = getAndRemoveAttr(el, 'scope');
	    }
	  }
	}

	function processComponent(el) {
	  var binding;
	  if (binding = getBindingAttr(el, 'is')) {
	    el.component = binding;
	  }
	  if (getAndRemoveAttr(el, 'inline-template') != null) {
	    el.inlineTemplate = true;
	  }
	}

	function processAttrs(el) {
	  var list = el.attrsList;
	  var i, l, name, rawName, value, modifiers, isProp;
	  for (i = 0, l = list.length; i < l; i++) {
	    name = rawName = list[i].name;
	    value = list[i].value;
	    if (dirRE.test(name)) {
	      // mark element as dynamic
	      el.hasBindings = true;
	      // modifiers
	      modifiers = parseModifiers(name);
	      if (modifiers) {
	        name = name.replace(modifierRE, '');
	      }
	      if (bindRE.test(name)) {
	        // v-bind
	        name = name.replace(bindRE, '');
	        value = parseFilters(value);
	        isProp = false;
	        if (modifiers) {
	          if (modifiers.prop) {
	            isProp = true;
	            name = camelize(name);
	            if (name === 'innerHtml') {
	              name = 'innerHTML';
	            }
	          }
	          if (modifiers.camel) {
	            name = camelize(name);
	          }
	          if (modifiers.sync) {
	            addHandler(el, "update:" + camelize(name), genAssignmentCode(value, "$event"));
	          }
	        }
	        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {
	          addProp(el, name, value);
	        } else {
	          addAttr(el, name, value);
	        }
	      } else if (onRE.test(name)) {
	        // v-on
	        name = name.replace(onRE, '');
	        addHandler(el, name, value, modifiers, false, warn$2);
	      } else {
	        // normal directives
	        name = name.replace(dirRE, '');
	        // parse arg
	        var argMatch = name.match(argRE);
	        var arg = argMatch && argMatch[1];
	        if (arg) {
	          name = name.slice(0, -(arg.length + 1));
	        }
	        addDirective(el, name, rawName, value, arg, modifiers);
	        if (process.env.NODE_ENV !== 'production' && name === 'model') {
	          checkForAliasModel(el, value);
	        }
	      }
	    } else {
	      // literal attribute
	      if (process.env.NODE_ENV !== 'production') {
	        var expression = parseText(value, delimiters);
	        if (expression) {
	          warn$2(name + "=\"" + value + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div id="{{ val }}">, use <div :id="val">.');
	        }
	      }
	      addAttr(el, name, JSON.stringify(value));
	    }
	  }
	}

	function checkInFor(el) {
	  var parent = el;
	  while (parent) {
	    if (parent.for !== undefined) {
	      return true;
	    }
	    parent = parent.parent;
	  }
	  return false;
	}

	function parseModifiers(name) {
	  var match = name.match(modifierRE);
	  if (match) {
	    var ret = {};
	    match.forEach(function (m) {
	      ret[m.slice(1)] = true;
	    });
	    return ret;
	  }
	}

	function makeAttrsMap(attrs) {
	  var map = {};
	  for (var i = 0, l = attrs.length; i < l; i++) {
	    if (process.env.NODE_ENV !== 'production' && map[attrs[i].name] && !isIE && !isEdge) {
	      warn$2('duplicate attribute: ' + attrs[i].name);
	    }
	    map[attrs[i].name] = attrs[i].value;
	  }
	  return map;
	}

	// for script (e.g. type="x/template") or style, do not decode content
	function isTextTag(el) {
	  return el.tag === 'script' || el.tag === 'style';
	}

	function isForbiddenTag(el) {
	  return el.tag === 'style' || el.tag === 'script' && (!el.attrsMap.type || el.attrsMap.type === 'text/javascript');
	}

	var ieNSBug = /^xmlns:NS\d+/;
	var ieNSPrefix = /^NS\d+:/;

	/* istanbul ignore next */
	function guardIESVGBug(attrs) {
	  var res = [];
	  for (var i = 0; i < attrs.length; i++) {
	    var attr = attrs[i];
	    if (!ieNSBug.test(attr.name)) {
	      attr.name = attr.name.replace(ieNSPrefix, '');
	      res.push(attr);
	    }
	  }
	  return res;
	}

	function checkForAliasModel(el, value) {
	  var _el = el;
	  while (_el) {
	    if (_el.for && _el.alias === value) {
	      warn$2("<" + el.tag + " v-model=\"" + value + "\">: " + "You are binding v-model directly to a v-for iteration alias. " + "This will not be able to modify the v-for source array because " + "writing to the alias is like modifying a function local variable. " + "Consider using an array of objects and use v-model on an object property instead.");
	    }
	    _el = _el.parent;
	  }
	}

	/*  */

	var isStaticKey;
	var isPlatformReservedTag;

	var genStaticKeysCached = cached(genStaticKeys$1);

	/**
	 * Goal of the optimizer: walk the generated template AST tree
	 * and detect sub-trees that are purely static, i.e. parts of
	 * the DOM that never needs to change.
	 *
	 * Once we detect these sub-trees, we can:
	 *
	 * 1. Hoist them into constants, so that we no longer need to
	 *    create fresh nodes for them on each re-render;
	 * 2. Completely skip them in the patching process.
	 */
	function optimize(root, options) {
	  if (!root) {
	    return;
	  }
	  isStaticKey = genStaticKeysCached(options.staticKeys || '');
	  isPlatformReservedTag = options.isReservedTag || no;
	  // first pass: mark all non-static nodes.
	  markStatic$1(root);
	  // second pass: mark static roots.
	  markStaticRoots(root, false);
	}

	function genStaticKeys$1(keys) {
	  return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs' + (keys ? ',' + keys : ''));
	}

	function markStatic$1(node) {
	  node.static = isStatic(node);
	  if (node.type === 1) {
	    // do not make component slot content static. this avoids
	    // 1. components not able to mutate slot nodes
	    // 2. static slot content fails for hot-reloading
	    if (!isPlatformReservedTag(node.tag) && node.tag !== 'slot' && node.attrsMap['inline-template'] == null) {
	      return;
	    }
	    for (var i = 0, l = node.children.length; i < l; i++) {
	      var child = node.children[i];
	      markStatic$1(child);
	      if (!child.static) {
	        node.static = false;
	      }
	    }
	  }
	}

	function markStaticRoots(node, isInFor) {
	  if (node.type === 1) {
	    if (node.static || node.once) {
	      node.staticInFor = isInFor;
	    }
	    // For a node to qualify as a static root, it should have children that
	    // are not just static text. Otherwise the cost of hoisting out will
	    // outweigh the benefits and it's better off to just always render it fresh.
	    if (node.static && node.children.length && !(node.children.length === 1 && node.children[0].type === 3)) {
	      node.staticRoot = true;
	      return;
	    } else {
	      node.staticRoot = false;
	    }
	    if (node.children) {
	      for (var i = 0, l = node.children.length; i < l; i++) {
	        markStaticRoots(node.children[i], isInFor || !!node.for);
	      }
	    }
	    if (node.ifConditions) {
	      walkThroughConditionsBlocks(node.ifConditions, isInFor);
	    }
	  }
	}

	function walkThroughConditionsBlocks(conditionBlocks, isInFor) {
	  for (var i = 1, len = conditionBlocks.length; i < len; i++) {
	    markStaticRoots(conditionBlocks[i].block, isInFor);
	  }
	}

	function isStatic(node) {
	  if (node.type === 2) {
	    // expression
	    return false;
	  }
	  if (node.type === 3) {
	    // text
	    return true;
	  }
	  return !!(node.pre || !node.hasBindings && // no dynamic bindings
	  !node.if && !node.for && // not v-if or v-for or v-else
	  !isBuiltInTag(node.tag) && // not a built-in
	  isPlatformReservedTag(node.tag) && // not a component
	  !isDirectChildOfTemplateFor(node) && Object.keys(node).every(isStaticKey));
	}

	function isDirectChildOfTemplateFor(node) {
	  while (node.parent) {
	    node = node.parent;
	    if (node.tag !== 'template') {
	      return false;
	    }
	    if (node.for) {
	      return true;
	    }
	  }
	  return false;
	}

	/*  */

	var fnExpRE = /^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
	var simplePathRE = /^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;

	// keyCode aliases
	var keyCodes = {
	  esc: 27,
	  tab: 9,
	  enter: 13,
	  space: 32,
	  up: 38,
	  left: 37,
	  right: 39,
	  down: 40,
	  'delete': [8, 46]
	};

	// #4868: modifiers that prevent the execution of the listener
	// need to explicitly return null so that we can determine whether to remove
	// the listener for .once
	var genGuard = function genGuard(condition) {
	  return "if(" + condition + ")return null;";
	};

	var modifierCode = {
	  stop: '$event.stopPropagation();',
	  prevent: '$event.preventDefault();',
	  self: genGuard("$event.target !== $event.currentTarget"),
	  ctrl: genGuard("!$event.ctrlKey"),
	  shift: genGuard("!$event.shiftKey"),
	  alt: genGuard("!$event.altKey"),
	  meta: genGuard("!$event.metaKey"),
	  left: genGuard("'button' in $event && $event.button !== 0"),
	  middle: genGuard("'button' in $event && $event.button !== 1"),
	  right: genGuard("'button' in $event && $event.button !== 2")
	};

	function genHandlers(events, isNative, warn) {
	  var res = isNative ? 'nativeOn:{' : 'on:{';
	  for (var name in events) {
	    var handler = events[name];
	    // #5330: warn click.right, since right clicks do not actually fire click events.
	    if (process.env.NODE_ENV !== 'production' && name === 'click' && handler && handler.modifiers && handler.modifiers.right) {
	      warn("Use \"contextmenu\" instead of \"click.right\" since right clicks " + "do not actually fire \"click\" events.");
	    }
	    res += "\"" + name + "\":" + genHandler(name, handler) + ",";
	  }
	  return res.slice(0, -1) + '}';
	}

	function genHandler(name, handler) {
	  if (!handler) {
	    return 'function(){}';
	  }

	  if (Array.isArray(handler)) {
	    return "[" + handler.map(function (handler) {
	      return genHandler(name, handler);
	    }).join(',') + "]";
	  }

	  var isMethodPath = simplePathRE.test(handler.value);
	  var isFunctionExpression = fnExpRE.test(handler.value);

	  if (!handler.modifiers) {
	    return isMethodPath || isFunctionExpression ? handler.value : "function($event){" + handler.value + "}"; // inline statement
	  } else {
	    var code = '';
	    var genModifierCode = '';
	    var keys = [];
	    for (var key in handler.modifiers) {
	      if (modifierCode[key]) {
	        genModifierCode += modifierCode[key];
	        // left/right
	        if (keyCodes[key]) {
	          keys.push(key);
	        }
	      } else {
	        keys.push(key);
	      }
	    }
	    if (keys.length) {
	      code += genKeyFilter(keys);
	    }
	    // Make sure modifiers like prevent and stop get executed after key filtering
	    if (genModifierCode) {
	      code += genModifierCode;
	    }
	    var handlerCode = isMethodPath ? handler.value + '($event)' : isFunctionExpression ? "(" + handler.value + ")($event)" : handler.value;
	    return "function($event){" + code + handlerCode + "}";
	  }
	}

	function genKeyFilter(keys) {
	  return "if(!('button' in $event)&&" + keys.map(genFilterCode).join('&&') + ")return null;";
	}

	function genFilterCode(key) {
	  var keyVal = parseInt(key, 10);
	  if (keyVal) {
	    return "$event.keyCode!==" + keyVal;
	  }
	  var alias = keyCodes[key];
	  return "_k($event.keyCode," + JSON.stringify(key) + (alias ? ',' + JSON.stringify(alias) : '') + ")";
	}

	/*  */

	function bind$1(el, dir) {
	  el.wrapData = function (code) {
	    return "_b(" + code + ",'" + el.tag + "'," + dir.value + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + ")";
	  };
	}

	/*  */

	var baseDirectives = {
	  bind: bind$1,
	  cloak: noop
	};

	/*  */

	// configurable state
	var warn$3;
	var transforms$1;
	var dataGenFns;
	var platformDirectives$1;
	var isPlatformReservedTag$1;
	var staticRenderFns;
	var onceCount;
	var currentOptions;

	function generate(ast, options) {
	  // save previous staticRenderFns so generate calls can be nested
	  var prevStaticRenderFns = staticRenderFns;
	  var currentStaticRenderFns = staticRenderFns = [];
	  var prevOnceCount = onceCount;
	  onceCount = 0;
	  currentOptions = options;
	  warn$3 = options.warn || baseWarn;
	  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');
	  dataGenFns = pluckModuleFunction(options.modules, 'genData');
	  platformDirectives$1 = options.directives || {};
	  isPlatformReservedTag$1 = options.isReservedTag || no;
	  var code = ast ? genElement(ast) : '_c("div")';
	  staticRenderFns = prevStaticRenderFns;
	  onceCount = prevOnceCount;
	  return {
	    render: "with(this){return " + code + "}",
	    staticRenderFns: currentStaticRenderFns
	  };
	}

	function genElement(el) {
	  if (el.staticRoot && !el.staticProcessed) {
	    return genStatic(el);
	  } else if (el.once && !el.onceProcessed) {
	    return genOnce(el);
	  } else if (el.for && !el.forProcessed) {
	    return genFor(el);
	  } else if (el.if && !el.ifProcessed) {
	    return genIf(el);
	  } else if (el.tag === 'template' && !el.slotTarget) {
	    return genChildren(el) || 'void 0';
	  } else if (el.tag === 'slot') {
	    return genSlot(el);
	  } else {
	    // component or element
	    var code;
	    if (el.component) {
	      code = genComponent(el.component, el);
	    } else {
	      var data = el.plain ? undefined : genData(el);

	      var children = el.inlineTemplate ? null : genChildren(el, true);
	      code = "_c('" + el.tag + "'" + (data ? "," + data : '') + (children ? "," + children : '') + ")";
	    }
	    // module transforms
	    for (var i = 0; i < transforms$1.length; i++) {
	      code = transforms$1[i](el, code);
	    }
	    return code;
	  }
	}

	// hoist static sub-trees out
	function genStatic(el) {
	  el.staticProcessed = true;
	  staticRenderFns.push("with(this){return " + genElement(el) + "}");
	  return "_m(" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")";
	}

	// v-once
	function genOnce(el) {
	  el.onceProcessed = true;
	  if (el.if && !el.ifProcessed) {
	    return genIf(el);
	  } else if (el.staticInFor) {
	    var key = '';
	    var parent = el.parent;
	    while (parent) {
	      if (parent.for) {
	        key = parent.key;
	        break;
	      }
	      parent = parent.parent;
	    }
	    if (!key) {
	      process.env.NODE_ENV !== 'production' && warn$3("v-once can only be used inside v-for that is keyed. ");
	      return genElement(el);
	    }
	    return "_o(" + genElement(el) + "," + onceCount++ + (key ? "," + key : "") + ")";
	  } else {
	    return genStatic(el);
	  }
	}

	function genIf(el) {
	  el.ifProcessed = true; // avoid recursion
	  return genIfConditions(el.ifConditions.slice());
	}

	function genIfConditions(conditions) {
	  if (!conditions.length) {
	    return '_e()';
	  }

	  var condition = conditions.shift();
	  if (condition.exp) {
	    return "(" + condition.exp + ")?" + genTernaryExp(condition.block) + ":" + genIfConditions(conditions);
	  } else {
	    return "" + genTernaryExp(condition.block);
	  }

	  // v-if with v-once should generate code like (a)?_m(0):_m(1)
	  function genTernaryExp(el) {
	    return el.once ? genOnce(el) : genElement(el);
	  }
	}

	function genFor(el) {
	  var exp = el.for;
	  var alias = el.alias;
	  var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
	  var iterator2 = el.iterator2 ? "," + el.iterator2 : '';

	  if (process.env.NODE_ENV !== 'production' && maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key) {
	    warn$3("<" + el.tag + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " + "v-for should have explicit keys. " + "See https://vuejs.org/guide/list.html#key for more info.", true /* tip */
	    );
	  }

	  el.forProcessed = true; // avoid recursion
	  return "_l((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + genElement(el) + '})';
	}

	function genData(el) {
	  var data = '{';

	  // directives first.
	  // directives may mutate the el's other properties before they are generated.
	  var dirs = genDirectives(el);
	  if (dirs) {
	    data += dirs + ',';
	  }

	  // key
	  if (el.key) {
	    data += "key:" + el.key + ",";
	  }
	  // ref
	  if (el.ref) {
	    data += "ref:" + el.ref + ",";
	  }
	  if (el.refInFor) {
	    data += "refInFor:true,";
	  }
	  // pre
	  if (el.pre) {
	    data += "pre:true,";
	  }
	  // record original tag name for components using "is" attribute
	  if (el.component) {
	    data += "tag:\"" + el.tag + "\",";
	  }
	  // module data generation functions
	  for (var i = 0; i < dataGenFns.length; i++) {
	    data += dataGenFns[i](el);
	  }
	  // attributes
	  if (el.attrs) {
	    data += "attrs:{" + genProps(el.attrs) + "},";
	  }
	  // DOM props
	  if (el.props) {
	    data += "domProps:{" + genProps(el.props) + "},";
	  }
	  // event handlers
	  if (el.events) {
	    data += genHandlers(el.events, false, warn$3) + ",";
	  }
	  if (el.nativeEvents) {
	    data += genHandlers(el.nativeEvents, true, warn$3) + ",";
	  }
	  // slot target
	  if (el.slotTarget) {
	    data += "slot:" + el.slotTarget + ",";
	  }
	  // scoped slots
	  if (el.scopedSlots) {
	    data += genScopedSlots(el.scopedSlots) + ",";
	  }
	  // component v-model
	  if (el.model) {
	    data += "model:{value:" + el.model.value + ",callback:" + el.model.callback + ",expression:" + el.model.expression + "},";
	  }
	  // inline-template
	  if (el.inlineTemplate) {
	    var inlineTemplate = genInlineTemplate(el);
	    if (inlineTemplate) {
	      data += inlineTemplate + ",";
	    }
	  }
	  data = data.replace(/,$/, '') + '}';
	  // v-bind data wrap
	  if (el.wrapData) {
	    data = el.wrapData(data);
	  }
	  return data;
	}

	function genDirectives(el) {
	  var dirs = el.directives;
	  if (!dirs) {
	    return;
	  }
	  var res = 'directives:[';
	  var hasRuntime = false;
	  var i, l, dir, needRuntime;
	  for (i = 0, l = dirs.length; i < l; i++) {
	    dir = dirs[i];
	    needRuntime = true;
	    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];
	    if (gen) {
	      // compile-time directive that manipulates AST.
	      // returns true if it also needs a runtime counterpart.
	      needRuntime = !!gen(el, dir, warn$3);
	    }
	    if (needRuntime) {
	      hasRuntime = true;
	      res += "{name:\"" + dir.name + "\",rawName:\"" + dir.rawName + "\"" + (dir.value ? ",value:(" + dir.value + "),expression:" + JSON.stringify(dir.value) : '') + (dir.arg ? ",arg:\"" + dir.arg + "\"" : '') + (dir.modifiers ? ",modifiers:" + JSON.stringify(dir.modifiers) : '') + "},";
	    }
	  }
	  if (hasRuntime) {
	    return res.slice(0, -1) + ']';
	  }
	}

	function genInlineTemplate(el) {
	  var ast = el.children[0];
	  if (process.env.NODE_ENV !== 'production' && (el.children.length > 1 || ast.type !== 1)) {
	    warn$3('Inline-template components must have exactly one child element.');
	  }
	  if (ast.type === 1) {
	    var inlineRenderFns = generate(ast, currentOptions);
	    return "inlineTemplate:{render:function(){" + inlineRenderFns.render + "},staticRenderFns:[" + inlineRenderFns.staticRenderFns.map(function (code) {
	      return "function(){" + code + "}";
	    }).join(',') + "]}";
	  }
	}

	function genScopedSlots(slots) {
	  return "scopedSlots:_u([" + Object.keys(slots).map(function (key) {
	    return genScopedSlot(key, slots[key]);
	  }).join(',') + "])";
	}

	function genScopedSlot(key, el) {
	  if (el.for && !el.forProcessed) {
	    return genForScopedSlot(key, el);
	  }
	  return "{key:" + key + ",fn:function(" + String(el.attrsMap.scope) + "){" + "return " + (el.tag === 'template' ? genChildren(el) || 'void 0' : genElement(el)) + "}}";
	}

	function genForScopedSlot(key, el) {
	  var exp = el.for;
	  var alias = el.alias;
	  var iterator1 = el.iterator1 ? "," + el.iterator1 : '';
	  var iterator2 = el.iterator2 ? "," + el.iterator2 : '';
	  el.forProcessed = true; // avoid recursion
	  return "_l((" + exp + ")," + "function(" + alias + iterator1 + iterator2 + "){" + "return " + genScopedSlot(key, el) + '})';
	}

	function genChildren(el, checkSkip) {
	  var children = el.children;
	  if (children.length) {
	    var el$1 = children[0];
	    // optimize single v-for
	    if (children.length === 1 && el$1.for && el$1.tag !== 'template' && el$1.tag !== 'slot') {
	      return genElement(el$1);
	    }
	    var normalizationType = checkSkip ? getNormalizationType(children) : 0;
	    return "[" + children.map(genNode).join(',') + "]" + (normalizationType ? "," + normalizationType : '');
	  }
	}

	// determine the normalization needed for the children array.
	// 0: no normalization needed
	// 1: simple normalization needed (possible 1-level deep nested array)
	// 2: full normalization needed
	function getNormalizationType(children) {
	  var res = 0;
	  for (var i = 0; i < children.length; i++) {
	    var el = children[i];
	    if (el.type !== 1) {
	      continue;
	    }
	    if (needsNormalization(el) || el.ifConditions && el.ifConditions.some(function (c) {
	      return needsNormalization(c.block);
	    })) {
	      res = 2;
	      break;
	    }
	    if (maybeComponent(el) || el.ifConditions && el.ifConditions.some(function (c) {
	      return maybeComponent(c.block);
	    })) {
	      res = 1;
	    }
	  }
	  return res;
	}

	function needsNormalization(el) {
	  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot';
	}

	function maybeComponent(el) {
	  return !isPlatformReservedTag$1(el.tag);
	}

	function genNode(node) {
	  if (node.type === 1) {
	    return genElement(node);
	  } else {
	    return genText(node);
	  }
	}

	function genText(text) {
	  return "_v(" + (text.type === 2 ? text.expression // no need for () because already wrapped in _s()
	  : transformSpecialNewlines(JSON.stringify(text.text))) + ")";
	}

	function genSlot(el) {
	  var slotName = el.slotName || '"default"';
	  var children = genChildren(el);
	  var res = "_t(" + slotName + (children ? "," + children : '');
	  var attrs = el.attrs && "{" + el.attrs.map(function (a) {
	    return camelize(a.name) + ":" + a.value;
	  }).join(',') + "}";
	  var bind$$1 = el.attrsMap['v-bind'];
	  if ((attrs || bind$$1) && !children) {
	    res += ",null";
	  }
	  if (attrs) {
	    res += "," + attrs;
	  }
	  if (bind$$1) {
	    res += (attrs ? '' : ',null') + "," + bind$$1;
	  }
	  return res + ')';
	}

	// componentName is el.component, take it as argument to shun flow's pessimistic refinement
	function genComponent(componentName, el) {
	  var children = el.inlineTemplate ? null : genChildren(el, true);
	  return "_c(" + componentName + "," + genData(el) + (children ? "," + children : '') + ")";
	}

	function genProps(props) {
	  var res = '';
	  for (var i = 0; i < props.length; i++) {
	    var prop = props[i];
	    res += "\"" + prop.name + "\":" + transformSpecialNewlines(prop.value) + ",";
	  }
	  return res.slice(0, -1);
	}

	// #3895, #4268
	function transformSpecialNewlines(text) {
	  return text.replace(/\u2028/g, '\\u2028').replace(/\u2029/g, '\\u2029');
	}

	/*  */

	// these keywords should not appear inside expressions, but operators like
	// typeof, instanceof and in are allowed
	var prohibitedKeywordRE = new RegExp('\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b') + '\\b');

	// these unary operators should not be used as property/method names
	var unaryOperatorsRE = new RegExp('\\b' + 'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

	// check valid identifier for v-for
	var identRE = /[A-Za-z_$][\w$]*/;

	// strip strings in expressions
	var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

	// detect problematic expressions in a template
	function detectErrors(ast) {
	  var errors = [];
	  if (ast) {
	    checkNode(ast, errors);
	  }
	  return errors;
	}

	function checkNode(node, errors) {
	  if (node.type === 1) {
	    for (var name in node.attrsMap) {
	      if (dirRE.test(name)) {
	        var value = node.attrsMap[name];
	        if (value) {
	          if (name === 'v-for') {
	            checkFor(node, "v-for=\"" + value + "\"", errors);
	          } else if (onRE.test(name)) {
	            checkEvent(value, name + "=\"" + value + "\"", errors);
	          } else {
	            checkExpression(value, name + "=\"" + value + "\"", errors);
	          }
	        }
	      }
	    }
	    if (node.children) {
	      for (var i = 0; i < node.children.length; i++) {
	        checkNode(node.children[i], errors);
	      }
	    }
	  } else if (node.type === 2) {
	    checkExpression(node.expression, node.text, errors);
	  }
	}

	function checkEvent(exp, text, errors) {
	  var stipped = exp.replace(stripStringRE, '');
	  var keywordMatch = stipped.match(unaryOperatorsRE);
	  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
	    errors.push("avoid using JavaScript unary operator as property name: " + "\"" + keywordMatch[0] + "\" in expression " + text.trim());
	  }
	  checkExpression(exp, text, errors);
	}

	function checkFor(node, text, errors) {
	  checkExpression(node.for || '', text, errors);
	  checkIdentifier(node.alias, 'v-for alias', text, errors);
	  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
	  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
	}

	function checkIdentifier(ident, type, text, errors) {
	  if (typeof ident === 'string' && !identRE.test(ident)) {
	    errors.push("invalid " + type + " \"" + ident + "\" in expression: " + text.trim());
	  }
	}

	function checkExpression(exp, text, errors) {
	  try {
	    new Function("return " + exp);
	  } catch (e) {
	    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
	    if (keywordMatch) {
	      errors.push("avoid using JavaScript keyword as property name: " + "\"" + keywordMatch[0] + "\" in expression " + text.trim());
	    } else {
	      errors.push("invalid expression: " + text.trim());
	    }
	  }
	}

	/*  */

	function baseCompile(template, options) {
	  var ast = parse(template.trim(), options);
	  optimize(ast, options);
	  var code = generate(ast, options);
	  return {
	    ast: ast,
	    render: code.render,
	    staticRenderFns: code.staticRenderFns
	  };
	}

	function makeFunction(code, errors) {
	  try {
	    return new Function(code);
	  } catch (err) {
	    errors.push({ err: err, code: code });
	    return noop;
	  }
	}

	function createCompiler(baseOptions) {
	  var functionCompileCache = Object.create(null);

	  function compile(template, options) {
	    var finalOptions = Object.create(baseOptions);
	    var errors = [];
	    var tips = [];
	    finalOptions.warn = function (msg, tip$$1) {
	      (tip$$1 ? tips : errors).push(msg);
	    };

	    if (options) {
	      // merge custom modules
	      if (options.modules) {
	        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);
	      }
	      // merge custom directives
	      if (options.directives) {
	        finalOptions.directives = extend(Object.create(baseOptions.directives), options.directives);
	      }
	      // copy other options
	      for (var key in options) {
	        if (key !== 'modules' && key !== 'directives') {
	          finalOptions[key] = options[key];
	        }
	      }
	    }

	    var compiled = baseCompile(template, finalOptions);
	    if (process.env.NODE_ENV !== 'production') {
	      errors.push.apply(errors, detectErrors(compiled.ast));
	    }
	    compiled.errors = errors;
	    compiled.tips = tips;
	    return compiled;
	  }

	  function compileToFunctions(template, options, vm) {
	    options = options || {};

	    /* istanbul ignore if */
	    if (process.env.NODE_ENV !== 'production') {
	      // detect possible CSP restriction
	      try {
	        new Function('return 1');
	      } catch (e) {
	        if (e.toString().match(/unsafe-eval|CSP/)) {
	          warn('It seems you are using the standalone build of Vue.js in an ' + 'environment with Content Security Policy that prohibits unsafe-eval. ' + 'The template compiler cannot work in this environment. Consider ' + 'relaxing the policy to allow unsafe-eval or pre-compiling your ' + 'templates into render functions.');
	        }
	      }
	    }

	    // check cache
	    var key = options.delimiters ? String(options.delimiters) + template : template;
	    if (functionCompileCache[key]) {
	      return functionCompileCache[key];
	    }

	    // compile
	    var compiled = compile(template, options);

	    // check compilation errors/tips
	    if (process.env.NODE_ENV !== 'production') {
	      if (compiled.errors && compiled.errors.length) {
	        warn("Error compiling template:\n\n" + template + "\n\n" + compiled.errors.map(function (e) {
	          return "- " + e;
	        }).join('\n') + '\n', vm);
	      }
	      if (compiled.tips && compiled.tips.length) {
	        compiled.tips.forEach(function (msg) {
	          return tip(msg, vm);
	        });
	      }
	    }

	    // turn code into functions
	    var res = {};
	    var fnGenErrors = [];
	    res.render = makeFunction(compiled.render, fnGenErrors);
	    var l = compiled.staticRenderFns.length;
	    res.staticRenderFns = new Array(l);
	    for (var i = 0; i < l; i++) {
	      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);
	    }

	    // check function generation errors.
	    // this should only happen if there is a bug in the compiler itself.
	    // mostly for codegen development use
	    /* istanbul ignore if */
	    if (process.env.NODE_ENV !== 'production') {
	      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
	        warn("Failed to generate render function:\n\n" + fnGenErrors.map(function (ref) {
	          var err = ref.err;
	          var code = ref.code;

	          return err.toString() + " in\n\n" + code + "\n";
	        }).join('\n'), vm);
	      }
	    }

	    return functionCompileCache[key] = res;
	  }

	  return {
	    compile: compile,
	    compileToFunctions: compileToFunctions
	  };
	}

	/*  */

	function transformNode(el, options) {
	  var warn = options.warn || baseWarn;
	  var staticClass = getAndRemoveAttr(el, 'class');
	  if (process.env.NODE_ENV !== 'production' && staticClass) {
	    var expression = parseText(staticClass, options.delimiters);
	    if (expression) {
	      warn("class=\"" + staticClass + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class="{{ val }}">, use <div :class="val">.');
	    }
	  }
	  if (staticClass) {
	    el.staticClass = JSON.stringify(staticClass);
	  }
	  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
	  if (classBinding) {
	    el.classBinding = classBinding;
	  }
	}

	function genData$1(el) {
	  var data = '';
	  if (el.staticClass) {
	    data += "staticClass:" + el.staticClass + ",";
	  }
	  if (el.classBinding) {
	    data += "class:" + el.classBinding + ",";
	  }
	  return data;
	}

	var klass$1 = {
	  staticKeys: ['staticClass'],
	  transformNode: transformNode,
	  genData: genData$1
	};

	/*  */

	function transformNode$1(el, options) {
	  var warn = options.warn || baseWarn;
	  var staticStyle = getAndRemoveAttr(el, 'style');
	  if (staticStyle) {
	    /* istanbul ignore if */
	    if (process.env.NODE_ENV !== 'production') {
	      var expression = parseText(staticStyle, options.delimiters);
	      if (expression) {
	        warn("style=\"" + staticStyle + "\": " + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style="{{ val }}">, use <div :style="val">.');
	      }
	    }
	    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
	  }

	  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
	  if (styleBinding) {
	    el.styleBinding = styleBinding;
	  }
	}

	function genData$2(el) {
	  var data = '';
	  if (el.staticStyle) {
	    data += "staticStyle:" + el.staticStyle + ",";
	  }
	  if (el.styleBinding) {
	    data += "style:(" + el.styleBinding + "),";
	  }
	  return data;
	}

	var style$1 = {
	  staticKeys: ['staticStyle'],
	  transformNode: transformNode$1,
	  genData: genData$2
	};

	var modules$1 = [klass$1, style$1];

	/*  */

	function text(el, dir) {
	  if (dir.value) {
	    addProp(el, 'textContent', "_s(" + dir.value + ")");
	  }
	}

	/*  */

	function html(el, dir) {
	  if (dir.value) {
	    addProp(el, 'innerHTML', "_s(" + dir.value + ")");
	  }
	}

	var directives$1 = {
	  model: model,
	  text: text,
	  html: html
	};

	/*  */

	var baseOptions = {
	  expectHTML: true,
	  modules: modules$1,
	  directives: directives$1,
	  isPreTag: isPreTag,
	  isUnaryTag: isUnaryTag,
	  mustUseProp: mustUseProp,
	  canBeLeftOpenTag: canBeLeftOpenTag,
	  isReservedTag: isReservedTag,
	  getTagNamespace: getTagNamespace,
	  staticKeys: genStaticKeys(modules$1)
	};

	var ref$1 = createCompiler(baseOptions);
	var compileToFunctions = ref$1.compileToFunctions;

	/*  */

	var idToTemplate = cached(function (id) {
	  var el = query(id);
	  return el && el.innerHTML;
	});

	var mount = Vue$3.prototype.$mount;
	Vue$3.prototype.$mount = function (el, hydrating) {
	  el = el && query(el);

	  /* istanbul ignore if */
	  if (el === document.body || el === document.documentElement) {
	    process.env.NODE_ENV !== 'production' && warn("Do not mount Vue to <html> or <body> - mount to normal elements instead.");
	    return this;
	  }

	  var options = this.$options;
	  // resolve template/el and convert to render function
	  if (!options.render) {
	    var template = options.template;
	    if (template) {
	      if (typeof template === 'string') {
	        if (template.charAt(0) === '#') {
	          template = idToTemplate(template);
	          /* istanbul ignore if */
	          if (process.env.NODE_ENV !== 'production' && !template) {
	            warn("Template element not found or is empty: " + options.template, this);
	          }
	        }
	      } else if (template.nodeType) {
	        template = template.innerHTML;
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          warn('invalid template option:' + template, this);
	        }
	        return this;
	      }
	    } else if (el) {
	      template = getOuterHTML(el);
	    }
	    if (template) {
	      /* istanbul ignore if */
	      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
	        mark('compile');
	      }

	      var ref = compileToFunctions(template, {
	        shouldDecodeNewlines: shouldDecodeNewlines,
	        delimiters: options.delimiters
	      }, this);
	      var render = ref.render;
	      var staticRenderFns = ref.staticRenderFns;
	      options.render = render;
	      options.staticRenderFns = staticRenderFns;

	      /* istanbul ignore if */
	      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
	        mark('compile end');
	        measure(this._name + " compile", 'compile', 'compile end');
	      }
	    }
	  }
	  return mount.call(this, el, hydrating);
	};

	/**
	 * Get outerHTML of elements, taking care
	 * of SVG elements in IE as well.
	 */
	function getOuterHTML(el) {
	  if (el.outerHTML) {
	    return el.outerHTML;
	  } else {
	    var container = document.createElement('div');
	    container.appendChild(el.cloneNode(true));
	    return container.innerHTML;
	  }
	}

	Vue$3.compile = compileToFunctions;

	module.exports = Vue$3;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2), (function() { return this; }())))

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout() {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	})();
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while (len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) {
	    return [];
	};

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function () {
	    return 0;
	};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(4)
	__vue_script__ = __webpack_require__(8)
	__vue_template__ = __webpack_require__(180)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\shop_diy_index.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(5);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-5643c526&file=shop_diy_index.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./shop_diy_index.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-5643c526&file=shop_diy_index.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./shop_diy_index.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\n    .app-design {\n        position: relative;\n        width: 100%;\n        background-color: #fff;\n        overflow: hidden;\n        padding-top: 30px;\n        padding-bottom: 70px;\n        min-height: 670px;\n    }\n    .app-preview {\n        position: relative;\n        float: left;\n        width: 375px;\n        box-sizing: border-box;\n        background: #fff;\n        margin-left: 60px;\n    }\n    .app-sidebar {\n        position: relative;\n        float: left;\n        width: 580px;\n        margin-left: 10px;\n        box-sizing: border-box;\n        background: #fff;\n    }\n    .show-submit-loading {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        z-index: 1000;\n    }\n", ""]);

	// exports


/***/ }),
/* 6 */
/***/ (function(module, exports) {

	"use strict";

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function () {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function (modules, mediaQuery) {
			if (typeof modules === "string") modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for (var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if (typeof id === "number") alreadyImportedModules[id] = true;
			}
			for (i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if (mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if (mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if (media) {
			styleElement.setAttribute("media", media);
		}

		if (sourceMap) {
			// https://developer.chrome.com/devtools/docs/javascript-debugging
			// this makes source maps inside style tags work properly in Chrome
			css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */';
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _network = __webpack_require__(9);

	var _network2 = _interopRequireDefault(_network);

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _index_part_drag = __webpack_require__(12);

	var _index_part_drag2 = _interopRequireDefault(_index_part_drag);

	var _sidebar_part = __webpack_require__(104);

	var _sidebar_part2 = _interopRequireDefault(_sidebar_part);

	var _save_bar = __webpack_require__(137);

	var _save_bar2 = _interopRequireDefault(_save_bar);

	var _choose_box = __webpack_require__(145);

	var _choose_box2 = _interopRequireDefault(_choose_box);

	var _loading = __webpack_require__(120);

	var _loading2 = _interopRequireDefault(_loading);

	var _top_prompt = __webpack_require__(165);

	var _top_prompt2 = _interopRequireDefault(_top_prompt);

	var _notice_prompt = __webpack_require__(170);

	var _notice_prompt2 = _interopRequireDefault(_notice_prompt);

	var _generateUUID = __webpack_require__(102);

	var _generateUUID2 = _interopRequireDefault(_generateUUID);

	var _set_index_name = __webpack_require__(175);

	var _set_index_name2 = _interopRequireDefault(_set_index_name);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//生成唯一id

	//    浮层选择数据搜索

	//    模块编辑部分
	exports.default = {
	    data: function data() {
	        return {
	            //版本 1-基础版;2-成长版;3-专业版
	            version_type: 1,
	            //模块标号数组
	            index_sort: [],
	            //模块数据数组
	            index_data: [],
	            //模块唯一标识id数组
	            index_data_id: [],
	            //增加模块的数据
	            add_module_part: [],
	            submit_data: {
	                index_sort: [],
	                index_data: []
	            },
	            //设置首页的版块是否显示
	            set_index_flag: false,
	            //首页名称
	            index_name: '',
	            //分享的信息
	            share_info: {},
	            //是否显示全局样式标识
	            is_show_loading: false,
	            //提交时显示loading的标识
	            is_show_submit_loading: false,
	            //样式显示数据
	            index_local_data: {
	                banner_part: {
	                    img_url: ''
	                },
	                category_part: {
	                    list: [{
	                        icon_url: "/images/admin/shopDiy/icon-1@2x.png",
	                        category_name: "分类一"
	                    }, {
	                        icon_url: "/images/admin/shopDiy/icon-2@2x.png",
	                        category_name: "分类二"
	                    }, {
	                        icon_url: "/images/admin/shopDiy/icon-3@2x.png",
	                        category_name: "分类三"
	                    }, {
	                        icon_url: "/images/admin/shopDiy/icon-4@2x.png",
	                        category_name: "分类四"
	                    }]
	                },
	                community_part: {
	                    part_title: "小社群",
	                    show_all: true,
	                    list: [{
	                        feeds_count: 'XX',
	                        member_count: 'XX',
	                        img_url: "",
	                        joinStatus: false,
	                        title: "此处显示小社群名称"
	                    }, {
	                        feeds_count: 'XX',
	                        member_count: 'XX',
	                        img_url: "",
	                        joinStatus: false,
	                        title: "此处显示小社群名称"
	                    }]
	                },
	                member_part: {
	                    part_title: "频道",
	                    show_all: true,
	                    list: [{
	                        img_url_compressed: "/images/admin/shopDiy/icon-pic@2x.png",
	                        img_url: "/images/admin/shopDiy/icon-pic@2x.png",
	                        //标题
	                        name: "此处显示专栏/会员名称",
	                        //简介
	                        summary: "此处显示专栏/会员简介",
	                        //是否是会员
	                        is_member: 0,
	                        //是否更新完
	                        finished_state: 0,
	                        //资源个数（0时不显示）
	                        resource_count: 'X',
	                        //购买人数（0时不显示）
	                        purchase_count: "XX",
	                        //会员未购买图标
	                        member_icon_default: "http://wxresource-10011692.file.myqcloud.com/manual/icon_member_diamond_gray.png",
	                        //会员购买图标
	                        member_icon_highlight: "http://wxresource-10011692.file.myqcloud.com/manual/icon_member_diamond.png",
	                        //购买相关信息
	                        availableInfo: {
	                            //是否已购买
	                            available: false,
	                            //原价（元）
	                            raw_price: '',
	                            //最终购买价(元)显示价格，0时不显示
	                            price: '价格',
	                            //有效期
	                            period: "",
	                            //福利标签
	                            bonus_price_hint: ""
	                        }
	                    }, {
	                        img_url_compressed: "/images/admin/shopDiy/icon-pic@2x.png",
	                        //标题
	                        name: "此处显示专栏/会员名称",
	                        //简介
	                        summary: "此处显示专栏/会员简介",
	                        //是否是会员
	                        is_member: 0,
	                        //是否更新完
	                        finished_state: 0,
	                        //资源个数（0时不显示）
	                        resource_count: 'X',
	                        //购买人数（0时不显示）
	                        purchase_count: "XX",
	                        //会员未购买图标
	                        member_icon_default: "http://wxresource-10011692.file.myqcloud.com/manual/icon_member_diamond_gray.png",
	                        //会员购买图标
	                        member_icon_highlight: "http://wxresource-10011692.file.myqcloud.com/manual/icon_member_diamond.png",
	                        //购买相关信息
	                        availableInfo: {
	                            //是否已购买
	                            available: false,
	                            //原价（元）
	                            raw_price: '',
	                            //最终购买价(元)显示价格，0时不显示
	                            price: '价格',
	                            //有效期
	                            period: "",
	                            //福利标签
	                            bonus_price_hint: ""
	                        }
	                    }]
	                },
	                alive_part: {
	                    part_title: "直播",
	                    show_all: true,
	                    list: [{
	                        title: '此处显示直播名称',
	                        alive_img_url: "",
	                        //显示标签
	                        start_tag: "直播时间",
	                        //价格（元），为0则不显示
	                        piece_price: '价格',
	                        //是否已购买，true则不显示价格出来
	                        available: false
	                    }]
	                },
	                question_part: {
	                    part_title: "问答",
	                    list: [{
	                        img_url_compressed: "",
	                        title: "此处显示问答专区名称",
	                        desc: "此处显示问答区简介",
	                        total_num: "问题数量"
	                    }]
	                },
	                recommend_part: {
	                    part_title: "最新",
	                    show_all: false,
	                    list: [{
	                        //资源类型，1-图文，2-音频 3-视频 4-直播 5-活动（活动暂时不显示在首页）
	                        srcType: 1,
	                        //标题
	                        title: "此处显示内容名称",
	                        //略缩图
	                        img_url_compressed: "",
	                        //查看人数
	                        view_count: "查看数量",
	                        //评论人数
	                        comment_count: "评论数量"
	                    }, {
	                        //资源类型，1-图文，2-音频 3-视频 4-直播 5-活动（活动暂时不显示在首页）
	                        srcType: 2,
	                        //标题
	                        title: "此处显示内容名称",
	                        //略缩图
	                        img_url_compressed: "",
	                        //查看人数
	                        view_count: "查看数量",
	                        //评论人数
	                        comment_count: "评论数量"
	                    }]
	                },
	                activity_part: {
	                    part_title: "活动",
	                    show_all: true,
	                    list: [{
	                        img_url_compressed: "",
	                        activity_start_at: "此处显示活动时间",
	                        title: "此处显示活动名称"
	                    }]
	                }

	            }

	            //                index_sort:[1, 2, 3, 4, 5, 6, 7],
	            //                index_data:[
	            //                    {
	            //                        list:[
	            //                            {
	            //                                id:"1",
	            //                                title:"1",
	            //                                image_url:"",
	            //                                img_url_compressed:"",
	            //                                //跳转类型，0-不跳转， 1-图文，2-音频，3-视频，4-圈子贴子，5-url, 6-专栏
	            //                                skip_type:"",
	            //                                //跳转目的地,如果不是直接跳转的链接，就都是相应资源id
	            //                                skip_target:"",
	            //                                skip_title:""
	            //                            },
	            //                            {
	            //                                id:"2",
	            //                                title:"2",
	            //                                image_url:"",
	            //                                img_url_compressed:"",
	            //                                //跳转类型，0-不跳转， 1-图文，2-音频，3-视频，4-圈子贴子，5-url, 6-专栏
	            //                                skip_type:"",
	            //                                //跳转目的地,如果不是直接跳转的链接，就都是相应资源id
	            //                                skip_target:"",
	            //                                skip_title:""
	            //                            },
	            //                            {
	            //                                id:"3",
	            //                                title:"3",
	            //                                image_url:"",
	            //                                img_url_compressed:"",
	            //                                //跳转类型，0-不跳转， 1-图文，2-音频，3-视频，4-圈子贴子，5-url, 6-专栏
	            //                                skip_type:"",
	            //                                //跳转目的地,如果不是直接跳转的链接，就都是相应资源id
	            //                                skip_target:"",
	            //                                skip_title:""
	            //                            }
	            //                        ]
	            //                    },
	            //                    {
	            //                        list:[]
	            //                    },
	            //                    {
	            //                        part_title:"小社群",
	            //                        //0则使用默认配置
	            //                        status:1,
	            //                        list:[
	            //                            {
	            //                                id:"",
	            //                                img_url_compressed:"",
	            //                                title:""
	            //                            }
	            //                        ]
	            //                    },
	            //                    {
	            //                        part_title:"会员",
	            //                        //0则使用默认配置
	            //                        status:1,
	            //                        list:[
	            //                            {
	            //                                id:"1",
	            //                                img_url_compressed:"http://wechatapppro-1252524126.file.myqcloud.com/image/5f901770e1d8b9d71ca9003dd2a66b77.jpg",
	            //                                title:"频道一",
	            //                                is_member: 0
	            //                            },
	            //                            {
	            //                                id:"1",
	            //                                img_url_compressed:"http://wechatapppro-1252524126.file.myqcloud.com/image/5f901770e1d8b9d71ca9003dd2a66b77.jpg",
	            //                                title:"频道二",
	            //                                is_member: 1
	            //                            },
	            //                            {
	            //                                id:"1",
	            //                                img_url_compressed:"http://wechatapppro-1252524126.file.myqcloud.com/image/5f901770e1d8b9d71ca9003dd2a66b77.jpg",
	            //                                title:"频道三",
	            //                                is_member: 0
	            //                            }
	            //                        ]
	            //                    },
	            //                    {
	            //                        list:[]
	            //                    },
	            //                    {
	            //                        part_title:"直播",
	            //                        //0则使用默认配置
	            //                        status:1,
	            //                        list:[
	            //                            {
	            //                                id:"1",
	            //                                img_url_compressed:"http://wechatapppro-1252524126.file.myqcloud.com/image/5f901770e1d8b9d71ca9003dd2a66b77.jpg",
	            //                                title:"直播一"
	            //                            },
	            //                            {
	            //                                id:"2",
	            //                                img_url_compressed:"http://wechatapppro-1252524126.file.myqcloud.com/image/5f901770e1d8b9d71ca9003dd2a66b77.jpg",
	            //                                title:"直播二"
	            //                            },
	            //                            {
	            //                                id:"3",
	            //                                img_url_compressed:"http://wechatapppro-1252524126.file.myqcloud.com/image/5f901770e1d8b9d71ca9003dd2a66b77.jpg",
	            //                                title:"直播三"
	            //                            }
	            //                        ]
	            //                    },
	            //                    {
	            //                        list:[]
	            //                    },
	            //                    {
	            //                        list:[]
	            //                    }
	            //                ],
	        };
	    },
	    created: function created() {
	        var that = this;
	        that.is_show_loading = true;
	        that.set_index_flag = true;
	        _network2.default.request("load_diy_setting", {}, function (data) {
	            if (parseInt(data.code) === 0) {
	                var version_type = data.data.version_type;
	                var index_sort = data.data.index_sort;
	                var index_data = data.data.index_data;

	                //不是标准版且没有轮播图模块，手动加一个空模块
	                if (version_type !== 3 && index_sort.indexOf(1) < 0) {
	                    index_sort.unshift(1);
	                    var add_data = {
	                        list: []
	                    };
	                    index_data.unshift(add_data);
	                }

	                if (version_type !== 3) {
	                    _eventbus2.default.$emit('is_show_notice_prompt', {
	                        text: '升级标准版可以拥有自定义首页模块内容、首页名称自定义、分享内容自定义等丰富功能',
	                        url: '/accountview',
	                        button: '立即升级'
	                    });
	                }

	                that.index_sort = index_sort;
	                that.index_data = data.data.index_data;
	                that.add_module_part = data.data.add_module_part;
	                that.is_show_loading = false;
	                that.version_type = version_type;
	                that.index_name = data.data.index_title;
	                that.share_info = data.data.index_info;
	                //数据动态显示 --roam
	                //that.index_local_data.banner_part.img_url = that.index_data[0].list[0].img_url_compressed || that.index_data[0].list[0].img_url || '';
	                var question_info = data.data.index_data_default[3];
	                that.index_local_data.question_part = {
	                    part_title: question_info.part_title,
	                    list: [{
	                        img_url_compressed: question_info.queInfo.img_url_compressed,
	                        title: question_info.queInfo.title,
	                        desc: question_info.queInfo.desc,
	                        total_num: question_info.queInfo.queCount
	                    }]
	                };
	                var recommend_info = data.data.index_data_default[5];
	                that.index_local_data.recommend_part = {
	                    part_title: recommend_info.part_title,
	                    show_all: recommend_info.show_all,
	                    list: recommend_info.categoryInfo
	                };

	                var alive_info = data.data.index_data_default[4];
	                that.index_local_data.alive_part = {
	                    part_title: alive_info.part_title,
	                    show_all: true,
	                    list: alive_info.list
	                };

	                var active_info = data.data.index_data_default[6];
	                that.index_local_data.activity_part = {
	                    part_title: active_info.part_title,
	                    show_all: true,
	                    list: active_info.list
	                };

	                var community_info = data.data.index_data_default[1];
	                that.index_local_data.community_part = {
	                    part_title: community_info.part_title,
	                    list: community_info.list
	                };
	                var member_info = data.data.index_data_default[2];
	                that.index_local_data.member_part = {
	                    part_title: member_info.part_title,
	                    list: member_info.list
	                };
	                //数据动态显示final --roam
	                var index_data_id = [];
	                for (var i = 0, j = that.index_sort.length; i < j; i++) {
	                    index_data_id.push(_generateUUID2.default.init());
	                }
	                that.index_data_id = index_data_id;
	            } else {
	                that.is_show_loading = false;
	                _eventbus2.default.$emit('show_top_prompt_tip', '读取配置错误，请刷新页面重试');
	                //                    alert('读取配置错误，请刷新页面重试');
	            }
	        });

	        //监听提交数据的改变
	        _eventbus2.default.$on('watch_submit', this.watchSubmit);
	        //提交数据时显示loading
	        _eventbus2.default.$on('is_show_submit_loading', function (bool) {
	            that.is_show_submit_loading = bool;
	        });

	        _eventbus2.default.$on('watch_index_info', function (index_info) {
	            that.index_name = index_info.index_title;
	            that.share_info = {
	                wx_share_title: index_info.wx_share_title,
	                wx_share_content: index_info.wx_share_content,
	                wx_share_image: index_info.wx_share_image,
	                wx_share_image_compressed: index_info.wx_share_image_compressed
	            };
	        });
	        //设置首页是否显示
	        _eventbus2.default.$on('set_index_view', function (flag) {
	            that.set_index_flag = flag;
	        });
	    },
	    methods: {
	        //监听拖拽模块的数据变化，同步给保存提交模块
	        watchSubmit: function watchSubmit(dragArr) {
	            //还原成可提交的数据格式
	            var index_sort = [];
	            var index_data = [];
	            for (var i = 0, j = dragArr.length; i < j; i++) {
	                var tmp_sort = dragArr[i].index_sort;
	                var tmp_data = {};
	                if (tmp_sort == 1 || tmp_sort == 3 || tmp_sort == 4 || tmp_sort == 6 || tmp_sort == 8) {
	                    tmp_data = dragArr[i].index_data;
	                }

	                index_sort.push(tmp_sort);
	                index_data.push(tmp_data);
	            }

	            var result = {
	                index_sort: index_sort,
	                index_data: index_data
	            };
	            this.submit_data = result;
	        }
	    },
	    components: {
	        index_part_drag: _index_part_drag2.default,
	        sidebar_part: _sidebar_part2.default,
	        choose_box: _choose_box2.default,
	        save_bar: _save_bar2.default,
	        loading: _loading2.default,
	        top_prompt: _top_prompt2.default,
	        notice_prompt: _notice_prompt2.default,
	        set_index_name: _set_index_name2.default
	    }
	    // </script>
	    //
	    // <style>
	    //     .app-design {
	    //         position: relative;
	    //         width: 100%;
	    //         background-color: #fff;
	    //         overflow: hidden;
	    //         padding-top: 30px;
	    //         padding-bottom: 70px;
	    //         min-height: 670px;
	    //     }
	    //     .app-preview {
	    //         position: relative;
	    //         float: left;
	    //         width: 375px;
	    //         -webkit-box-sizing: border-box;
	    //         -moz-box-sizing: border-box;
	    //         box-sizing: border-box;
	    //         background: #fff;
	    //         margin-left: 60px;
	    //     }
	    //     .app-sidebar {
	    //         position: relative;
	    //         float: left;
	    //         width: 580px;
	    //         margin-left: 10px;
	    //         -webkit-box-sizing: border-box;
	    //         -moz-box-sizing: border-box;
	    //         box-sizing: border-box;
	    //         background: #fff;
	    //     }
	    //     .show-submit-loading {
	    //         position: fixed;
	    //         width: 100%;
	    //         height: 100%;
	    //         top: 0;
	    //         z-index: 1000;
	    //     }
	    // </style>

	};
	//设置首页名

	//    全局loading

	//    保存模块部分

	//    左边的拖拽预览及增加模块部分
	// <template>
	//     <div class="app-design">
	//         <!--左边的拖拽预览及增加模块部分-->
	//         <div class="app-preview" v-show="!is_show_loading">
	//             <index_part_drag
	//                     :index_sort="index_sort"
	//                     :index_data="index_data"
	//                     :add_module_part="add_module_part"
	//                     :index_local_data="index_local_data"
	//                     :index_data_id="index_data_id"
	//                     :version_type="version_type"
	//                     :index_name="index_name"
	//             ></index_part_drag>
	//         </div>
	//
	//         <!--模块编辑部分-->
	//         <div class="app-sidebar">
	//             <!--修改名称-->
	//             <set_index_name :current_name = "index_name" :share_info = "share_info" :set_index_flag="set_index_flag" :version_type="version_type"></set_index_name>
	//             <sidebar_part></sidebar_part>
	//         </div>
	//         <!--保存模块部分-->
	//         <save_bar :index_name="index_name" :share_info = "share_info" :submit_data="submit_data" v-show="!is_show_loading"></save_bar>
	//         <!--浮层选择数据搜索-->
	//         <choose_box></choose_box>
	//         <!--全局loading-->
	//         <loading v-show="is_show_loading"></loading>
	//         <!--提交时全局loading-->
	//         <div class="show-submit-loading" v-show="is_show_submit_loading">
	//             <loading></loading>
	//         </div>
	//         <!--全局提示框-->
	//         <top_prompt></top_prompt>
	//         <notice_prompt></notice_prompt>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _nZepto = __webpack_require__(10);

	var _nZepto2 = _interopRequireDefault(_nZepto);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//1、cmd路由，不要带斜杠，直接写业务路由
	//2、数据传进来一个js对象{}
	//3、回调参数（serverData(object)）

	exports.request = function (cmd, bizdata, callback) {

	    if (cmd[0] === "/") {
	        cmd = cmd.slice(1);
	    }

	    _nZepto2.default.ajax({
	        type: 'POST',
	        url: "/" + cmd,
	        dataType: "json",
	        data: bizdata,
	        success: function success(serverData) {
	            callback(serverData);
	        },
	        error: function error() {
	            callback(null);
	        }
	    });
	}; /**
	    * Created by vince on 17/2/17.
	    */

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/* Zepto v1.2.0 - zepto event ajax form ie - zeptojs.com/license */
	(function (global, factory) {
	    if (exports === 'object' && typeof module !== 'undefined') module.exports = factory(global);
	    if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	        return factory(global);
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else factory(global);
	})(typeof window !== "undefined" ? window : undefined, function (window) {
	    var Zepto = function () {
	        var undefined,
	            key,
	            $,
	            classList,
	            emptyArray = [],
	            _concat = emptyArray.concat,
	            _filter = emptyArray.filter,
	            _slice = emptyArray.slice,
	            document = window.document,
	            elementDisplay = {},
	            classCache = {},
	            cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1, 'opacity': 1, 'z-index': 1, 'zoom': 1 },
	            fragmentRE = /^\s*<(\w+|!)[^>]*>/,
	            singleTagRE = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
	            tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
	            rootNodeRE = /^(?:body|html)$/i,
	            capitalRE = /([A-Z])/g,


	        // special attributes that should be get/set via method calls
	        methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],
	            adjacencyOperators = ['after', 'prepend', 'before', 'append'],
	            table = document.createElement('table'),
	            tableRow = document.createElement('tr'),
	            containers = {
	            'tr': document.createElement('tbody'),
	            'tbody': table, 'thead': table, 'tfoot': table,
	            'td': tableRow, 'th': tableRow,
	            '*': document.createElement('div')
	        },
	            readyRE = /complete|loaded|interactive/,
	            simpleSelectorRE = /^[\w-]*$/,
	            class2type = {},
	            toString = class2type.toString,
	            zepto = {},
	            camelize,
	            uniq,
	            tempParent = document.createElement('div'),
	            propMap = {
	            'tabindex': 'tabIndex',
	            'readonly': 'readOnly',
	            'for': 'htmlFor',
	            'class': 'className',
	            'maxlength': 'maxLength',
	            'cellspacing': 'cellSpacing',
	            'cellpadding': 'cellPadding',
	            'rowspan': 'rowSpan',
	            'colspan': 'colSpan',
	            'usemap': 'useMap',
	            'frameborder': 'frameBorder',
	            'contenteditable': 'contentEditable'
	        },
	            isArray = Array.isArray || function (object) {
	            return object instanceof Array;
	        };

	        zepto.matches = function (element, selector) {
	            if (!selector || !element || element.nodeType !== 1) return false;
	            var matchesSelector = element.matches || element.webkitMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector || element.matchesSelector;
	            if (matchesSelector) return matchesSelector.call(element, selector);
	            // fall back to performing a selector:
	            var match,
	                parent = element.parentNode,
	                temp = !parent;
	            if (temp) (parent = tempParent).appendChild(element);
	            match = ~zepto.qsa(parent, selector).indexOf(element);
	            temp && tempParent.removeChild(element);
	            return match;
	        };

	        function type(obj) {
	            return obj == null ? String(obj) : class2type[toString.call(obj)] || "object";
	        }

	        function isFunction(value) {
	            return type(value) == "function";
	        }
	        function isWindow(obj) {
	            return obj != null && obj == obj.window;
	        }
	        function isDocument(obj) {
	            return obj != null && obj.nodeType == obj.DOCUMENT_NODE;
	        }
	        function isObject(obj) {
	            return type(obj) == "object";
	        }
	        function isPlainObject(obj) {
	            return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;
	        }

	        function likeArray(obj) {
	            var length = !!obj && 'length' in obj && obj.length,
	                type = $.type(obj);

	            return 'function' != type && !isWindow(obj) && ('array' == type || length === 0 || typeof length == 'number' && length > 0 && length - 1 in obj);
	        }

	        function compact(array) {
	            return _filter.call(array, function (item) {
	                return item != null;
	            });
	        }
	        function flatten(array) {
	            return array.length > 0 ? $.fn.concat.apply([], array) : array;
	        }
	        camelize = function camelize(str) {
	            return str.replace(/-+(.)?/g, function (match, chr) {
	                return chr ? chr.toUpperCase() : '';
	            });
	        };
	        function dasherize(str) {
	            return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();
	        }
	        uniq = function uniq(array) {
	            return _filter.call(array, function (item, idx) {
	                return array.indexOf(item) == idx;
	            });
	        };

	        function classRE(name) {
	            return name in classCache ? classCache[name] : classCache[name] = new RegExp('(^|\\s)' + name + '(\\s|$)');
	        }

	        function maybeAddPx(name, value) {
	            return typeof value == "number" && !cssNumber[dasherize(name)] ? value + "px" : value;
	        }

	        function defaultDisplay(nodeName) {
	            var element, display;
	            if (!elementDisplay[nodeName]) {
	                element = document.createElement(nodeName);
	                document.body.appendChild(element);
	                display = getComputedStyle(element, '').getPropertyValue("display");
	                element.parentNode.removeChild(element);
	                display == "none" && (display = "block");
	                elementDisplay[nodeName] = display;
	            }
	            return elementDisplay[nodeName];
	        }

	        function _children(element) {
	            return 'children' in element ? _slice.call(element.children) : $.map(element.childNodes, function (node) {
	                if (node.nodeType == 1) return node;
	            });
	        }

	        function Z(dom, selector) {
	            var i,
	                len = dom ? dom.length : 0;
	            for (i = 0; i < len; i++) {
	                this[i] = dom[i];
	            }this.length = len;
	            this.selector = selector || '';
	        }

	        // `$.zepto.fragment` takes a html string and an optional tag name
	        // to generate DOM nodes from the given html string.
	        // The generated DOM nodes are returned as an array.
	        // This function can be overridden in plugins for example to make
	        // it compatible with browsers that don't support the DOM fully.
	        zepto.fragment = function (html, name, properties) {
	            var dom, nodes, container;

	            // A special case optimization for a single tag
	            if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1));

	            if (!dom) {
	                if (html.replace) html = html.replace(tagExpanderRE, "<$1></$2>");
	                if (name === undefined) name = fragmentRE.test(html) && RegExp.$1;
	                if (!(name in containers)) name = '*';

	                container = containers[name];
	                container.innerHTML = '' + html;
	                dom = $.each(_slice.call(container.childNodes), function () {
	                    container.removeChild(this);
	                });
	            }

	            if (isPlainObject(properties)) {
	                nodes = $(dom);
	                $.each(properties, function (key, value) {
	                    if (methodAttributes.indexOf(key) > -1) nodes[key](value);else nodes.attr(key, value);
	                });
	            }

	            return dom;
	        };

	        // `$.zepto.Z` swaps out the prototype of the given `dom` array
	        // of nodes with `$.fn` and thus supplying all the Zepto functions
	        // to the array. This method can be overridden in plugins.
	        zepto.Z = function (dom, selector) {
	            return new Z(dom, selector);
	        };

	        // `$.zepto.isZ` should return `true` if the given object is a Zepto
	        // collection. This method can be overridden in plugins.
	        zepto.isZ = function (object) {
	            return object instanceof zepto.Z;
	        };

	        // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and
	        // takes a CSS selector and an optional context (and handles various
	        // special cases).
	        // This method can be overridden in plugins.
	        zepto.init = function (selector, context) {
	            var dom;
	            // If nothing given, return an empty Zepto collection
	            if (!selector) return zepto.Z();
	            // Optimize for string selectors
	            else if (typeof selector == 'string') {
	                    selector = selector.trim();
	                    // If it's a html fragment, create nodes from it
	                    // Note: In both Chrome 21 and Firefox 15, DOM error 12
	                    // is thrown if the fragment doesn't begin with <
	                    if (selector[0] == '<' && fragmentRE.test(selector)) dom = zepto.fragment(selector, RegExp.$1, context), selector = null;
	                    // If there's a context, create a collection on that context first, and select
	                    // nodes from there
	                    else if (context !== undefined) return $(context).find(selector);
	                        // If it's a CSS selector, use it to select nodes.
	                        else dom = zepto.qsa(document, selector);
	                }
	                // If a function is given, call it when the DOM is ready
	                else if (isFunction(selector)) return $(document).ready(selector);
	                    // If a Zepto collection is given, just return it
	                    else if (zepto.isZ(selector)) return selector;else {
	                            // normalize array if an array of nodes is given
	                            if (isArray(selector)) dom = compact(selector);
	                            // Wrap DOM nodes.
	                            else if (isObject(selector)) dom = [selector], selector = null;
	                                // If it's a html fragment, create nodes from it
	                                else if (fragmentRE.test(selector)) dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null;
	                                    // If there's a context, create a collection on that context first, and select
	                                    // nodes from there
	                                    else if (context !== undefined) return $(context).find(selector);
	                                        // And last but no least, if it's a CSS selector, use it to select nodes.
	                                        else dom = zepto.qsa(document, selector);
	                        }
	            // create a new Zepto collection from the nodes found
	            return zepto.Z(dom, selector);
	        };

	        // `$` will be the base `Zepto` object. When calling this
	        // function just call `$.zepto.init, which makes the implementation
	        // details of selecting nodes and creating Zepto collections
	        // patchable in plugins.
	        $ = function $(selector, context) {
	            return zepto.init(selector, context);
	        };

	        function extend(target, source, deep) {
	            for (key in source) {
	                if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {
	                    if (isPlainObject(source[key]) && !isPlainObject(target[key])) target[key] = {};
	                    if (isArray(source[key]) && !isArray(target[key])) target[key] = [];
	                    extend(target[key], source[key], deep);
	                } else if (source[key] !== undefined) target[key] = source[key];
	            }
	        }

	        // Copy all but undefined properties from one or more
	        // objects to the `target` object.
	        $.extend = function (target) {
	            var deep,
	                args = _slice.call(arguments, 1);
	            if (typeof target == 'boolean') {
	                deep = target;
	                target = args.shift();
	            }
	            args.forEach(function (arg) {
	                extend(target, arg, deep);
	            });
	            return target;
	        };

	        // `$.zepto.qsa` is Zepto's CSS selector implementation which
	        // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.
	        // This method can be overridden in plugins.
	        zepto.qsa = function (element, selector) {
	            var found,
	                maybeID = selector[0] == '#',
	                maybeClass = !maybeID && selector[0] == '.',
	                nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,
	                // Ensure that a 1 char tag name still gets checked
	            isSimple = simpleSelectorRE.test(nameOnly);
	            return element.getElementById && isSimple && maybeID ? // Safari DocumentFragment doesn't have getElementById
	            (found = element.getElementById(nameOnly)) ? [found] : [] : element.nodeType !== 1 && element.nodeType !== 9 && element.nodeType !== 11 ? [] : _slice.call(isSimple && !maybeID && element.getElementsByClassName ? // DocumentFragment doesn't have getElementsByClassName/TagName
	            maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class
	            element.getElementsByTagName(selector) : // Or a tag
	            element.querySelectorAll(selector) // Or it's not simple, and we need to query all
	            );
	        };

	        function filtered(nodes, selector) {
	            return selector == null ? $(nodes) : $(nodes).filter(selector);
	        }

	        $.contains = document.documentElement.contains ? function (parent, node) {
	            return parent !== node && parent.contains(node);
	        } : function (parent, node) {
	            while (node && (node = node.parentNode)) {
	                if (node === parent) return true;
	            }return false;
	        };

	        function funcArg(context, arg, idx, payload) {
	            return isFunction(arg) ? arg.call(context, idx, payload) : arg;
	        }

	        function setAttribute(node, name, value) {
	            value == null ? node.removeAttribute(name) : node.setAttribute(name, value);
	        }

	        // access className property while respecting SVGAnimatedString
	        function className(node, value) {
	            var klass = node.className || '',
	                svg = klass && klass.baseVal !== undefined;

	            if (value === undefined) return svg ? klass.baseVal : klass;
	            svg ? klass.baseVal = value : node.className = value;
	        }

	        // "true"  => true
	        // "false" => false
	        // "null"  => null
	        // "42"    => 42
	        // "42.5"  => 42.5
	        // "08"    => "08"
	        // JSON    => parse if valid
	        // String  => self
	        function deserializeValue(value) {
	            try {
	                return value ? value == "true" || (value == "false" ? false : value == "null" ? null : +value + "" == value ? +value : /^[\[\{]/.test(value) ? $.parseJSON(value) : value) : value;
	            } catch (e) {
	                return value;
	            }
	        }

	        $.type = type;
	        $.isFunction = isFunction;
	        $.isWindow = isWindow;
	        $.isArray = isArray;
	        $.isPlainObject = isPlainObject;

	        $.isEmptyObject = function (obj) {
	            var name;
	            for (name in obj) {
	                return false;
	            }return true;
	        };

	        $.isNumeric = function (val) {
	            var num = Number(val),
	                type = typeof val === 'undefined' ? 'undefined' : _typeof(val);
	            return val != null && type != 'boolean' && (type != 'string' || val.length) && !isNaN(num) && isFinite(num) || false;
	        };

	        $.inArray = function (elem, array, i) {
	            return emptyArray.indexOf.call(array, elem, i);
	        };

	        $.camelCase = camelize;
	        $.trim = function (str) {
	            return str == null ? "" : String.prototype.trim.call(str);
	        };

	        // plugin compatibility
	        $.uuid = 0;
	        $.support = {};
	        $.expr = {};
	        $.noop = function () {};

	        $.map = function (elements, callback) {
	            var value,
	                values = [],
	                i,
	                key;
	            if (likeArray(elements)) for (i = 0; i < elements.length; i++) {
	                value = callback(elements[i], i);
	                if (value != null) values.push(value);
	            } else for (key in elements) {
	                value = callback(elements[key], key);
	                if (value != null) values.push(value);
	            }
	            return flatten(values);
	        };

	        $.each = function (elements, callback) {
	            var i, key;
	            if (likeArray(elements)) {
	                for (i = 0; i < elements.length; i++) {
	                    if (callback.call(elements[i], i, elements[i]) === false) return elements;
	                }
	            } else {
	                for (key in elements) {
	                    if (callback.call(elements[key], key, elements[key]) === false) return elements;
	                }
	            }

	            return elements;
	        };

	        $.grep = function (elements, callback) {
	            return _filter.call(elements, callback);
	        };

	        if (window.JSON) $.parseJSON = JSON.parse;

	        // Populate the class2type map
	        $.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (i, name) {
	            class2type["[object " + name + "]"] = name.toLowerCase();
	        });

	        // Define methods that will be available on all
	        // Zepto collections
	        $.fn = {
	            constructor: zepto.Z,
	            length: 0,

	            // Because a collection acts like an array
	            // copy over these useful array functions.
	            forEach: emptyArray.forEach,
	            reduce: emptyArray.reduce,
	            push: emptyArray.push,
	            sort: emptyArray.sort,
	            splice: emptyArray.splice,
	            indexOf: emptyArray.indexOf,
	            concat: function concat() {
	                var i,
	                    value,
	                    args = [];
	                for (i = 0; i < arguments.length; i++) {
	                    value = arguments[i];
	                    args[i] = zepto.isZ(value) ? value.toArray() : value;
	                }
	                return _concat.apply(zepto.isZ(this) ? this.toArray() : this, args);
	            },

	            // `map` and `slice` in the jQuery API work differently
	            // from their array counterparts
	            map: function map(fn) {
	                return $($.map(this, function (el, i) {
	                    return fn.call(el, i, el);
	                }));
	            },
	            slice: function slice() {
	                return $(_slice.apply(this, arguments));
	            },

	            ready: function ready(callback) {
	                // need to check if document.body exists for IE as that browser reports
	                // document ready when it hasn't yet created the body element
	                if (readyRE.test(document.readyState) && document.body) callback($);else document.addEventListener('DOMContentLoaded', function () {
	                    callback($);
	                }, false);
	                return this;
	            },
	            get: function get(idx) {
	                return idx === undefined ? _slice.call(this) : this[idx >= 0 ? idx : idx + this.length];
	            },
	            toArray: function toArray() {
	                return this.get();
	            },
	            size: function size() {
	                return this.length;
	            },
	            remove: function remove() {
	                return this.each(function () {
	                    if (this.parentNode != null) this.parentNode.removeChild(this);
	                });
	            },
	            each: function each(callback) {
	                emptyArray.every.call(this, function (el, idx) {
	                    return callback.call(el, idx, el) !== false;
	                });
	                return this;
	            },
	            filter: function filter(selector) {
	                if (isFunction(selector)) return this.not(this.not(selector));
	                return $(_filter.call(this, function (element) {
	                    return zepto.matches(element, selector);
	                }));
	            },
	            add: function add(selector, context) {
	                return $(uniq(this.concat($(selector, context))));
	            },
	            is: function is(selector) {
	                return this.length > 0 && zepto.matches(this[0], selector);
	            },
	            not: function not(selector) {
	                var nodes = [];
	                if (isFunction(selector) && selector.call !== undefined) this.each(function (idx) {
	                    if (!selector.call(this, idx)) nodes.push(this);
	                });else {
	                    var excludes = typeof selector == 'string' ? this.filter(selector) : likeArray(selector) && isFunction(selector.item) ? _slice.call(selector) : $(selector);
	                    this.forEach(function (el) {
	                        if (excludes.indexOf(el) < 0) nodes.push(el);
	                    });
	                }
	                return $(nodes);
	            },
	            has: function has(selector) {
	                return this.filter(function () {
	                    return isObject(selector) ? $.contains(this, selector) : $(this).find(selector).size();
	                });
	            },
	            eq: function eq(idx) {
	                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);
	            },
	            first: function first() {
	                var el = this[0];
	                return el && !isObject(el) ? el : $(el);
	            },
	            last: function last() {
	                var el = this[this.length - 1];
	                return el && !isObject(el) ? el : $(el);
	            },
	            find: function find(selector) {
	                var result,
	                    $this = this;
	                if (!selector) result = $();else if ((typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) == 'object') result = $(selector).filter(function () {
	                    var node = this;
	                    return emptyArray.some.call($this, function (parent) {
	                        return $.contains(parent, node);
	                    });
	                });else if (this.length == 1) result = $(zepto.qsa(this[0], selector));else result = this.map(function () {
	                    return zepto.qsa(this, selector);
	                });
	                return result;
	            },
	            closest: function closest(selector, context) {
	                var nodes = [],
	                    collection = (typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) == 'object' && $(selector);
	                this.each(function (_, node) {
	                    while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector))) {
	                        node = node !== context && !isDocument(node) && node.parentNode;
	                    }if (node && nodes.indexOf(node) < 0) nodes.push(node);
	                });
	                return $(nodes);
	            },
	            parents: function parents(selector) {
	                var ancestors = [],
	                    nodes = this;
	                while (nodes.length > 0) {
	                    nodes = $.map(nodes, function (node) {
	                        if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {
	                            ancestors.push(node);
	                            return node;
	                        }
	                    });
	                }return filtered(ancestors, selector);
	            },
	            parent: function parent(selector) {
	                return filtered(uniq(this.pluck('parentNode')), selector);
	            },
	            children: function children(selector) {
	                return filtered(this.map(function () {
	                    return _children(this);
	                }), selector);
	            },
	            contents: function contents() {
	                return this.map(function () {
	                    return this.contentDocument || _slice.call(this.childNodes);
	                });
	            },
	            siblings: function siblings(selector) {
	                return filtered(this.map(function (i, el) {
	                    return _filter.call(_children(el.parentNode), function (child) {
	                        return child !== el;
	                    });
	                }), selector);
	            },
	            empty: function empty() {
	                return this.each(function () {
	                    this.innerHTML = '';
	                });
	            },
	            // `pluck` is borrowed from Prototype.js
	            pluck: function pluck(property) {
	                return $.map(this, function (el) {
	                    return el[property];
	                });
	            },
	            show: function show() {
	                return this.each(function () {
	                    this.style.display == "none" && (this.style.display = '');
	                    if (getComputedStyle(this, '').getPropertyValue("display") == "none") this.style.display = defaultDisplay(this.nodeName);
	                });
	            },
	            replaceWith: function replaceWith(newContent) {
	                return this.before(newContent).remove();
	            },
	            wrap: function wrap(structure) {
	                var func = isFunction(structure);
	                if (this[0] && !func) var dom = $(structure).get(0),
	                    clone = dom.parentNode || this.length > 1;

	                return this.each(function (index) {
	                    $(this).wrapAll(func ? structure.call(this, index) : clone ? dom.cloneNode(true) : dom);
	                });
	            },
	            wrapAll: function wrapAll(structure) {
	                if (this[0]) {
	                    $(this[0]).before(structure = $(structure));
	                    var children;
	                    // drill down to the inmost element
	                    while ((children = structure.children()).length) {
	                        structure = children.first();
	                    }$(structure).append(this);
	                }
	                return this;
	            },
	            wrapInner: function wrapInner(structure) {
	                var func = isFunction(structure);
	                return this.each(function (index) {
	                    var self = $(this),
	                        contents = self.contents(),
	                        dom = func ? structure.call(this, index) : structure;
	                    contents.length ? contents.wrapAll(dom) : self.append(dom);
	                });
	            },
	            unwrap: function unwrap() {
	                this.parent().each(function () {
	                    $(this).replaceWith($(this).children());
	                });
	                return this;
	            },
	            clone: function clone() {
	                return this.map(function () {
	                    return this.cloneNode(true);
	                });
	            },
	            hide: function hide() {
	                return this.css("display", "none");
	            },
	            toggle: function toggle(setting) {
	                return this.each(function () {
	                    var el = $(this);(setting === undefined ? el.css("display") == "none" : setting) ? el.show() : el.hide();
	                });
	            },
	            prev: function prev(selector) {
	                return $(this.pluck('previousElementSibling')).filter(selector || '*');
	            },
	            next: function next(selector) {
	                return $(this.pluck('nextElementSibling')).filter(selector || '*');
	            },
	            html: function html(_html) {
	                return 0 in arguments ? this.each(function (idx) {
	                    var originHtml = this.innerHTML;
	                    $(this).empty().append(funcArg(this, _html, idx, originHtml));
	                }) : 0 in this ? this[0].innerHTML : null;
	            },
	            text: function text(_text) {
	                return 0 in arguments ? this.each(function (idx) {
	                    var newText = funcArg(this, _text, idx, this.textContent);
	                    this.textContent = newText == null ? '' : '' + newText;
	                }) : 0 in this ? this.pluck('textContent').join("") : null;
	            },
	            attr: function attr(name, value) {
	                var result;
	                return typeof name == 'string' && !(1 in arguments) ? 0 in this && this[0].nodeType == 1 && (result = this[0].getAttribute(name)) != null ? result : undefined : this.each(function (idx) {
	                    if (this.nodeType !== 1) return;
	                    if (isObject(name)) for (key in name) {
	                        setAttribute(this, key, name[key]);
	                    } else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)));
	                });
	            },
	            removeAttr: function removeAttr(name) {
	                return this.each(function () {
	                    this.nodeType === 1 && name.split(' ').forEach(function (attribute) {
	                        setAttribute(this, attribute);
	                    }, this);
	                });
	            },
	            prop: function prop(name, value) {
	                name = propMap[name] || name;
	                return 1 in arguments ? this.each(function (idx) {
	                    this[name] = funcArg(this, value, idx, this[name]);
	                }) : this[0] && this[0][name];
	            },
	            removeProp: function removeProp(name) {
	                name = propMap[name] || name;
	                return this.each(function () {
	                    delete this[name];
	                });
	            },
	            data: function data(name, value) {
	                var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase();

	                var data = 1 in arguments ? this.attr(attrName, value) : this.attr(attrName);

	                return data !== null ? deserializeValue(data) : undefined;
	            },
	            val: function val(value) {
	                if (0 in arguments) {
	                    if (value == null) value = "";
	                    return this.each(function (idx) {
	                        this.value = funcArg(this, value, idx, this.value);
	                    });
	                } else {
	                    return this[0] && (this[0].multiple ? $(this[0]).find('option').filter(function () {
	                        return this.selected;
	                    }).pluck('value') : this[0].value);
	                }
	            },
	            offset: function offset(coordinates) {
	                if (coordinates) return this.each(function (index) {
	                    var $this = $(this),
	                        coords = funcArg(this, coordinates, index, $this.offset()),
	                        parentOffset = $this.offsetParent().offset(),
	                        props = {
	                        top: coords.top - parentOffset.top,
	                        left: coords.left - parentOffset.left
	                    };

	                    if ($this.css('position') == 'static') props['position'] = 'relative';
	                    $this.css(props);
	                });
	                if (!this.length) return null;
	                if (document.documentElement !== this[0] && !$.contains(document.documentElement, this[0])) return { top: 0, left: 0 };
	                var obj = this[0].getBoundingClientRect();
	                return {
	                    left: obj.left + window.pageXOffset,
	                    top: obj.top + window.pageYOffset,
	                    width: Math.round(obj.width),
	                    height: Math.round(obj.height)
	                };
	            },
	            css: function css(property, value) {
	                if (arguments.length < 2) {
	                    var element = this[0];
	                    if (typeof property == 'string') {
	                        if (!element) return;
	                        return element.style[camelize(property)] || getComputedStyle(element, '').getPropertyValue(property);
	                    } else if (isArray(property)) {
	                        if (!element) return;
	                        var props = {};
	                        var computedStyle = getComputedStyle(element, '');
	                        $.each(property, function (_, prop) {
	                            props[prop] = element.style[camelize(prop)] || computedStyle.getPropertyValue(prop);
	                        });
	                        return props;
	                    }
	                }

	                var css = '';
	                if (type(property) == 'string') {
	                    if (!value && value !== 0) this.each(function () {
	                        this.style.removeProperty(dasherize(property));
	                    });else css = dasherize(property) + ":" + maybeAddPx(property, value);
	                } else {
	                    for (key in property) {
	                        if (!property[key] && property[key] !== 0) this.each(function () {
	                            this.style.removeProperty(dasherize(key));
	                        });else css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';';
	                    }
	                }

	                return this.each(function () {
	                    this.style.cssText += ';' + css;
	                });
	            },
	            index: function index(element) {
	                return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0]);
	            },
	            hasClass: function hasClass(name) {
	                if (!name) return false;
	                return emptyArray.some.call(this, function (el) {
	                    return this.test(className(el));
	                }, classRE(name));
	            },
	            addClass: function addClass(name) {
	                if (!name) return this;
	                return this.each(function (idx) {
	                    if (!('className' in this)) return;
	                    classList = [];
	                    var cls = className(this),
	                        newName = funcArg(this, name, idx, cls);
	                    newName.split(/\s+/g).forEach(function (klass) {
	                        if (!$(this).hasClass(klass)) classList.push(klass);
	                    }, this);
	                    classList.length && className(this, cls + (cls ? " " : "") + classList.join(" "));
	                });
	            },
	            removeClass: function removeClass(name) {
	                return this.each(function (idx) {
	                    if (!('className' in this)) return;
	                    if (name === undefined) return className(this, '');
	                    classList = className(this);
	                    funcArg(this, name, idx, classList).split(/\s+/g).forEach(function (klass) {
	                        classList = classList.replace(classRE(klass), " ");
	                    });
	                    className(this, classList.trim());
	                });
	            },
	            toggleClass: function toggleClass(name, when) {
	                if (!name) return this;
	                return this.each(function (idx) {
	                    var $this = $(this),
	                        names = funcArg(this, name, idx, className(this));
	                    names.split(/\s+/g).forEach(function (klass) {
	                        (when === undefined ? !$this.hasClass(klass) : when) ? $this.addClass(klass) : $this.removeClass(klass);
	                    });
	                });
	            },
	            scrollTop: function scrollTop(value) {
	                if (!this.length) return;
	                var hasScrollTop = 'scrollTop' in this[0];
	                if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset;
	                return this.each(hasScrollTop ? function () {
	                    this.scrollTop = value;
	                } : function () {
	                    this.scrollTo(this.scrollX, value);
	                });
	            },
	            scrollLeft: function scrollLeft(value) {
	                if (!this.length) return;
	                var hasScrollLeft = 'scrollLeft' in this[0];
	                if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset;
	                return this.each(hasScrollLeft ? function () {
	                    this.scrollLeft = value;
	                } : function () {
	                    this.scrollTo(value, this.scrollY);
	                });
	            },
	            position: function position() {
	                if (!this.length) return;

	                var elem = this[0],

	                // Get *real* offsetParent
	                offsetParent = this.offsetParent(),

	                // Get correct offsets
	                offset = this.offset(),
	                    parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

	                // Subtract element margins
	                // note: when an element has margin: auto the offsetLeft and marginLeft
	                // are the same in Safari causing offset.left to incorrectly be 0
	                offset.top -= parseFloat($(elem).css('margin-top')) || 0;
	                offset.left -= parseFloat($(elem).css('margin-left')) || 0;

	                // Add offsetParent borders
	                parentOffset.top += parseFloat($(offsetParent[0]).css('border-top-width')) || 0;
	                parentOffset.left += parseFloat($(offsetParent[0]).css('border-left-width')) || 0;

	                // Subtract the two offsets
	                return {
	                    top: offset.top - parentOffset.top,
	                    left: offset.left - parentOffset.left
	                };
	            },
	            offsetParent: function offsetParent() {
	                return this.map(function () {
	                    var parent = this.offsetParent || document.body;
	                    while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css("position") == "static") {
	                        parent = parent.offsetParent;
	                    }return parent;
	                });
	            }

	            // for now
	        };$.fn.detach = $.fn.remove

	        // Generate the `width` and `height` functions
	        ;['width', 'height'].forEach(function (dimension) {
	            var dimensionProperty = dimension.replace(/./, function (m) {
	                return m[0].toUpperCase();
	            });

	            $.fn[dimension] = function (value) {
	                var offset,
	                    el = this[0];
	                if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] : isDocument(el) ? el.documentElement['scroll' + dimensionProperty] : (offset = this.offset()) && offset[dimension];else return this.each(function (idx) {
	                    el = $(this);
	                    el.css(dimension, funcArg(this, value, idx, el[dimension]()));
	                });
	            };
	        });

	        function traverseNode(node, fun) {
	            fun(node);
	            for (var i = 0, len = node.childNodes.length; i < len; i++) {
	                traverseNode(node.childNodes[i], fun);
	            }
	        }

	        // Generate the `after`, `prepend`, `before`, `append`,
	        // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.
	        adjacencyOperators.forEach(function (operator, operatorIndex) {
	            var inside = operatorIndex % 2; //=> prepend, append

	            $.fn[operator] = function () {
	                // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings
	                var argType,
	                    nodes = $.map(arguments, function (arg) {
	                    var arr = [];
	                    argType = type(arg);
	                    if (argType == "array") {
	                        arg.forEach(function (el) {
	                            if (el.nodeType !== undefined) return arr.push(el);else if ($.zepto.isZ(el)) return arr = arr.concat(el.get());
	                            arr = arr.concat(zepto.fragment(el));
	                        });
	                        return arr;
	                    }
	                    return argType == "object" || arg == null ? arg : zepto.fragment(arg);
	                }),
	                    parent,
	                    copyByClone = this.length > 1;
	                if (nodes.length < 1) return this;

	                return this.each(function (_, target) {
	                    parent = inside ? target : target.parentNode;

	                    // convert all methods to a "before" operation
	                    target = operatorIndex == 0 ? target.nextSibling : operatorIndex == 1 ? target.firstChild : operatorIndex == 2 ? target : null;

	                    var parentInDocument = $.contains(document.documentElement, parent);

	                    nodes.forEach(function (node) {
	                        if (copyByClone) node = node.cloneNode(true);else if (!parent) return $(node).remove();

	                        parent.insertBefore(node, target);
	                        if (parentInDocument) traverseNode(node, function (el) {
	                            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' && (!el.type || el.type === 'text/javascript') && !el.src) {
	                                var target = el.ownerDocument ? el.ownerDocument.defaultView : window;
	                                target['eval'].call(target, el.innerHTML);
	                            }
	                        });
	                    });
	                });
	            };

	            // after    => insertAfter
	            // prepend  => prependTo
	            // before   => insertBefore
	            // append   => appendTo
	            $.fn[inside ? operator + 'To' : 'insert' + (operatorIndex ? 'Before' : 'After')] = function (html) {
	                $(html)[operator](this);
	                return this;
	            };
	        });

	        zepto.Z.prototype = Z.prototype = $.fn;

	        // Export internal API functions in the `$.zepto` namespace
	        zepto.uniq = uniq;
	        zepto.deserializeValue = deserializeValue;
	        $.zepto = zepto;

	        return $;
	    }();

	    window.Zepto = Zepto;
	    window.$ === undefined && (window.$ = Zepto);(function ($) {
	        var _zid = 1,
	            undefined,
	            slice = Array.prototype.slice,
	            isFunction = $.isFunction,
	            isString = function isString(obj) {
	            return typeof obj == 'string';
	        },
	            handlers = {},
	            specialEvents = {},
	            focusinSupported = 'onfocusin' in window,
	            focus = { focus: 'focusin', blur: 'focusout' },
	            hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' };

	        specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents';

	        function zid(element) {
	            return element._zid || (element._zid = _zid++);
	        }
	        function findHandlers(element, event, fn, selector) {
	            event = parse(event);
	            if (event.ns) var matcher = matcherFor(event.ns);
	            return (handlers[zid(element)] || []).filter(function (handler) {
	                return handler && (!event.e || handler.e == event.e) && (!event.ns || matcher.test(handler.ns)) && (!fn || zid(handler.fn) === zid(fn)) && (!selector || handler.sel == selector);
	            });
	        }
	        function parse(event) {
	            var parts = ('' + event).split('.');
	            return { e: parts[0], ns: parts.slice(1).sort().join(' ') };
	        }
	        function matcherFor(ns) {
	            return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');
	        }

	        function eventCapture(handler, captureSetting) {
	            return handler.del && !focusinSupported && handler.e in focus || !!captureSetting;
	        }

	        function realEvent(type) {
	            return hover[type] || focusinSupported && focus[type] || type;
	        }

	        function add(element, events, fn, data, selector, delegator, capture) {
	            var id = zid(element),
	                set = handlers[id] || (handlers[id] = []);
	            events.split(/\s/).forEach(function (event) {
	                if (event == 'ready') return $(document).ready(fn);
	                var handler = parse(event);
	                handler.fn = fn;
	                handler.sel = selector;
	                // emulate mouseenter, mouseleave
	                if (handler.e in hover) fn = function fn(e) {
	                    var related = e.relatedTarget;
	                    if (!related || related !== this && !$.contains(this, related)) return handler.fn.apply(this, arguments);
	                };
	                handler.del = delegator;
	                var callback = delegator || fn;
	                handler.proxy = function (e) {
	                    e = compatible(e);
	                    if (e.isImmediatePropagationStopped()) return;
	                    e.data = data;
	                    var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args));
	                    if (result === false) e.preventDefault(), e.stopPropagation();
	                    return result;
	                };
	                handler.i = set.length;
	                set.push(handler);
	                if ('addEventListener' in element) element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture));
	            });
	        }
	        function remove(element, events, fn, selector, capture) {
	            var id = zid(element);(events || '').split(/\s/).forEach(function (event) {
	                findHandlers(element, event, fn, selector).forEach(function (handler) {
	                    delete handlers[id][handler.i];
	                    if ('removeEventListener' in element) element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture));
	                });
	            });
	        }

	        $.event = { add: add, remove: remove };

	        $.proxy = function (fn, context) {
	            var args = 2 in arguments && slice.call(arguments, 2);
	            if (isFunction(fn)) {
	                var proxyFn = function proxyFn() {
	                    return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);
	                };
	                proxyFn._zid = zid(fn);
	                return proxyFn;
	            } else if (isString(context)) {
	                if (args) {
	                    args.unshift(fn[context], fn);
	                    return $.proxy.apply(null, args);
	                } else {
	                    return $.proxy(fn[context], fn);
	                }
	            } else {
	                throw new TypeError("expected function");
	            }
	        };

	        $.fn.bind = function (event, data, callback) {
	            return this.on(event, data, callback);
	        };
	        $.fn.unbind = function (event, callback) {
	            return this.off(event, callback);
	        };
	        $.fn.one = function (event, selector, data, callback) {
	            return this.on(event, selector, data, callback, 1);
	        };

	        var returnTrue = function returnTrue() {
	            return true;
	        },
	            returnFalse = function returnFalse() {
	            return false;
	        },
	            ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,
	            eventMethods = {
	            preventDefault: 'isDefaultPrevented',
	            stopImmediatePropagation: 'isImmediatePropagationStopped',
	            stopPropagation: 'isPropagationStopped'
	        };

	        function compatible(event, source) {
	            if (source || !event.isDefaultPrevented) {
	                source || (source = event);

	                $.each(eventMethods, function (name, predicate) {
	                    var sourceMethod = source[name];
	                    event[name] = function () {
	                        this[predicate] = returnTrue;
	                        return sourceMethod && sourceMethod.apply(source, arguments);
	                    };
	                    event[predicate] = returnFalse;
	                });

	                event.timeStamp || (event.timeStamp = Date.now());

	                if (source.defaultPrevented !== undefined ? source.defaultPrevented : 'returnValue' in source ? source.returnValue === false : source.getPreventDefault && source.getPreventDefault()) event.isDefaultPrevented = returnTrue;
	            }
	            return event;
	        }

	        function createProxy(event) {
	            var key,
	                proxy = { originalEvent: event };
	            for (key in event) {
	                if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key];
	            }return compatible(proxy, event);
	        }

	        $.fn.delegate = function (selector, event, callback) {
	            return this.on(event, selector, callback);
	        };
	        $.fn.undelegate = function (selector, event, callback) {
	            return this.off(event, selector, callback);
	        };

	        $.fn.live = function (event, callback) {
	            $(document.body).delegate(this.selector, event, callback);
	            return this;
	        };
	        $.fn.die = function (event, callback) {
	            $(document.body).undelegate(this.selector, event, callback);
	            return this;
	        };

	        $.fn.on = function (event, selector, data, callback, one) {
	            var autoRemove,
	                delegator,
	                $this = this;
	            if (event && !isString(event)) {
	                $.each(event, function (type, fn) {
	                    $this.on(type, selector, data, fn, one);
	                });
	                return $this;
	            }

	            if (!isString(selector) && !isFunction(callback) && callback !== false) callback = data, data = selector, selector = undefined;
	            if (callback === undefined || data === false) callback = data, data = undefined;

	            if (callback === false) callback = returnFalse;

	            return $this.each(function (_, element) {
	                if (one) autoRemove = function autoRemove(e) {
	                    remove(element, e.type, callback);
	                    return callback.apply(this, arguments);
	                };

	                if (selector) delegator = function delegator(e) {
	                    var evt,
	                        match = $(e.target).closest(selector, element).get(0);
	                    if (match && match !== element) {
	                        evt = $.extend(createProxy(e), { currentTarget: match, liveFired: element });
	                        return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)));
	                    }
	                };

	                add(element, event, callback, data, selector, delegator || autoRemove);
	            });
	        };
	        $.fn.off = function (event, selector, callback) {
	            var $this = this;
	            if (event && !isString(event)) {
	                $.each(event, function (type, fn) {
	                    $this.off(type, selector, fn);
	                });
	                return $this;
	            }

	            if (!isString(selector) && !isFunction(callback) && callback !== false) callback = selector, selector = undefined;

	            if (callback === false) callback = returnFalse;

	            return $this.each(function () {
	                remove(this, event, callback, selector);
	            });
	        };

	        $.fn.trigger = function (event, args) {
	            event = isString(event) || $.isPlainObject(event) ? $.Event(event) : compatible(event);
	            event._args = args;
	            return this.each(function () {
	                // handle focus(), blur() by calling them directly
	                if (event.type in focus && typeof this[event.type] == "function") this[event.type]();
	                // items in the collection might not be DOM elements
	                else if ('dispatchEvent' in this) this.dispatchEvent(event);else $(this).triggerHandler(event, args);
	            });
	        };

	        // triggers event handlers on current element just as if an event occurred,
	        // doesn't trigger an actual event, doesn't bubble
	        $.fn.triggerHandler = function (event, args) {
	            var e, result;
	            this.each(function (i, element) {
	                e = createProxy(isString(event) ? $.Event(event) : event);
	                e._args = args;
	                e.target = element;
	                $.each(findHandlers(element, event.type || event), function (i, handler) {
	                    result = handler.proxy(e);
	                    if (e.isImmediatePropagationStopped()) return false;
	                });
	            });
	            return result;
	        }

	        // shortcut methods for `.bind(event, fn)` for each event type
	        ;('focusin focusout focus blur load resize scroll unload click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select keydown keypress keyup error').split(' ').forEach(function (event) {
	            $.fn[event] = function (callback) {
	                return 0 in arguments ? this.bind(event, callback) : this.trigger(event);
	            };
	        });

	        $.Event = function (type, props) {
	            if (!isString(type)) props = type, type = props.type;
	            var event = document.createEvent(specialEvents[type] || 'Events'),
	                bubbles = true;
	            if (props) for (var name in props) {
	                name == 'bubbles' ? bubbles = !!props[name] : event[name] = props[name];
	            }event.initEvent(type, bubbles, true);
	            return compatible(event);
	        };
	    })(Zepto);(function ($) {
	        var jsonpID = +new Date(),
	            document = window.document,
	            key,
	            name,
	            rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	            scriptTypeRE = /^(?:text|application)\/javascript/i,
	            xmlTypeRE = /^(?:text|application)\/xml/i,
	            jsonType = 'application/json',
	            htmlType = 'text/html',
	            blankRE = /^\s*$/,
	            originAnchor = document.createElement('a');

	        originAnchor.href = window.location.href;

	        // trigger a custom event and return false if it was cancelled
	        function triggerAndReturn(context, eventName, data) {
	            var event = $.Event(eventName);
	            $(context).trigger(event, data);
	            return !event.isDefaultPrevented();
	        }

	        // trigger an Ajax "global" event
	        function triggerGlobal(settings, context, eventName, data) {
	            if (settings.global) return triggerAndReturn(context || document, eventName, data);
	        }

	        // Number of active Ajax requests
	        $.active = 0;

	        function ajaxStart(settings) {
	            if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart');
	        }
	        function ajaxStop(settings) {
	            if (settings.global && ! --$.active) triggerGlobal(settings, null, 'ajaxStop');
	        }

	        // triggers an extra global event "ajaxBeforeSend" that's like "ajaxSend" but cancelable
	        function ajaxBeforeSend(xhr, settings) {
	            var context = settings.context;
	            if (settings.beforeSend.call(context, xhr, settings) === false || triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false) return false;

	            triggerGlobal(settings, context, 'ajaxSend', [xhr, settings]);
	        }
	        function ajaxSuccess(data, xhr, settings, deferred) {
	            var context = settings.context,
	                status = 'success';
	            settings.success.call(context, data, status, xhr);
	            if (deferred) deferred.resolveWith(context, [data, status, xhr]);
	            triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data]);
	            ajaxComplete(status, xhr, settings);
	        }
	        // type: "timeout", "error", "abort", "parsererror"
	        function ajaxError(error, type, xhr, settings, deferred) {
	            var context = settings.context;
	            settings.error.call(context, xhr, type, error);
	            if (deferred) deferred.rejectWith(context, [xhr, type, error]);
	            triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type]);
	            ajaxComplete(type, xhr, settings);
	        }
	        // status: "success", "notmodified", "error", "timeout", "abort", "parsererror"
	        function ajaxComplete(status, xhr, settings) {
	            var context = settings.context;
	            settings.complete.call(context, xhr, status);
	            triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings]);
	            ajaxStop(settings);
	        }

	        function ajaxDataFilter(data, type, settings) {
	            if (settings.dataFilter == empty) return data;
	            var context = settings.context;
	            return settings.dataFilter.call(context, data, type);
	        }

	        // Empty function, used as default callback
	        function empty() {}

	        $.ajaxJSONP = function (options, deferred) {
	            if (!('type' in options)) return $.ajax(options);

	            var _callbackName = options.jsonpCallback,
	                callbackName = ($.isFunction(_callbackName) ? _callbackName() : _callbackName) || 'Zepto' + jsonpID++,
	                script = document.createElement('script'),
	                originalCallback = window[callbackName],
	                responseData,
	                abort = function abort(errorType) {
	                $(script).triggerHandler('error', errorType || 'abort');
	            },
	                xhr = { abort: abort },
	                abortTimeout;

	            if (deferred) deferred.promise(xhr);

	            $(script).on('load error', function (e, errorType) {
	                clearTimeout(abortTimeout);
	                $(script).off().remove();

	                if (e.type == 'error' || !responseData) {
	                    ajaxError(null, errorType || 'error', xhr, options, deferred);
	                } else {
	                    ajaxSuccess(responseData[0], xhr, options, deferred);
	                }

	                window[callbackName] = originalCallback;
	                if (responseData && $.isFunction(originalCallback)) originalCallback(responseData[0]);

	                originalCallback = responseData = undefined;
	            });

	            if (ajaxBeforeSend(xhr, options) === false) {
	                abort('abort');
	                return xhr;
	            }

	            window[callbackName] = function () {
	                responseData = arguments;
	            };

	            script.src = options.url.replace(/\?(.+)=\?/, '?$1=' + callbackName);
	            document.head.appendChild(script);

	            if (options.timeout > 0) abortTimeout = setTimeout(function () {
	                abort('timeout');
	            }, options.timeout);

	            return xhr;
	        };

	        $.ajaxSettings = {
	            // Default type of request
	            type: 'GET',
	            // Callback that is executed before request
	            beforeSend: empty,
	            // Callback that is executed if the request succeeds
	            success: empty,
	            // Callback that is executed the the server drops error
	            error: empty,
	            // Callback that is executed on request complete (both: error and success)
	            complete: empty,
	            // The context for the callbacks
	            context: null,
	            // Whether to trigger "global" Ajax events
	            global: true,
	            // Transport
	            xhr: function xhr() {
	                return new window.XMLHttpRequest();
	            },
	            // MIME types mapping
	            // IIS returns Javascript as "application/x-javascript"
	            accepts: {
	                script: 'text/javascript, application/javascript, application/x-javascript',
	                json: jsonType,
	                xml: 'application/xml, text/xml',
	                html: htmlType,
	                text: 'text/plain'
	            },
	            // Whether the request is to another domain
	            crossDomain: false,
	            // Default timeout
	            timeout: 0,
	            // Whether data should be serialized to string
	            processData: true,
	            // Whether the browser should be allowed to cache GET responses
	            cache: true,
	            //Used to handle the raw response data of XMLHttpRequest.
	            //This is a pre-filtering function to sanitize the response.
	            //The sanitized response should be returned
	            dataFilter: empty
	        };

	        function mimeToDataType(mime) {
	            if (mime) mime = mime.split(';', 2)[0];
	            return mime && (mime == htmlType ? 'html' : mime == jsonType ? 'json' : scriptTypeRE.test(mime) ? 'script' : xmlTypeRE.test(mime) && 'xml') || 'text';
	        }

	        function appendQuery(url, query) {
	            if (query == '') return url;
	            return (url + '&' + query).replace(/[&?]{1,2}/, '?');
	        }

	        // serialize payload and append it to the URL for GET requests
	        function serializeData(options) {
	            if (options.processData && options.data && $.type(options.data) != "string") options.data = $.param(options.data, options.traditional);
	            if (options.data && (!options.type || options.type.toUpperCase() == 'GET' || 'jsonp' == options.dataType)) options.url = appendQuery(options.url, options.data), options.data = undefined;
	        }

	        $.ajax = function (options) {
	            var settings = $.extend({}, options || {}),
	                deferred = $.Deferred && $.Deferred(),
	                urlAnchor,
	                hashIndex;
	            for (key in $.ajaxSettings) {
	                if (settings[key] === undefined) settings[key] = $.ajaxSettings[key];
	            }ajaxStart(settings);

	            if (!settings.crossDomain) {
	                urlAnchor = document.createElement('a');
	                urlAnchor.href = settings.url;
	                // cleans up URL for .href (IE only), see https://github.com/madrobby/zepto/pull/1049
	                urlAnchor.href = urlAnchor.href;
	                settings.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;
	            }

	            if (!settings.url) settings.url = window.location.toString();
	            if ((hashIndex = settings.url.indexOf('#')) > -1) settings.url = settings.url.slice(0, hashIndex);
	            serializeData(settings);

	            var dataType = settings.dataType,
	                hasPlaceholder = /\?.+=\?/.test(settings.url);
	            if (hasPlaceholder) dataType = 'jsonp';

	            if (settings.cache === false || (!options || options.cache !== true) && ('script' == dataType || 'jsonp' == dataType)) settings.url = appendQuery(settings.url, '_=' + Date.now());

	            if ('jsonp' == dataType) {
	                if (!hasPlaceholder) settings.url = appendQuery(settings.url, settings.jsonp ? settings.jsonp + '=?' : settings.jsonp === false ? '' : 'callback=?');
	                return $.ajaxJSONP(settings, deferred);
	            }

	            var mime = settings.accepts[dataType],
	                headers = {},
	                setHeader = function setHeader(name, value) {
	                headers[name.toLowerCase()] = [name, value];
	            },
	                protocol = /^([\w-]+:)\/\//.test(settings.url) ? RegExp.$1 : window.location.protocol,
	                xhr = settings.xhr(),
	                nativeSetHeader = xhr.setRequestHeader,
	                abortTimeout;

	            if (deferred) deferred.promise(xhr);

	            if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest');
	            setHeader('Accept', mime || '*/*');
	            if (mime = settings.mimeType || mime) {
	                if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0];
	                xhr.overrideMimeType && xhr.overrideMimeType(mime);
	            }
	            if (settings.contentType || settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET') setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded');

	            if (settings.headers) for (name in settings.headers) {
	                setHeader(name, settings.headers[name]);
	            }xhr.setRequestHeader = setHeader;

	            xhr.onreadystatechange = function () {
	                if (xhr.readyState == 4) {
	                    xhr.onreadystatechange = empty;
	                    clearTimeout(abortTimeout);
	                    var result,
	                        error = false;
	                    if (xhr.status >= 200 && xhr.status < 300 || xhr.status == 304 || xhr.status == 0 && protocol == 'file:') {
	                        dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'));

	                        if (xhr.responseType == 'arraybuffer' || xhr.responseType == 'blob') result = xhr.response;else {
	                            result = xhr.responseText;

	                            try {
	                                // http://perfectionkills.com/global-eval-what-are-the-options/
	                                // sanitize response accordingly if data filter callback provided
	                                result = ajaxDataFilter(result, dataType, settings);
	                                if (dataType == 'script') (1, eval)(result);else if (dataType == 'xml') result = xhr.responseXML;else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result);
	                            } catch (e) {
	                                error = e;
	                            }

	                            if (error) return ajaxError(error, 'parsererror', xhr, settings, deferred);
	                        }

	                        ajaxSuccess(result, xhr, settings, deferred);
	                    } else {
	                        ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);
	                    }
	                }
	            };

	            if (ajaxBeforeSend(xhr, settings) === false) {
	                xhr.abort();
	                ajaxError(null, 'abort', xhr, settings, deferred);
	                return xhr;
	            }

	            var async = 'async' in settings ? settings.async : true;
	            xhr.open(settings.type, settings.url, async, settings.username, settings.password);

	            if (settings.xhrFields) for (name in settings.xhrFields) {
	                xhr[name] = settings.xhrFields[name];
	            }for (name in headers) {
	                nativeSetHeader.apply(xhr, headers[name]);
	            }if (settings.timeout > 0) abortTimeout = setTimeout(function () {
	                xhr.onreadystatechange = empty;
	                xhr.abort();
	                ajaxError(null, 'timeout', xhr, settings, deferred);
	            }, settings.timeout);

	            // avoid sending empty string (#319)
	            xhr.send(settings.data ? settings.data : null);
	            return xhr;
	        };

	        // handle optional data/success arguments
	        function parseArguments(url, data, success, dataType) {
	            if ($.isFunction(data)) dataType = success, success = data, data = undefined;
	            if (!$.isFunction(success)) dataType = success, success = undefined;
	            return {
	                url: url,
	                data: data,
	                success: success,
	                dataType: dataType
	            };
	        }

	        $.get = function () /* url, data, success, dataType */{
	            return $.ajax(parseArguments.apply(null, arguments));
	        };

	        $.post = function () /* url, data, success, dataType */{
	            var options = parseArguments.apply(null, arguments);
	            options.type = 'POST';
	            return $.ajax(options);
	        };

	        $.getJSON = function () /* url, data, success */{
	            var options = parseArguments.apply(null, arguments);
	            options.dataType = 'json';
	            return $.ajax(options);
	        };

	        $.fn.load = function (url, data, success) {
	            if (!this.length) return this;
	            var self = this,
	                parts = url.split(/\s/),
	                selector,
	                options = parseArguments(url, data, success),
	                callback = options.success;
	            if (parts.length > 1) options.url = parts[0], selector = parts[1];
	            options.success = function (response) {
	                self.html(selector ? $('<div>').html(response.replace(rscript, "")).find(selector) : response);
	                callback && callback.apply(self, arguments);
	            };
	            $.ajax(options);
	            return this;
	        };

	        var escape = encodeURIComponent;

	        function serialize(params, obj, traditional, scope) {
	            var type,
	                array = $.isArray(obj),
	                hash = $.isPlainObject(obj);
	            $.each(obj, function (key, value) {
	                type = $.type(value);
	                if (scope) key = traditional ? scope : scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']';
	                // handle data in serializeArray() format
	                if (!scope && array) params.add(value.name, value.value);
	                // recurse into nested objects
	                else if (type == "array" || !traditional && type == "object") serialize(params, value, traditional, key);else params.add(key, value);
	            });
	        }

	        $.param = function (obj, traditional) {
	            var params = [];
	            params.add = function (key, value) {
	                if ($.isFunction(value)) value = value();
	                if (value == null) value = "";
	                this.push(escape(key) + '=' + escape(value));
	            };
	            serialize(params, obj, traditional);
	            return params.join('&').replace(/%20/g, '+');
	        };
	    })(Zepto);(function ($) {
	        $.fn.serializeArray = function () {
	            var name,
	                type,
	                result = [],
	                add = function add(value) {
	                if (value.forEach) return value.forEach(add);
	                result.push({ name: name, value: value });
	            };
	            if (this[0]) $.each(this[0].elements, function (_, field) {
	                type = field.type, name = field.name;
	                if (name && field.nodeName.toLowerCase() != 'fieldset' && !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' && (type != 'radio' && type != 'checkbox' || field.checked)) add($(field).val());
	            });
	            return result;
	        };

	        $.fn.serialize = function () {
	            var result = [];
	            this.serializeArray().forEach(function (elm) {
	                result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value));
	            });
	            return result.join('&');
	        };

	        $.fn.submit = function (callback) {
	            if (0 in arguments) this.bind('submit', callback);else if (this.length) {
	                var event = $.Event('submit');
	                this.eq(0).trigger(event);
	                if (!event.isDefaultPrevented()) this.get(0).submit();
	            }
	            return this;
	        };
	    })(Zepto);(function () {
	        // getComputedStyle shouldn't freak out when called
	        // without a valid element as argument
	        try {
	            getComputedStyle(undefined);
	        } catch (e) {
	            var nativeGetComputedStyle = getComputedStyle;
	            window.getComputedStyle = function (element, pseudoElement) {
	                try {
	                    return nativeGetComputedStyle(element, pseudoElement);
	                } catch (e) {
	                    return null;
	                }
	            };
	        }
	    })();
	    return Zepto;
	});

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _vue = __webpack_require__(1);

	var _vue2 = _interopRequireDefault(_vue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = new _vue2.default(); /**
	                                        * Created by vinceyu on 2017/2/21.
	                                        */

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(13)
	__vue_script__ = __webpack_require__(15)
	__vue_template__ = __webpack_require__(103)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\index_part_drag.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(14);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7a9e6f58&file=index_part_drag.vue&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index_part_drag.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7a9e6f58&file=index_part_drag.vue&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index_part_drag.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\n    .index-part-drag[_v-7a9e6f58] {\n        width: 100%;\n        background-color: #efeff4;\n    }\n    .navigation-bar[_v-7a9e6f58]{\n        position: relative;\n    }\n    .navigation-bar img[_v-7a9e6f58] {\n        width: 100%;\n        height: 65px;\n    }\n    .navigation-bar span[_v-7a9e6f58]{\n        display: block;\n        width:100%;\n        text-align: center;\n        position: absolute;\n        bottom:12px;\n        font-weight: bold;\n        font-size:16px;\n        left:0;\n        color:#fff;\n\n    }\n\n    .flip-list-move[_v-7a9e6f58] {\n        transition: -webkit-transform 0.5s;\n        transition: transform 0.5s;\n        transition: transform 0.5s, -webkit-transform 0.5s;\n    }\n\n    .ghost[_v-7a9e6f58] {\n        opacity: .5;\n        background: #C8EBFB;\n    }\n\n    .drag-group-item[_v-7a9e6f58] {\n        position: relative;\n\n    }\n\n    .cursor_move[_v-7a9e6f58]{\n        cursor: move;\n    }\n\n    .drag-group-item .actions[_v-7a9e6f58] {\n        display: inline-block;\n        position: absolute;\n        left: 0;\n        bottom: 0;\n        height: 100%;\n        width: 375px;\n        border: 2px dashed rgba(42,117,237,0.7);\n        box-sizing: border-box;\n        z-index: 2;\n    }\n    .drag-group-item .actions .actions-wrap[_v-7a9e6f58] {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        font-size: 0;\n        z-index:2;\n    }\n    .drag-group-item .actions .action-tip[_v-7a9e6f58] {\n        position: absolute;\n        top: 50%;\n        right: 10px;\n        width: 18px;\n        height: 14px;\n        margin-top: -7px;\n    }\n    .drag-group-item .actions .action-tip img[_v-7a9e6f58] {\n        width: 100%;\n        height: 100%;\n    }\n    .drag-group-item .actions .actions-wrap .action[_v-7a9e6f58] {\n        display: inline-block;\n        background-color: rgba(0,0,0,0.5);\n        color: #fff;\n        padding: 2px 6px;\n        margin-left: 1px;\n        font-size: 12px;\n        cursor: pointer;\n    }\n", ""]);

	// exports


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _vuedraggable = __webpack_require__(16);

	var _vuedraggable2 = _interopRequireDefault(_vuedraggable);

	var _banner = __webpack_require__(18);

	var _banner2 = _interopRequireDefault(_banner);

	var _category = __webpack_require__(23);

	var _category2 = _interopRequireDefault(_category);

	var _community = __webpack_require__(28);

	var _community2 = _interopRequireDefault(_community);

	var _member = __webpack_require__(43);

	var _member2 = _interopRequireDefault(_member);

	var _alive = __webpack_require__(53);

	var _alive2 = _interopRequireDefault(_alive);

	var _question = __webpack_require__(63);

	var _question2 = _interopRequireDefault(_question);

	var _recommend = __webpack_require__(73);

	var _recommend2 = _interopRequireDefault(_recommend);

	var _activity = __webpack_require__(83);

	var _activity2 = _interopRequireDefault(_activity);

	var _index_part_add = __webpack_require__(97);

	var _index_part_add2 = _interopRequireDefault(_index_part_add);

	var _generateUUID = __webpack_require__(102);

	var _generateUUID2 = _interopRequireDefault(_generateUUID);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//    增加模块区域

	//最新模块

	//直播模块

	//社群模块

	//banner图模块
	//
	// <!--* 首页模块序号 1-轮播图模块、2-分类导航模块、3-社群模块、4-会员及专利模块 5-问答模块 6-直播模块 7-最新模块-->
	//
	// <template>
	//     <div class="index-part-drag">
	//         <div class="navigation-bar" @click="set_index_view(true)">
	//             <img src="/images/admin/shopDiy/navigation-bar@2x.png?v1"/>
	//             <span >{{index_name}}</span>
	//         </div>
	//         <!--可拖拽编辑区域-->
	//         <draggable class="drag-group" v-model="list" :options="dragOptions" :move="onMove" @start="isDragging=true" @end="isDragging=false">
	//             <div class="drag-group-item" @click="set_index_view(false)" :class="{ cursor_move : version_type ===3 }" v-for="(element,index) in list" :key="element.order"
	//                  @mouseover="mouseOverShow(index)" @click.stop="onEditClick(element,index)" :id="'drag-group-item'+index">
	//                 <!--banner图模块-->
	//                 <banner v-if="element.index_sort == 1" :banner_part="list[index].index_data"></banner>
	//                 <!--分类导航模块-->
	//                 <category v-else-if="element.index_sort == 2" :category_part="index_local_data.category_part"></category>
	//                 <!--社群模块-->
	//                 <community v-else-if="element.index_sort == 3" :community_part="list[index].index_data" :default_community_part="index_local_data.community_part"></community>
	//                 <!--会员专栏模块-->
	//                 <member v-else-if="element.index_sort == 4" :member_part="list[index].index_data" :default_member_part="index_local_data.member_part"></member>
	//                 <!--问答模块-->
	//                 <question v-else-if="element.index_sort == 5" :question_part="index_local_data.question_part"></question>
	//                 <!--直播模块-->
	//                 <alive v-else-if="element.index_sort == 6" :alive_part="list[index].index_data" :default_alive_part="index_local_data.alive_part"></alive>
	//                 <!--最新模块-->
	//                 <recommend v-else-if="element.index_sort == 7" :recommend_part="index_local_data.recommend_part"></recommend>
	//
	//                 <activity v-else-if="element.index_sort == 8" :activity_part="list[index].index_data" :default_activity_part="index_local_data.activity_part"></activity>
	//
	//                 <!--悬浮编辑操作-->
	//                 <div class="actions" v-show="isMouseActive==index">
	//                     <div class="actions-wrap">
	//                             <span  v-if="element.index_sort == 1 ||  ((element.index_sort == 3 || element.index_sort == 4 ||  element.index_sort == 6 || element.index_sort == 8) && version_type ===3)
	//                                         " class="action edit" @click.stop="onEditClick(element,index)">编辑</span>
	//                         <span v-if="version_type ===3" class="action delete" @click.stop="onDelete(index)">删除</span>
	//                     </div>
	//                     <div class="action-tip">
	//                         <img src="/images/admin/shopDiy/icon-drag@2x.png"/>
	//                     </div>
	//                 </div>
	//
	//
	//             </div>
	//         </draggable>
	//         <!--增加模块区域-->
	//         <index_part_add v-show="version_type === 3" :add_module_part="add_module_part"></index_part_add>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['index_sort', 'index_data', 'index_local_data', 'add_module_part', 'index_data_id', 'version_type', 'index_name'],
	    data: function data() {
	        return {
	            //拖拽的列表数据
	            list: [],
	            isDragging: false,
	            delayedDragging: false,
	            isMouseActive: 0,
	            isClickActive: 0,
	            banner_part: ''
	        };
	    },

	    created: function created() {

	        //增加子模块
	        _eventbus2.default.$on('add_part', this.addIndexSort);

	        //监听子模块的资源列表变化
	        _eventbus2.default.$on('part_list_change', this.partListChange);
	    },
	    methods: {
	        //设置首页功能是否显示
	        set_index_view: function set_index_view(flag) {
	            _eventbus2.default.$emit('set_index_view', flag);
	            _eventbus2.default.$emit('hide_edit_part');
	        },
	        //监听子模块的资源列表变化
	        partListChange: function partListChange(obj) {

	            var index_sort = obj.index_sort;
	            var part_list = obj.part_list;
	            var module_index = obj.module_index;

	            this.list[module_index].index_data.list = part_list;

	            if (index_sort === 1) {} else {
	                var part_title = obj.part_title;
	                var status = obj.status;

	                //
	                //                    console.log(status);
	                this.list[module_index].index_data.part_title = part_title;
	                this.list[module_index].index_data.status = status;
	            }
	        },
	        onMove: function onMove(_ref) {
	            var relatedContext = _ref.relatedContext,
	                draggedContext = _ref.draggedContext;

	            if (this.version_type !== 3) {
	                return false;
	            }
	            //                return false;
	            //                const relatedElement = relatedContext.element;
	            //                const draggedElement = draggedContext.element;
	            //                console.log('relatedElement'+relatedElement.order);
	            //                console.log('draggedElement'+draggedElement.order);
	            //                this.isClickActive = relatedElement.order-1;
	        },

	        //鼠标悬浮到模块上
	        mouseOverShow: function mouseOverShow(index) {
	            this.isMouseActive = index;
	        },
	        //点击编辑模块，并将数据同步到子组件
	        onEditClick: function onEditClick(item, index) {

	            if (item.index_sort == 1 || (item.index_sort == 3 || item.index_sort == 4 || item.index_sort == 6 || item.index_sort == 8) && this.version_type === 3) {
	                var topSize = document.getElementById('drag-group-item' + index).offsetTop;

	                var index_sort = item.index_sort;
	                var obj = {
	                    //位置索引
	                    index: index,
	                    //离顶部距离
	                    topSize: topSize,
	                    //模块标号
	                    index_sort: index_sort,
	                    //模块数据
	                    index_data: item.index_data,
	                    //模块唯一id
	                    index_data_id: item.index_data_id
	                };
	                this.isClickActive = index;
	                this.sidebarPartPosition(obj);
	            }
	        },
	        //点击编辑后显示编辑模块
	        sidebarPartPosition: function sidebarPartPosition(obj) {
	            _eventbus2.default.$emit('sidebar_part_position', obj);
	        },
	        //删除模块
	        onDelete: function onDelete(index) {
	            var item = this.list[index];
	            var index_sort = item.index_sort;
	            this.list.splice(index, 1);

	            _eventbus2.default.$emit('delete_part', index_sort); //与添加模块交互
	            //删除后需要隐藏编辑模块
	            _eventbus2.default.$emit('hide_edit_part');
	        },
	        //添加模块 add_type 1为往末尾加，2为往头部加
	        addIndexSort: function addIndexSort(obj) {

	            var index_sort = obj.index_sort;
	            var add_type = obj.add_type;

	            var part_title = '';
	            if (index_sort == 3) {
	                part_title = '小社群';
	            } else if (index_sort == 4) {
	                part_title = '频道';
	            } else if (index_sort == 6) {
	                part_title = '直播';
	            } else if (index_sort == 8) {
	                part_title = '活动';
	            }

	            var index_data = void 0;
	            if (index_sort === 1) {
	                index_data = { list: [] };
	            } else if (index_sort === 3 || index_sort === 4 || index_sort === 6 || index_sort === 8) {
	                index_data = { part_title: part_title, status: 0, list: [] };
	            } else {
	                index_data = {};
	            }
	            var item = {
	                index_sort: index_sort,
	                order: this.list.length + 1,
	                index_data: index_data,
	                index_data_id: _generateUUID2.default.init()
	            };

	            if (add_type === 2) {
	                this.list.unshift(item);
	            } else {
	                this.list.push(item);
	            }
	        }
	    },
	    computed: {
	        dragOptions: function dragOptions() {
	            return {
	                animation: 150,
	                group: 'description',
	                ghostClass: 'ghost'
	            };
	        }
	    },
	    watch: {
	        isDragging: function isDragging(newValue) {
	            var _this = this;

	            if (newValue) {
	                this.delayedDragging = true;
	                return;
	            }
	            this.$nextTick(function () {
	                _this.delayedDragging = false;
	                _eventbus2.default.$emit("hide_edit_part");
	            });
	        },
	        //拖拽数据
	        index_sort: function index_sort() {
	            var _this2 = this;

	            this.list = this.index_sort.map(function (item, index) {
	                return {
	                    index_sort: item,
	                    order: index + 1,
	                    index_data: _this2.index_data[index],
	                    index_data_id: _this2.index_data_id[index]
	                };
	            });
	        },
	        //监听数据变化更改同步给提交数据
	        list: {
	            handler: function handler() {
	                _eventbus2.default.$emit('watch_submit', this.list);
	            },
	            deep: true
	        }
	    },
	    components: {
	        draggable: _vuedraggable2.default,
	        banner: _banner2.default,
	        category: _category2.default,
	        community: _community2.default,
	        member: _member2.default,
	        alive: _alive2.default,
	        question: _question2.default,
	        recommend: _recommend2.default,
	        activity: _activity2.default,
	        index_part_add: _index_part_add2.default
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .index-part-drag {
	    //         width: 100%;
	    //         background-color: #efeff4;
	    //     }
	    //     .navigation-bar{
	    //         position: relative;
	    //     }
	    //     .navigation-bar img {
	    //         width: 100%;
	    //         height: 65px;
	    //     }
	    //     .navigation-bar span{
	    //         display: block;
	    //         width:100%;
	    //         text-align: center;
	    //         position: absolute;
	    //         bottom:12px;
	    //         font-weight: bold;
	    //         font-size:16px;
	    //         left:0;
	    //         color:#fff;
	    //
	    //     }
	    //
	    //     .flip-list-move {
	    //         transition: transform 0.5s;
	    //     }
	    //
	    //     .ghost {
	    //         opacity: .5;
	    //         background: #C8EBFB;
	    //     }
	    //
	    //     .drag-group-item {
	    //         position: relative;
	    //
	    //     }
	    //
	    //     .cursor_move{
	    //         cursor: move;
	    //     }
	    //
	    //     .drag-group-item .actions {
	    //         display: inline-block;
	    //         position: absolute;
	    //         left: 0;
	    //         bottom: 0;
	    //         height: 100%;
	    //         width: 375px;
	    //         border: 2px dashed rgba(42,117,237,0.7);
	    //         -webkit-box-sizing: border-box;
	    //         -moz-box-sizing: border-box;
	    //         box-sizing: border-box;
	    //         z-index: 2;
	    //     }
	    //     .drag-group-item .actions .actions-wrap {
	    //         position: absolute;
	    //         bottom: 0;
	    //         right: 0;
	    //         font-size: 0;
	    //         z-index:2;
	    //     }
	    //     .drag-group-item .actions .action-tip {
	    //         position: absolute;
	    //         top: 50%;
	    //         right: 10px;
	    //         width: 18px;
	    //         height: 14px;
	    //         margin-top: -7px;
	    //     }
	    //     .drag-group-item .actions .action-tip img {
	    //         width: 100%;
	    //         height: 100%;
	    //     }
	    //     .drag-group-item .actions .actions-wrap .action {
	    //         display: inline-block;
	    //         background-color: rgba(0,0,0,0.5);
	    //         color: #fff;
	    //         padding: 2px 6px;
	    //         margin-left: 1px;
	    //         font-size: 12px;
	    //         cursor: pointer;
	    //     }
	    // </style>
	    //

	};
	//生成唯一id

	//活动模块

	//问答模块

	//会员专栏模块

	//分类导航模块

	// 拖拽操作模块

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }return arr2;
	  } else {
	    return Array.from(arr);
	  }
	}

	(function () {
	  "use strict";

	  if (!Array.from) {
	    Array.from = function (object) {
	      return [].slice.call(object);
	    };
	  }

	  function buildDraggable(Sortable) {
	    function removeNode(node) {
	      node.parentElement.removeChild(node);
	    }

	    function insertNodeAt(fatherNode, node, position) {
	      var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;
	      fatherNode.insertBefore(node, refNode);
	    }

	    function computeVmIndex(vnodes, element) {
	      return vnodes.map(function (elt) {
	        return elt.elm;
	      }).indexOf(element);
	    }

	    function _computeIndexes(slots, children, isTransition) {
	      if (!slots) {
	        return [];
	      }

	      var elmFromNodes = slots.map(function (elt) {
	        return elt.elm;
	      });
	      var rawIndexes = [].concat(_toConsumableArray(children)).map(function (elt) {
	        return elmFromNodes.indexOf(elt);
	      });
	      return isTransition ? rawIndexes.filter(function (ind) {
	        return ind !== -1;
	      }) : rawIndexes;
	    }

	    function emit(evtName, evtData) {
	      var _this = this;

	      this.$nextTick(function () {
	        return _this.$emit(evtName.toLowerCase(), evtData);
	      });
	    }

	    function delegateAndEmit(evtName) {
	      var _this2 = this;

	      return function (evtData) {
	        if (_this2.realList !== null) {
	          _this2['onDrag' + evtName](evtData);
	        }
	        emit.call(_this2, evtName, evtData);
	      };
	    }

	    var eventsListened = ['Start', 'Add', 'Remove', 'Update', 'End'];
	    var eventsToEmit = ['Choose', 'Sort', 'Filter', 'Clone'];
	    var readonlyProperties = ['Move'].concat(eventsListened, eventsToEmit).map(function (evt) {
	      return 'on' + evt;
	    });
	    var draggingElement = null;

	    var props = {
	      options: Object,
	      list: {
	        type: Array,
	        required: false,
	        default: null
	      },
	      value: {
	        type: Array,
	        required: false,
	        default: null
	      },
	      noTransitionOnDrag: {
	        type: Boolean,
	        default: false
	      },
	      clone: {
	        type: Function,
	        default: function _default(original) {
	          return original;
	        }
	      },
	      element: {
	        type: String,
	        default: 'div'
	      },
	      move: {
	        type: Function,
	        default: null
	      }
	    };

	    var draggableComponent = {
	      name: 'draggable',

	      props: props,

	      data: function data() {
	        return {
	          transitionMode: false,
	          componentMode: false
	        };
	      },
	      render: function render(h) {
	        var slots = this.$slots.default;
	        if (slots && slots.length === 1) {
	          var child = slots[0];
	          if (child.componentOptions && child.componentOptions.tag === "transition-group") {
	            this.transitionMode = true;
	          }
	        }
	        var children = slots;
	        var footer = this.$slots.footer;

	        if (footer) {
	          children = slots ? [].concat(_toConsumableArray(slots), _toConsumableArray(footer)) : [].concat(_toConsumableArray(footer));
	        }
	        return h(this.element, null, children);
	      },
	      mounted: function mounted() {
	        var _this3 = this;

	        this.componentMode = this.element.toLowerCase() !== this.$el.nodeName.toLowerCase();
	        if (this.componentMode && this.transitionMode) {
	          throw new Error('Transition-group inside component is not supported. Please alter element value or remove transition-group. Current element value: ' + this.element);
	        }
	        var optionsAdded = {};
	        eventsListened.forEach(function (elt) {
	          optionsAdded['on' + elt] = delegateAndEmit.call(_this3, elt);
	        });

	        eventsToEmit.forEach(function (elt) {
	          optionsAdded['on' + elt] = emit.bind(_this3, elt);
	        });

	        var options = _extends({}, this.options, optionsAdded, { onMove: function onMove(evt, originalEvent) {
	            return _this3.onDragMove(evt, originalEvent);
	          } });
	        !('draggable' in options) && (options.draggable = '>*');
	        this._sortable = new Sortable(this.rootContainer, options);
	        this.computeIndexes();
	      },
	      beforeDestroy: function beforeDestroy() {
	        this._sortable.destroy();
	      },

	      computed: {
	        rootContainer: function rootContainer() {
	          return this.transitionMode ? this.$el.children[0] : this.$el;
	        },
	        isCloning: function isCloning() {
	          return !!this.options && !!this.options.group && this.options.group.pull === 'clone';
	        },
	        realList: function realList() {
	          return !!this.list ? this.list : this.value;
	        }
	      },

	      watch: {
	        options: {
	          handler: function handler(newOptionValue) {
	            for (var property in newOptionValue) {
	              if (readonlyProperties.indexOf(property) == -1) {
	                this._sortable.option(property, newOptionValue[property]);
	              }
	            }
	          },

	          deep: true
	        },

	        realList: function realList() {
	          this.computeIndexes();
	        }
	      },

	      methods: {
	        getChildrenNodes: function getChildrenNodes() {
	          if (this.componentMode) {
	            return this.$children[0].$slots.default;
	          }
	          var rawNodes = this.$slots.default;
	          return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;
	        },
	        computeIndexes: function computeIndexes() {
	          var _this4 = this;

	          this.$nextTick(function () {
	            _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode);
	          });
	        },
	        getUnderlyingVm: function getUnderlyingVm(htmlElt) {
	          var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);
	          if (index === -1) {
	            //Edge case during move callback: related element might be
	            //an element different from collection
	            return null;
	          }
	          var element = this.realList[index];
	          return { index: index, element: element };
	        },
	        getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {
	          var __vue__ = _ref.__vue__;

	          if (!__vue__ || !__vue__.$options || __vue__.$options._componentTag !== "transition-group") {
	            return __vue__;
	          }
	          return __vue__.$parent;
	        },
	        emitChanges: function emitChanges(evt) {
	          var _this5 = this;

	          this.$nextTick(function () {
	            _this5.$emit('change', evt);
	          });
	        },
	        alterList: function alterList(onList) {
	          if (!!this.list) {
	            onList(this.list);
	          } else {
	            var newList = [].concat(_toConsumableArray(this.value));
	            onList(newList);
	            this.$emit('input', newList);
	          }
	        },
	        spliceList: function spliceList() {
	          var _arguments = arguments;

	          var spliceList = function spliceList(list) {
	            return list.splice.apply(list, _arguments);
	          };
	          this.alterList(spliceList);
	        },
	        updatePosition: function updatePosition(oldIndex, newIndex) {
	          var updatePosition = function updatePosition(list) {
	            return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);
	          };
	          this.alterList(updatePosition);
	        },
	        getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {
	          var to = _ref2.to,
	              related = _ref2.related;

	          var component = this.getUnderlyingPotencialDraggableComponent(to);
	          if (!component) {
	            return { component: component };
	          }
	          var list = component.realList;
	          var context = { list: list, component: component };
	          if (to !== related && list && component.getUnderlyingVm) {
	            var destination = component.getUnderlyingVm(related);
	            if (destination) {
	              return _extends(destination, context);
	            }
	          }

	          return context;
	        },
	        getVmIndex: function getVmIndex(domIndex) {
	          var indexes = this.visibleIndexes;
	          var numberIndexes = indexes.length;
	          return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];
	        },
	        getComponent: function getComponent() {
	          return this.$slots.default[0].componentInstance;
	        },
	        resetTransitionData: function resetTransitionData(index) {
	          if (!this.noTransitionOnDrag || !this.transitionMode) {
	            return;
	          }
	          var nodes = this.getChildrenNodes();
	          nodes[index].data = null;
	          var transitionContainer = this.getComponent();
	          transitionContainer.children = [];
	          transitionContainer.kept = undefined;
	        },
	        onDragStart: function onDragStart(evt) {
	          this.context = this.getUnderlyingVm(evt.item);
	          evt.item._underlying_vm_ = this.clone(this.context.element);
	          draggingElement = evt.item;
	        },
	        onDragAdd: function onDragAdd(evt) {
	          var element = evt.item._underlying_vm_;
	          if (element === undefined) {
	            return;
	          }
	          removeNode(evt.item);
	          var newIndex = this.getVmIndex(evt.newIndex);
	          this.spliceList(newIndex, 0, element);
	          this.computeIndexes();
	          var added = { element: element, newIndex: newIndex };
	          this.emitChanges({ added: added });
	        },
	        onDragRemove: function onDragRemove(evt) {
	          insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);
	          if (this.isCloning) {
	            removeNode(evt.clone);
	            return;
	          }
	          var oldIndex = this.context.index;
	          this.spliceList(oldIndex, 1);
	          var removed = { element: this.context.element, oldIndex: oldIndex };
	          this.resetTransitionData(oldIndex);
	          this.emitChanges({ removed: removed });
	        },
	        onDragUpdate: function onDragUpdate(evt) {
	          removeNode(evt.item);
	          insertNodeAt(evt.from, evt.item, evt.oldIndex);
	          var oldIndex = this.context.index;
	          var newIndex = this.getVmIndex(evt.newIndex);
	          this.updatePosition(oldIndex, newIndex);
	          var moved = { element: this.context.element, oldIndex: oldIndex, newIndex: newIndex };
	          this.emitChanges({ moved: moved });
	        },
	        computeFutureIndex: function computeFutureIndex(relatedContext, evt) {
	          if (!relatedContext.element) {
	            return 0;
	          }
	          var domChildren = [].concat(_toConsumableArray(evt.to.children)).filter(function (el) {
	            return el.style['display'] !== 'none';
	          });
	          var currentDOMIndex = domChildren.indexOf(evt.related);
	          var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);
	          var draggedInList = domChildren.indexOf(draggingElement) != -1;
	          return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;
	        },
	        onDragMove: function onDragMove(evt, originalEvent) {
	          var onMove = this.move;
	          if (!onMove || !this.realList) {
	            return true;
	          }

	          var relatedContext = this.getRelatedContextFromMoveEvent(evt);
	          var draggedContext = this.context;
	          var futureIndex = this.computeFutureIndex(relatedContext, evt);
	          _extends(draggedContext, { futureIndex: futureIndex });
	          _extends(evt, { relatedContext: relatedContext, draggedContext: draggedContext });
	          return onMove(evt, originalEvent);
	        },
	        onDragEnd: function onDragEnd(evt) {
	          this.computeIndexes();
	          draggingElement = null;
	        }
	      }
	    };
	    return draggableComponent;
	  }

	  if (( false ? 'undefined' : _typeof(exports)) == "object") {
	    var Sortable = __webpack_require__(17);
	    module.exports = buildDraggable(Sortable);
	  } else if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(17)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Sortable) {
	      return buildDraggable(Sortable);
	    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (window && window.Vue && window.Sortable) {
	    var draggable = buildDraggable(window.Sortable);
	    Vue.component('draggable', draggable);
	  }
	})();

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;"use strict";

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	/**!
	 * Sortable
	 * @author	RubaXa   <trash@rubaxa.org>
	 * @license MIT
	 */

	(function sortableModule(factory) {
		"use strict";

		if (true) {
			!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else if (typeof module != "undefined" && typeof module.exports != "undefined") {
			module.exports = factory();
		} else {
			/* jshint sub:true */
			window["Sortable"] = factory();
		}
	})(function sortableFactory() {
		"use strict";

		if (typeof window == "undefined" || !window.document) {
			return function sortableError() {
				throw new Error("Sortable.js requires a window with a document");
			};
		}

		var dragEl,
		    parentEl,
		    ghostEl,
		    cloneEl,
		    rootEl,
		    nextEl,
		    lastDownEl,
		    scrollEl,
		    scrollParentEl,
		    scrollCustomFn,
		    lastEl,
		    lastCSS,
		    lastParentCSS,
		    oldIndex,
		    newIndex,
		    activeGroup,
		    putSortable,
		    autoScroll = {},
		    tapEvt,
		    touchEvt,
		    moved,


		/** @const */
		R_SPACE = /\s+/g,
		    R_FLOAT = /left|right|inline/,
		    expando = 'Sortable' + new Date().getTime(),
		    win = window,
		    document = win.document,
		    parseInt = win.parseInt,
		    $ = win.jQuery || win.Zepto,
		    Polymer = win.Polymer,
		    captureMode = false,
		    supportDraggable = !!('draggable' in document.createElement('div')),
		    supportCssPointerEvents = function (el) {
			// false when IE11
			if (!!navigator.userAgent.match(/Trident.*rv[ :]?11\./)) {
				return false;
			}
			el = document.createElement('x');
			el.style.cssText = 'pointer-events:auto';
			return el.style.pointerEvents === 'auto';
		}(),
		    _silent = false,
		    abs = Math.abs,
		    min = Math.min,
		    savedInputChecked = [],
		    touchDragOverListeners = [],
		    _autoScroll = _throttle(function ( /**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {
			// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
			if (rootEl && options.scroll) {
				var _this = rootEl[expando],
				    el,
				    rect,
				    sens = options.scrollSensitivity,
				    speed = options.scrollSpeed,
				    x = evt.clientX,
				    y = evt.clientY,
				    winWidth = window.innerWidth,
				    winHeight = window.innerHeight,
				    vx,
				    vy,
				    scrollOffsetX,
				    scrollOffsetY;

				// Delect scrollEl
				if (scrollParentEl !== rootEl) {
					scrollEl = options.scroll;
					scrollParentEl = rootEl;
					scrollCustomFn = options.scrollFn;

					if (scrollEl === true) {
						scrollEl = rootEl;

						do {
							if (scrollEl.offsetWidth < scrollEl.scrollWidth || scrollEl.offsetHeight < scrollEl.scrollHeight) {
								break;
							}
							/* jshint boss:true */
						} while (scrollEl = scrollEl.parentNode);
					}
				}

				if (scrollEl) {
					el = scrollEl;
					rect = scrollEl.getBoundingClientRect();
					vx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);
					vy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);
				}

				if (!(vx || vy)) {
					vx = (winWidth - x <= sens) - (x <= sens);
					vy = (winHeight - y <= sens) - (y <= sens);

					/* jshint expr:true */
					(vx || vy) && (el = win);
				}

				if (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {
					autoScroll.el = el;
					autoScroll.vx = vx;
					autoScroll.vy = vy;

					clearInterval(autoScroll.pid);

					if (el) {
						autoScroll.pid = setInterval(function () {
							scrollOffsetY = vy ? vy * speed : 0;
							scrollOffsetX = vx ? vx * speed : 0;

							if ('function' === typeof scrollCustomFn) {
								return scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt);
							}

							if (el === win) {
								win.scrollTo(win.pageXOffset + scrollOffsetX, win.pageYOffset + scrollOffsetY);
							} else {
								el.scrollTop += scrollOffsetY;
								el.scrollLeft += scrollOffsetX;
							}
						}, 24);
					}
				}
			}
		}, 30),
		    _prepareGroup = function _prepareGroup(options) {
			function toFn(value, pull) {
				if (value === void 0 || value === true) {
					value = group.name;
				}

				if (typeof value === 'function') {
					return value;
				} else {
					return function (to, from) {
						var fromGroup = from.options.group.name;

						return pull ? value : value && (value.join ? value.indexOf(fromGroup) > -1 : fromGroup == value);
					};
				}
			}

			var group = {};
			var originalGroup = options.group;

			if (!originalGroup || (typeof originalGroup === "undefined" ? "undefined" : _typeof(originalGroup)) != 'object') {
				originalGroup = { name: originalGroup };
			}

			group.name = originalGroup.name;
			group.checkPull = toFn(originalGroup.pull, true);
			group.checkPut = toFn(originalGroup.put);
			group.revertClone = originalGroup.revertClone;

			options.group = group;
		};

		/**
	  * @class  Sortable
	  * @param  {HTMLElement}  el
	  * @param  {Object}       [options]
	  */
		function Sortable(el, options) {
			if (!(el && el.nodeType && el.nodeType === 1)) {
				throw 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);
			}

			this.el = el; // root element
			this.options = options = _extend({}, options);

			// Export instance
			el[expando] = this;

			// Default options
			var defaults = {
				group: Math.random(),
				sort: true,
				disabled: false,
				store: null,
				handle: null,
				scroll: true,
				scrollSensitivity: 30,
				scrollSpeed: 10,
				draggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',
				ghostClass: 'sortable-ghost',
				chosenClass: 'sortable-chosen',
				dragClass: 'sortable-drag',
				ignore: 'a, img',
				filter: null,
				preventOnFilter: true,
				animation: 0,
				setData: function setData(dataTransfer, dragEl) {
					dataTransfer.setData('Text', dragEl.textContent);
				},
				dropBubble: false,
				dragoverBubble: false,
				dataIdAttr: 'data-id',
				delay: 0,
				forceFallback: false,
				fallbackClass: 'sortable-fallback',
				fallbackOnBody: false,
				fallbackTolerance: 0,
				fallbackOffset: { x: 0, y: 0 }
			};

			// Set default options
			for (var name in defaults) {
				!(name in options) && (options[name] = defaults[name]);
			}

			_prepareGroup(options);

			// Bind all private methods
			for (var fn in this) {
				if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
					this[fn] = this[fn].bind(this);
				}
			}

			// Setup drag mode
			this.nativeDraggable = options.forceFallback ? false : supportDraggable;

			// Bind events
			_on(el, 'mousedown', this._onTapStart);
			_on(el, 'touchstart', this._onTapStart);
			_on(el, 'pointerdown', this._onTapStart);

			if (this.nativeDraggable) {
				_on(el, 'dragover', this);
				_on(el, 'dragenter', this);
			}

			touchDragOverListeners.push(this._onDragOver);

			// Restore sorting
			options.store && this.sort(options.store.get(this));
		}

		Sortable.prototype = /** @lends Sortable.prototype */{
			constructor: Sortable,

			_onTapStart: function _onTapStart( /** Event|TouchEvent */evt) {
				var _this = this,
				    el = this.el,
				    options = this.options,
				    preventOnFilter = options.preventOnFilter,
				    type = evt.type,
				    touch = evt.touches && evt.touches[0],
				    target = (touch || evt).target,
				    originalTarget = evt.target.shadowRoot && evt.path[0] || target,
				    filter = options.filter,
				    startIndex;

				_saveInputCheckedState(el);

				// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.
				if (dragEl) {
					return;
				}

				if (type === 'mousedown' && evt.button !== 0 || options.disabled) {
					return; // only left button or enabled
				}

				target = _closest(target, options.draggable, el);

				if (!target) {
					return;
				}

				if (lastDownEl === target) {
					// Ignoring duplicate `down`
					return;
				}

				// Get the index of the dragged element within its parent
				startIndex = _index(target, options.draggable);

				// Check filter
				if (typeof filter === 'function') {
					if (filter.call(this, evt, target, this)) {
						_dispatchEvent(_this, originalTarget, 'filter', target, el, startIndex);
						preventOnFilter && evt.preventDefault();
						return; // cancel dnd
					}
				} else if (filter) {
					filter = filter.split(',').some(function (criteria) {
						criteria = _closest(originalTarget, criteria.trim(), el);

						if (criteria) {
							_dispatchEvent(_this, criteria, 'filter', target, el, startIndex);
							return true;
						}
					});

					if (filter) {
						preventOnFilter && evt.preventDefault();
						return; // cancel dnd
					}
				}

				if (options.handle && !_closest(originalTarget, options.handle, el)) {
					return;
				}

				// Prepare `dragstart`
				this._prepareDragStart(evt, touch, target, startIndex);
			},

			_prepareDragStart: function _prepareDragStart( /** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex) {
				var _this = this,
				    el = _this.el,
				    options = _this.options,
				    ownerDocument = el.ownerDocument,
				    dragStartFn;

				if (target && !dragEl && target.parentNode === el) {
					tapEvt = evt;

					rootEl = el;
					dragEl = target;
					parentEl = dragEl.parentNode;
					nextEl = dragEl.nextSibling;
					lastDownEl = target;
					activeGroup = options.group;
					oldIndex = startIndex;

					this._lastX = (touch || evt).clientX;
					this._lastY = (touch || evt).clientY;

					dragEl.style['will-change'] = 'transform';

					dragStartFn = function dragStartFn() {
						// Delayed drag has been triggered
						// we can re-enable the events: touchmove/mousemove
						_this._disableDelayedDrag();

						// Make the element draggable
						dragEl.draggable = _this.nativeDraggable;

						// Chosen item
						_toggleClass(dragEl, options.chosenClass, true);

						// Bind the events: dragstart/dragend
						_this._triggerDragStart(evt, touch);

						// Drag start event
						_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, oldIndex);
					};

					// Disable "draggable"
					options.ignore.split(',').forEach(function (criteria) {
						_find(dragEl, criteria.trim(), _disableDraggable);
					});

					_on(ownerDocument, 'mouseup', _this._onDrop);
					_on(ownerDocument, 'touchend', _this._onDrop);
					_on(ownerDocument, 'touchcancel', _this._onDrop);
					_on(ownerDocument, 'pointercancel', _this._onDrop);
					_on(ownerDocument, 'selectstart', _this);

					if (options.delay) {
						// If the user moves the pointer or let go the click or touch
						// before the delay has been reached:
						// disable the delayed drag
						_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
						_on(ownerDocument, 'touchend', _this._disableDelayedDrag);
						_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
						_on(ownerDocument, 'mousemove', _this._disableDelayedDrag);
						_on(ownerDocument, 'touchmove', _this._disableDelayedDrag);
						_on(ownerDocument, 'pointermove', _this._disableDelayedDrag);

						_this._dragStartTimer = setTimeout(dragStartFn, options.delay);
					} else {
						dragStartFn();
					}
				}
			},

			_disableDelayedDrag: function _disableDelayedDrag() {
				var ownerDocument = this.el.ownerDocument;

				clearTimeout(this._dragStartTimer);
				_off(ownerDocument, 'mouseup', this._disableDelayedDrag);
				_off(ownerDocument, 'touchend', this._disableDelayedDrag);
				_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
				_off(ownerDocument, 'mousemove', this._disableDelayedDrag);
				_off(ownerDocument, 'touchmove', this._disableDelayedDrag);
				_off(ownerDocument, 'pointermove', this._disableDelayedDrag);
			},

			_triggerDragStart: function _triggerDragStart( /** Event */evt, /** Touch */touch) {
				touch = touch || (evt.pointerType == 'touch' ? evt : null);

				if (touch) {
					// Touch device support
					tapEvt = {
						target: dragEl,
						clientX: touch.clientX,
						clientY: touch.clientY
					};

					this._onDragStart(tapEvt, 'touch');
				} else if (!this.nativeDraggable) {
					this._onDragStart(tapEvt, true);
				} else {
					_on(dragEl, 'dragend', this);
					_on(rootEl, 'dragstart', this._onDragStart);
				}

				try {
					if (document.selection) {
						// Timeout neccessary for IE9
						setTimeout(function () {
							document.selection.empty();
						});
					} else {
						window.getSelection().removeAllRanges();
					}
				} catch (err) {}
			},

			_dragStarted: function _dragStarted() {
				if (rootEl && dragEl) {
					var options = this.options;

					// Apply effect
					_toggleClass(dragEl, options.ghostClass, true);
					_toggleClass(dragEl, options.dragClass, false);

					Sortable.active = this;

					// Drag start event
					_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);
				} else {
					this._nulling();
				}
			},

			_emulateDragOver: function _emulateDragOver() {
				if (touchEvt) {
					if (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {
						return;
					}

					this._lastX = touchEvt.clientX;
					this._lastY = touchEvt.clientY;

					if (!supportCssPointerEvents) {
						_css(ghostEl, 'display', 'none');
					}

					var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),
					    parent = target,
					    i = touchDragOverListeners.length;

					if (parent) {
						do {
							if (parent[expando]) {
								while (i--) {
									touchDragOverListeners[i]({
										clientX: touchEvt.clientX,
										clientY: touchEvt.clientY,
										target: target,
										rootEl: parent
									});
								}

								break;
							}

							target = parent; // store last element
						}
						/* jshint boss:true */
						while (parent = parent.parentNode);
					}

					if (!supportCssPointerEvents) {
						_css(ghostEl, 'display', '');
					}
				}
			},

			_onTouchMove: function _onTouchMove( /**TouchEvent*/evt) {
				if (tapEvt) {
					var options = this.options,
					    fallbackTolerance = options.fallbackTolerance,
					    fallbackOffset = options.fallbackOffset,
					    touch = evt.touches ? evt.touches[0] : evt,
					    dx = touch.clientX - tapEvt.clientX + fallbackOffset.x,
					    dy = touch.clientY - tapEvt.clientY + fallbackOffset.y,
					    translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';

					// only set the status to dragging, when we are actually dragging
					if (!Sortable.active) {
						if (fallbackTolerance && min(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance) {
							return;
						}

						this._dragStarted();
					}

					// as well as creating the ghost element on the document body
					this._appendGhost();

					moved = true;
					touchEvt = touch;

					_css(ghostEl, 'webkitTransform', translate3d);
					_css(ghostEl, 'mozTransform', translate3d);
					_css(ghostEl, 'msTransform', translate3d);
					_css(ghostEl, 'transform', translate3d);

					evt.preventDefault();
				}
			},

			_appendGhost: function _appendGhost() {
				if (!ghostEl) {
					var rect = dragEl.getBoundingClientRect(),
					    css = _css(dragEl),
					    options = this.options,
					    ghostRect;

					ghostEl = dragEl.cloneNode(true);

					_toggleClass(ghostEl, options.ghostClass, false);
					_toggleClass(ghostEl, options.fallbackClass, true);
					_toggleClass(ghostEl, options.dragClass, true);

					_css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));
					_css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));
					_css(ghostEl, 'width', rect.width);
					_css(ghostEl, 'height', rect.height);
					_css(ghostEl, 'opacity', '0.8');
					_css(ghostEl, 'position', 'fixed');
					_css(ghostEl, 'zIndex', '100000');
					_css(ghostEl, 'pointerEvents', 'none');

					options.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);

					// Fixing dimensions.
					ghostRect = ghostEl.getBoundingClientRect();
					_css(ghostEl, 'width', rect.width * 2 - ghostRect.width);
					_css(ghostEl, 'height', rect.height * 2 - ghostRect.height);
				}
			},

			_onDragStart: function _onDragStart( /**Event*/evt, /**boolean*/useFallback) {
				var dataTransfer = evt.dataTransfer,
				    options = this.options;

				this._offUpEvents();

				if (activeGroup.checkPull(this, this, dragEl, evt)) {
					cloneEl = _clone(dragEl);

					cloneEl.draggable = false;
					cloneEl.style['will-change'] = '';

					_css(cloneEl, 'display', 'none');
					_toggleClass(cloneEl, this.options.chosenClass, false);

					rootEl.insertBefore(cloneEl, dragEl);
					_dispatchEvent(this, rootEl, 'clone', dragEl);
				}

				_toggleClass(dragEl, options.dragClass, true);

				if (useFallback) {
					if (useFallback === 'touch') {
						// Bind touch events
						_on(document, 'touchmove', this._onTouchMove);
						_on(document, 'touchend', this._onDrop);
						_on(document, 'touchcancel', this._onDrop);
						_on(document, 'pointermove', this._onTouchMove);
						_on(document, 'pointerup', this._onDrop);
					} else {
						// Old brwoser
						_on(document, 'mousemove', this._onTouchMove);
						_on(document, 'mouseup', this._onDrop);
					}

					this._loopId = setInterval(this._emulateDragOver, 50);
				} else {
					if (dataTransfer) {
						dataTransfer.effectAllowed = 'move';
						options.setData && options.setData.call(this, dataTransfer, dragEl);
					}

					_on(document, 'drop', this);
					setTimeout(this._dragStarted, 0);
				}
			},

			_onDragOver: function _onDragOver( /**Event*/evt) {
				var el = this.el,
				    target,
				    dragRect,
				    targetRect,
				    revert,
				    options = this.options,
				    group = options.group,
				    activeSortable = Sortable.active,
				    isOwner = activeGroup === group,
				    isMovingBetweenSortable = false,
				    canSort = options.sort;

				if (evt.preventDefault !== void 0) {
					evt.preventDefault();
					!options.dragoverBubble && evt.stopPropagation();
				}

				if (dragEl.animated) {
					return;
				}

				moved = true;

				if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list
				: putSortable === this || (activeSortable.lastPullMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt)) && (evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback
				) {
						// Smart auto-scrolling
						_autoScroll(evt, options, this.el);

						if (_silent) {
							return;
						}

						target = _closest(evt.target, options.draggable, el);
						dragRect = dragEl.getBoundingClientRect();

						if (putSortable !== this) {
							putSortable = this;
							isMovingBetweenSortable = true;
						}

						if (revert) {
							_cloneHide(activeSortable, true);
							parentEl = rootEl; // actualization

							if (cloneEl || nextEl) {
								rootEl.insertBefore(dragEl, cloneEl || nextEl);
							} else if (!canSort) {
								rootEl.appendChild(dragEl);
							}

							return;
						}

						if (el.children.length === 0 || el.children[0] === ghostEl || el === evt.target && _ghostIsLast(el, evt)) {
							//assign target only if condition is true
							if (el.children.length !== 0 && el.children[0] !== ghostEl && el === evt.target) {
								target = el.lastElementChild;
							}

							if (target) {
								if (target.animated) {
									return;
								}

								targetRect = target.getBoundingClientRect();
							}

							_cloneHide(activeSortable, isOwner);

							if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt) !== false) {
								if (!dragEl.contains(el)) {
									el.appendChild(dragEl);
									parentEl = el; // actualization
								}

								this._animate(dragRect, dragEl);
								target && this._animate(targetRect, target);
							}
						} else if (target && !target.animated && target !== dragEl && target.parentNode[expando] !== void 0) {
							if (lastEl !== target) {
								lastEl = target;
								lastCSS = _css(target);
								lastParentCSS = _css(target.parentNode);
							}

							targetRect = target.getBoundingClientRect();

							var width = targetRect.right - targetRect.left,
							    height = targetRect.bottom - targetRect.top,
							    floating = R_FLOAT.test(lastCSS.cssFloat + lastCSS.display) || lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0,
							    isWide = target.offsetWidth > dragEl.offsetWidth,
							    isLong = target.offsetHeight > dragEl.offsetHeight,
							    halfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,
							    nextSibling = target.nextElementSibling,
							    after = false;

							if (floating) {
								var elTop = dragEl.offsetTop,
								    tgTop = target.offsetTop;

								if (elTop === tgTop) {
									after = target.previousElementSibling === dragEl && !isWide || halfway && isWide;
								} else if (target.previousElementSibling === dragEl || dragEl.previousElementSibling === target) {
									after = (evt.clientY - targetRect.top) / height > 0.5;
								} else {
									after = tgTop > elTop;
								}
							} else if (!isMovingBetweenSortable) {
								after = nextSibling !== dragEl && !isLong || halfway && isLong;
							}

							var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

							if (moveVector !== false) {
								if (moveVector === 1 || moveVector === -1) {
									after = moveVector === 1;
								}

								_silent = true;
								setTimeout(_unsilent, 30);

								_cloneHide(activeSortable, isOwner);

								if (!dragEl.contains(el)) {
									if (after && !nextSibling) {
										el.appendChild(dragEl);
									} else {
										target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
									}
								}

								parentEl = dragEl.parentNode; // actualization

								this._animate(dragRect, dragEl);
								this._animate(targetRect, target);
							}
						}
					}
			},

			_animate: function _animate(prevRect, target) {
				var ms = this.options.animation;

				if (ms) {
					var currentRect = target.getBoundingClientRect();

					if (prevRect.nodeType === 1) {
						prevRect = prevRect.getBoundingClientRect();
					}

					_css(target, 'transition', 'none');
					_css(target, 'transform', 'translate3d(' + (prevRect.left - currentRect.left) + 'px,' + (prevRect.top - currentRect.top) + 'px,0)');

					target.offsetWidth; // repaint

					_css(target, 'transition', 'all ' + ms + 'ms');
					_css(target, 'transform', 'translate3d(0,0,0)');

					clearTimeout(target.animated);
					target.animated = setTimeout(function () {
						_css(target, 'transition', '');
						_css(target, 'transform', '');
						target.animated = false;
					}, ms);
				}
			},

			_offUpEvents: function _offUpEvents() {
				var ownerDocument = this.el.ownerDocument;

				_off(document, 'touchmove', this._onTouchMove);
				_off(document, 'pointermove', this._onTouchMove);
				_off(ownerDocument, 'mouseup', this._onDrop);
				_off(ownerDocument, 'touchend', this._onDrop);
				_off(ownerDocument, 'pointerup', this._onDrop);
				_off(ownerDocument, 'touchcancel', this._onDrop);
				_off(ownerDocument, 'pointercancel', this._onDrop);
				_off(ownerDocument, 'selectstart', this);
			},

			_onDrop: function _onDrop( /**Event*/evt) {
				var el = this.el,
				    options = this.options;

				clearInterval(this._loopId);
				clearInterval(autoScroll.pid);
				clearTimeout(this._dragStartTimer);

				// Unbind events
				_off(document, 'mousemove', this._onTouchMove);

				if (this.nativeDraggable) {
					_off(document, 'drop', this);
					_off(el, 'dragstart', this._onDragStart);
				}

				this._offUpEvents();

				if (evt) {
					if (moved) {
						evt.preventDefault();
						!options.dropBubble && evt.stopPropagation();
					}

					ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

					if (rootEl === parentEl || Sortable.active.lastPullMode !== 'clone') {
						// Remove clone
						cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
					}

					if (dragEl) {
						if (this.nativeDraggable) {
							_off(dragEl, 'dragend', this);
						}

						_disableDraggable(dragEl);
						dragEl.style['will-change'] = '';

						// Remove class's
						_toggleClass(dragEl, this.options.ghostClass, false);
						_toggleClass(dragEl, this.options.chosenClass, false);

						// Drag stop event
						_dispatchEvent(this, rootEl, 'unchoose', dragEl, rootEl, oldIndex);

						if (rootEl !== parentEl) {
							newIndex = _index(dragEl, options.draggable);

							if (newIndex >= 0) {
								// Add event
								_dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);

								// Remove event
								_dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);

								// drag from one list and drop into another
								_dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);
								_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);
							}
						} else {
							if (dragEl.nextSibling !== nextEl) {
								// Get the index of the dragged element within its parent
								newIndex = _index(dragEl, options.draggable);

								if (newIndex >= 0) {
									// drag & drop within the same list
									_dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);
									_dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);
								}
							}
						}

						if (Sortable.active) {
							/* jshint eqnull:true */
							if (newIndex == null || newIndex === -1) {
								newIndex = oldIndex;
							}

							_dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);

							// Save sorting
							this.save();
						}
					}
				}

				this._nulling();
			},

			_nulling: function _nulling() {
				rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = scrollEl = scrollParentEl = tapEvt = touchEvt = moved = newIndex = lastEl = lastCSS = putSortable = activeGroup = Sortable.active = null;

				savedInputChecked.forEach(function (el) {
					el.checked = true;
				});
				savedInputChecked.length = 0;
			},

			handleEvent: function handleEvent( /**Event*/evt) {
				switch (evt.type) {
					case 'drop':
					case 'dragend':
						this._onDrop(evt);
						break;

					case 'dragover':
					case 'dragenter':
						if (dragEl) {
							this._onDragOver(evt);
							_globalDragOver(evt);
						}
						break;

					case 'selectstart':
						evt.preventDefault();
						break;
				}
			},

			/**
	   * Serializes the item into an array of string.
	   * @returns {String[]}
	   */
			toArray: function toArray() {
				var order = [],
				    el,
				    children = this.el.children,
				    i = 0,
				    n = children.length,
				    options = this.options;

				for (; i < n; i++) {
					el = children[i];
					if (_closest(el, options.draggable, this.el)) {
						order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
					}
				}

				return order;
			},

			/**
	   * Sorts the elements according to the array.
	   * @param  {String[]}  order  order of the items
	   */
			sort: function sort(order) {
				var items = {},
				    rootEl = this.el;

				this.toArray().forEach(function (id, i) {
					var el = rootEl.children[i];

					if (_closest(el, this.options.draggable, rootEl)) {
						items[id] = el;
					}
				}, this);

				order.forEach(function (id) {
					if (items[id]) {
						rootEl.removeChild(items[id]);
						rootEl.appendChild(items[id]);
					}
				});
			},

			/**
	   * Save the current sorting
	   */
			save: function save() {
				var store = this.options.store;
				store && store.set(this);
			},

			/**
	   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
	   * @param   {HTMLElement}  el
	   * @param   {String}       [selector]  default: `options.draggable`
	   * @returns {HTMLElement|null}
	   */
			closest: function closest(el, selector) {
				return _closest(el, selector || this.options.draggable, this.el);
			},

			/**
	   * Set/get option
	   * @param   {string} name
	   * @param   {*}      [value]
	   * @returns {*}
	   */
			option: function option(name, value) {
				var options = this.options;

				if (value === void 0) {
					return options[name];
				} else {
					options[name] = value;

					if (name === 'group') {
						_prepareGroup(options);
					}
				}
			},

			/**
	   * Destroy
	   */
			destroy: function destroy() {
				var el = this.el;

				el[expando] = null;

				_off(el, 'mousedown', this._onTapStart);
				_off(el, 'touchstart', this._onTapStart);
				_off(el, 'pointerdown', this._onTapStart);

				if (this.nativeDraggable) {
					_off(el, 'dragover', this);
					_off(el, 'dragenter', this);
				}

				// Remove draggable attributes
				Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
					el.removeAttribute('draggable');
				});

				touchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);

				this._onDrop();

				this.el = el = null;
			}
		};

		function _cloneHide(sortable, state) {
			if (sortable.lastPullMode !== 'clone') {
				state = true;
			}

			if (cloneEl && cloneEl.state !== state) {
				_css(cloneEl, 'display', state ? 'none' : '');

				if (!state) {
					if (cloneEl.state) {
						if (sortable.options.group.revertClone) {
							rootEl.insertBefore(cloneEl, nextEl);
							sortable._animate(dragEl, cloneEl);
						} else {
							rootEl.insertBefore(cloneEl, dragEl);
						}
					}
				}

				cloneEl.state = state;
			}
		}

		function _closest( /**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {
			if (el) {
				ctx = ctx || document;

				do {
					if (selector === '>*' && el.parentNode === ctx || _matches(el, selector)) {
						return el;
					}
					/* jshint boss:true */
				} while (el = _getParentOrHost(el));
			}

			return null;
		}

		function _getParentOrHost(el) {
			var parent = el.host;

			return parent && parent.nodeType ? parent : el.parentNode;
		}

		function _globalDragOver( /**Event*/evt) {
			if (evt.dataTransfer) {
				evt.dataTransfer.dropEffect = 'move';
			}
			evt.preventDefault();
		}

		function _on(el, event, fn) {
			el.addEventListener(event, fn, captureMode);
		}

		function _off(el, event, fn) {
			el.removeEventListener(event, fn, captureMode);
		}

		function _toggleClass(el, name, state) {
			if (el) {
				if (el.classList) {
					el.classList[state ? 'add' : 'remove'](name);
				} else {
					var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
					el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
				}
			}
		}

		function _css(el, prop, val) {
			var style = el && el.style;

			if (style) {
				if (val === void 0) {
					if (document.defaultView && document.defaultView.getComputedStyle) {
						val = document.defaultView.getComputedStyle(el, '');
					} else if (el.currentStyle) {
						val = el.currentStyle;
					}

					return prop === void 0 ? val : val[prop];
				} else {
					if (!(prop in style)) {
						prop = '-webkit-' + prop;
					}

					style[prop] = val + (typeof val === 'string' ? '' : 'px');
				}
			}
		}

		function _find(ctx, tagName, iterator) {
			if (ctx) {
				var list = ctx.getElementsByTagName(tagName),
				    i = 0,
				    n = list.length;

				if (iterator) {
					for (; i < n; i++) {
						iterator(list[i], i);
					}
				}

				return list;
			}

			return [];
		}

		function _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {
			sortable = sortable || rootEl[expando];

			var evt = document.createEvent('Event'),
			    options = sortable.options,
			    onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);

			evt.initEvent(name, true, true);

			evt.to = rootEl;
			evt.from = fromEl || rootEl;
			evt.item = targetEl || rootEl;
			evt.clone = cloneEl;

			evt.oldIndex = startIndex;
			evt.newIndex = newIndex;

			rootEl.dispatchEvent(evt);

			if (options[onName]) {
				options[onName].call(sortable, evt);
			}
		}

		function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {
			var evt,
			    sortable = fromEl[expando],
			    onMoveFn = sortable.options.onMove,
			    retVal;

			evt = document.createEvent('Event');
			evt.initEvent('move', true, true);

			evt.to = toEl;
			evt.from = fromEl;
			evt.dragged = dragEl;
			evt.draggedRect = dragRect;
			evt.related = targetEl || toEl;
			evt.relatedRect = targetRect || toEl.getBoundingClientRect();
			evt.willInsertAfter = willInsertAfter;

			fromEl.dispatchEvent(evt);

			if (onMoveFn) {
				retVal = onMoveFn.call(sortable, evt, originalEvt);
			}

			return retVal;
		}

		function _disableDraggable(el) {
			el.draggable = false;
		}

		function _unsilent() {
			_silent = false;
		}

		/** @returns {HTMLElement|false} */
		function _ghostIsLast(el, evt) {
			var lastEl = el.lastElementChild,
			    rect = lastEl.getBoundingClientRect();

			// 5 — min delta
			// abs — нельзя добавлять, а то глюки при наведении сверху
			return evt.clientY - (rect.top + rect.height) > 5 || evt.clientX - (rect.left + rect.width) > 5;
		}

		/**
	  * Generate id
	  * @param   {HTMLElement} el
	  * @returns {String}
	  * @private
	  */
		function _generateId(el) {
			var str = el.tagName + el.className + el.src + el.href + el.textContent,
			    i = str.length,
			    sum = 0;

			while (i--) {
				sum += str.charCodeAt(i);
			}

			return sum.toString(36);
		}

		/**
	  * Returns the index of an element within its parent for a selected set of
	  * elements
	  * @param  {HTMLElement} el
	  * @param  {selector} selector
	  * @return {number}
	  */
		function _index(el, selector) {
			var index = 0;

			if (!el || !el.parentNode) {
				return -1;
			}

			while (el && (el = el.previousElementSibling)) {
				if (el.nodeName.toUpperCase() !== 'TEMPLATE' && (selector === '>*' || _matches(el, selector))) {
					index++;
				}
			}

			return index;
		}

		function _matches( /**HTMLElement*/el, /**String*/selector) {
			if (el) {
				selector = selector.split('.');

				var tag = selector.shift().toUpperCase(),
				    re = new RegExp('\\s(' + selector.join('|') + ')(?=\\s)', 'g');

				return (tag === '' || el.nodeName.toUpperCase() == tag) && (!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length);
			}

			return false;
		}

		function _throttle(callback, ms) {
			var args, _this;

			return function () {
				if (args === void 0) {
					args = arguments;
					_this = this;

					setTimeout(function () {
						if (args.length === 1) {
							callback.call(_this, args[0]);
						} else {
							callback.apply(_this, args);
						}

						args = void 0;
					}, ms);
				}
			};
		}

		function _extend(dst, src) {
			if (dst && src) {
				for (var key in src) {
					if (src.hasOwnProperty(key)) {
						dst[key] = src[key];
					}
				}
			}

			return dst;
		}

		function _clone(el) {
			return $ ? $(el).clone(true)[0] : Polymer && Polymer.dom ? Polymer.dom(el).cloneNode(true) : el.cloneNode(true);
		}

		function _saveInputCheckedState(root) {
			var inputs = root.getElementsByTagName('input');
			var idx = inputs.length;

			while (idx--) {
				var el = inputs[idx];
				el.checked && savedInputChecked.push(el);
			}
		}

		// Fixed #973: 
		_on(document, 'touchmove', function (evt) {
			if (Sortable.active) {
				evt.preventDefault();
			}
		});

		try {
			window.addEventListener('test', null, Object.defineProperty({}, 'passive', {
				get: function get() {
					captureMode = {
						capture: false,
						passive: false
					};
				}
			}));
		} catch (err) {}

		// Export utils
		Sortable.utils = {
			on: _on,
			off: _off,
			css: _css,
			find: _find,
			is: function is(el, selector) {
				return !!_closest(el, selector, el);
			},
			extend: _extend,
			throttle: _throttle,
			closest: _closest,
			toggleClass: _toggleClass,
			clone: _clone,
			index: _index
		};

		/**
	  * Create sortable instance
	  * @param {HTMLElement}  el
	  * @param {Object}      [options]
	  */
		Sortable.create = function (el, options) {
			return new Sortable(el, options);
		};

		// Export
		Sortable.version = '1.6.0';
		return Sortable;
	});

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(19)
	__vue_script__ = __webpack_require__(21)
	__vue_template__ = __webpack_require__(22)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\banner_part\\banner.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(20);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6881119e&file=banner.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./banner.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6881119e&file=banner.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./banner.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .banner_part {\r\n        position: relative;\r\n        width: 100%;\r\n        font-size: 0;\r\n    }\r\n    .banner-img {\r\n        width: 375px;\r\n        height: 140px;\r\n        line-height: 140px;\r\n        text-align: center;\r\n        background-color: #a9ddff;\r\n    }\r\n    .banner-img-first{\r\n        width: 375px;\r\n        height: 140px;\r\n    }\r\n    .banner-img img {\r\n        width: 24px;\r\n        height: 20px;\r\n        margin-left: -12px;\r\n        position: absolute;\r\n        top: 40px;\r\n        left: 50%;\r\n    }\r\n    .pagination {\r\n        position: absolute;\r\n        bottom: 10px;\r\n        left: 48%;\r\n        margin: 0;\r\n    }\r\n    .pagination-one {\r\n        display: inline-block;\r\n        width: 6px;\r\n        height: 6px;\r\n        border-radius: 50%;\r\n        background-color: #ffffff;\r\n        margin-right: 6px;\r\n    }\r\n    .pagination-two {\r\n        display: inline-block;\r\n        width: 6px;\r\n        height: 6px;\r\n        border-radius: 50%;\r\n        opacity: 0.45;\r\n        background-color: #ffffff;\r\n    }\r\n    .banner-tip-text {\r\n        position: absolute;\r\n        width: 80px;\r\n        height: 25px;\r\n        line-height: 25px;\r\n        font-size: 18px;\r\n        letter-spacing: 4px;\r\n        text-align: center;\r\n        color: #ffffff;\r\n        top: 70px;\r\n        left: 50%;\r\n        margin-left: -40px;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    props: ['banner_part'],
	    data: function data() {
	        return {
	            img_url: ''
	        };
	    },
	    created: function created() {
	        this.set_img(this.banner_part.list);
	    },
	    methods: {
	        set_img: function set_img(item_data) {
	            if (item_data.length > 0) {
	                if (item_data[0].img_url_compressed != "" && typeof item_data[0].img_url_compressed != 'undefined') {
	                    this.img_url = item_data[0].img_url_compressed;
	                } else if (item_data[0].image_url != "" && typeof item_data[0].image_url != 'undefined') {
	                    this.img_url = item_data[0].image_url;
	                } else {
	                    this.img_url = '';
	                }
	            } else {
	                this.img_url = '';
	            }
	        }
	    },
	    watch: {
	        banner_part: {
	            handler: function handler(cur, old) {
	                this.set_img(cur.list);
	            },

	            deep: true
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .banner_part {
	    //         position: relative;
	    //         width: 100%;
	    //         font-size: 0;
	    //     }
	    //     .banner-img {
	    //         width: 375px;
	    //         height: 140px;
	    //         line-height: 140px;
	    //         text-align: center;
	    //         background-color: #a9ddff;
	    //     }
	    //     .banner-img-first{
	    //         width: 375px;
	    //         height: 140px;
	    //     }
	    //     .banner-img img {
	    //         width: 24px;
	    //         height: 20px;
	    //         margin-left: -12px;
	    //         position: absolute;
	    //         top: 40px;
	    //         left: 50%;
	    //     }
	    //     .pagination {
	    //         position: absolute;
	    //         bottom: 10px;
	    //         left: 48%;
	    //         margin: 0;
	    //     }
	    //     .pagination-one {
	    //         display: inline-block;
	    //         width: 6px;
	    //         height: 6px;
	    //         border-radius: 50%;
	    //         background-color: #ffffff;
	    //         margin-right: 6px;
	    //     }
	    //     .pagination-two {
	    //         display: inline-block;
	    //         width: 6px;
	    //         height: 6px;
	    //         border-radius: 50%;
	    //         opacity: 0.45;
	    //         background-color: #ffffff;
	    //     }
	    //     .banner-tip-text {
	    //         position: absolute;
	    //         width: 80px;
	    //         height: 25px;
	    //         line-height: 25px;
	    //         font-size: 18px;
	    //         letter-spacing: 4px;
	    //         text-align: center;
	    //         color: #ffffff;
	    //         top: 70px;
	    //         left: 50%;
	    //         margin-left: -40px;
	    //     }
	    // </style>

	}; // <template>
	//     <div class="banner_part">
	//         <div class="banner-img" v-if="img_url == ''">
	//             <img src="/images/admin/shopDiy/icon-pic@2x.png"/>
	//             <div class="banner-tip-text">轮播图</div>
	//         </div>
	//         <img v-if="img_url != ''" :src="img_url" class="banner-img-first">
	//         <div class="pagination">
	//             <div class="pagination-one"></div>
	//             <div class="pagination-two"></div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 22 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"banner_part\">\r\n        <div class=\"banner-img\" v-if=\"img_url == ''\">\r\n            <img src=\"/images/admin/shopDiy/icon-pic@2x.png\"/>\r\n            <div class=\"banner-tip-text\">轮播图</div>\r\n        </div>\r\n        <img v-if=\"img_url != ''\" :src=\"img_url\" class=\"banner-img-first\">\r\n        <div class=\"pagination\">\r\n            <div class=\"pagination-one\"></div>\r\n            <div class=\"pagination-two\"></div>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(24)
	__vue_script__ = __webpack_require__(26)
	__vue_template__ = __webpack_require__(27)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\category_part\\category.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(25);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-c349df56&file=category.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./category.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-c349df56&file=category.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./category.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .category_part {\r\n        height: 80px;\r\n        width: 100%;\r\n        background-color: #fff;\r\n        margin-bottom: 5px;\r\n        font-size: 0;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n    .category_tab_inner {\r\n        float: left;\r\n        width: 25%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n        padding: 0;\r\n        font-size: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    .category_tab {\r\n        margin-top: 18px;\r\n    }\r\n    .category_tab_icon_box {\r\n        text-align: center;\r\n    }\r\n    .category_tab_icon_box>img{\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n    .category_tab_hint {\r\n        width: 100%;\r\n        height: 17px;\r\n        margin-top: 5px;\r\n        font-size: 12px;\r\n        color: #888888;\r\n        text-align: center;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 26 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class="category_part">
	//         <div class="category_tab_inner" v-for="item in category_part.list">
	//             <div class="category_tab">
	//                 <div class="category_tab_icon_box">
	//                     <img :src="item.icon_url"/>
	//                 </div>
	//                 <div class="category_tab_hint">{{item.category_name}}</div>
	//             </div>
	//         </div>
	//         <div style="clear: both"></div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['category_part'],
	    data: function data() {
	        return {};
	    },
	    methods: {}
	    // </script>
	    //
	    // <style>
	    //     .category_part {
	    //         height: 80px;
	    //         width: 100%;
	    //         background-color: #fff;
	    //         margin-bottom: 5px;
	    //         font-size: 0;
	    //         box-sizing: border-box;
	    //         border: solid 1px #eeeeee;
	    //     }
	    //     .category_tab_inner {
	    //         float: left;
	    //         width: 25%;
	    //         height: 100%;
	    //         overflow: hidden;
	    //         padding: 0;
	    //         font-size: 0;
	    //         box-sizing: border-box;
	    //     }
	    //     .category_tab {
	    //         margin-top: 18px;
	    //     }
	    //     .category_tab_icon_box {
	    //         text-align: center;
	    //     }
	    //     .category_tab_icon_box>img{
	    //         width: 24px;
	    //         height: 24px;
	    //     }
	    //     .category_tab_hint {
	    //         width: 100%;
	    //         height: 17px;
	    //         margin-top: 5px;
	    //         font-size: 12px;
	    //         color: #888888;
	    //         text-align: center;
	    //     }
	    // </style>

	};

/***/ }),
/* 27 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"category_part\">\r\n        <div class=\"category_tab_inner\" v-for=\"item in category_part.list\">\r\n            <div class=\"category_tab\">\r\n                <div class=\"category_tab_icon_box\">\r\n                    <img :src=\"item.icon_url\"/>\r\n                </div>\r\n                <div class=\"category_tab_hint\">{{item.category_name}}</div>\r\n            </div>\r\n        </div>\r\n        <div style=\"clear: both\"></div>\r\n    </div>\r\n";

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(29)
	__vue_script__ = __webpack_require__(31)
	__vue_template__ = __webpack_require__(42)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\community_part\\community.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(30);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-652cf8b6&file=community.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./community.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-652cf8b6&file=community.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./community.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .community-part {\r\n        padding: 0 15px;\r\n        margin-bottom: 5px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _community_item = __webpack_require__(32);

	var _community_item2 = _interopRequireDefault(_community_item);

	var _top_title = __webpack_require__(37);

	var _top_title2 = _interopRequireDefault(_top_title);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="community-part">
	//         <top_title :part_title="community_part.part_title" :show_all="community_part.show_all"></top_title>
	//         <div style="clear: both"></div>
	//         <div  v-for="(item,index) in community_data">
	//             <community_item :item="item" :index="index"></community_item>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['community_part', 'default_community_part'],
	    data: function data() {
	        return {
	            community_data: {}
	        };
	    },
	    components: {
	        community_item: _community_item2.default,
	        top_title: _top_title2.default
	    },
	    created: function created() {
	        this.set_data();
	    },
	    methods: {
	        set_data: function set_data() {
	            if (this.community_part.status == 0) {
	                this.community_data = this.default_community_part.list;
	            } else {
	                this.community_data = this.community_part.list;
	            }
	        }
	    },
	    watch: {
	        community_part: {
	            handler: function handler(cur, old) {
	                this.set_data();
	            },

	            deep: true
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .community-part {
	    //         padding: 0 15px;
	    //         margin-bottom: 5px;
	    //         background-color: #fff;
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         border: solid 1px #eeeeee;
	    //     }
	    // </style>

	};

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(33)
	__vue_script__ = __webpack_require__(35)
	__vue_template__ = __webpack_require__(36)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\community_part\\community_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(34);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-870b26c6&file=community_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./community_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-870b26c6&file=community_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./community_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .group-wrapper[_v-870b26c6] {\r\n        display: block;\r\n        background-color: #fff;\r\n    }\r\n    .group[_v-870b26c6] {\r\n        padding: 15px 0;\r\n        overflow: hidden;\r\n        border-bottom: 1px solid #f0f0f0;\r\n    }\r\n    .group-pic-wrapper[_v-870b26c6] {\r\n        overflow: hidden;\r\n        display: inline-block;\r\n        width: 55px;\r\n        height: 55px;\r\n        line-height: 55px;\r\n        text-align: center;\r\n        background-color: #a9ddff;\r\n    }\r\n    .greenClass[_v-870b26c6] {\r\n        background-color: #a2efdb !important;\r\n    }\r\n    .group-img[_v-870b26c6] {\r\n        background-size: 55px 55px;\r\n        width: 55px;\r\n        height: 55px;\r\n        float: left;\r\n        border-radius: 4px;\r\n    }\r\n    .group-img-default[_v-870b26c6] {\r\n        width: 24px;\r\n        height: 20px;\r\n    }\r\n    .group-detail[_v-870b26c6] {\r\n        float: right;\r\n        position: relative;\r\n        margin: 0 0 5px 8px;\r\n        width: 278px;\r\n    }\r\n    .add[_v-870b26c6], .has-add[_v-870b26c6]{\r\n        position: absolute;\r\n        top: 5px;\r\n        right: 0;\r\n        width: 55px;\r\n        height: 27px;\r\n        line-height: 27px;\r\n        text-align: center;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n    }\r\n    .add[_v-870b26c6] {\r\n        background-color: #17cd46;\r\n        color: #fff;\r\n    }\r\n    .has-add[_v-870b26c6] {\r\n        display: inline-block;\r\n    }\r\n    .group-title[_v-870b26c6] {\r\n        display: block;\r\n        vertical-align: top;\r\n        margin-bottom: 8px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2;\r\n        -webkit-box-orient: vertical;\r\n        word-break: break-all;\r\n        width: 220px;\r\n        line-height: 20px;\r\n        font-size: 14px;\r\n    }\r\n    .group-info[_v-870b26c6] {\r\n        height: 17px;\r\n        font-size: 12px;\r\n        text-align: justify;\r\n        color: #888888;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 35 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class="group-wrapper">
	//         <div class="group">
	//             <div class="group-pic-wrapper" :class="{greenClass:index==1}">
	//                 <img v-if="item.img_url || item.img_url_compressed" class="group-img" :src="item.img_url || item.img_url_compressed">
	//                 <img v-else-if="item.img_url==''" class="group-img-default" src="/images/admin/shopDiy/icon-pic@2x.png">
	//             </div>
	//             <div class="group-detail">
	//                 <span class="group-title">{{ item.title }}</span>
	//                 <div class="group-info">
	//                     <span>{{ item.memberCount }}人加入</span>
	//                     <span>|</span>
	//                     <span>{{ item.feeds_count }}条动态</span>
	//                 </div>
	//                 <!--<div v-show="item.joinStatus" class="has-add">已加入</div>-->
	//                 <!--<div v-show="!item.joinStatus" class="add">加入</div>-->
	//                 <div class="add">加入</div>
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item', 'index'],
	    data: function data() {
	        return {};
	    },
	    methods: {}
	    // </script>
	    //
	    // <style scoped>
	    //     .group-wrapper {
	    //         display: block;
	    //         background-color: #fff;
	    //     }
	    //     .group {
	    //         padding: 15px 0;
	    //         overflow: hidden;
	    //         border-bottom: 1px solid #f0f0f0;
	    //     }
	    //     .group-pic-wrapper {
	    //         overflow: hidden;
	    //         display: inline-block;
	    //         width: 55px;
	    //         height: 55px;
	    //         line-height: 55px;
	    //         text-align: center;
	    //         background-color: #a9ddff;
	    //     }
	    //     .greenClass {
	    //         background-color: #a2efdb !important;
	    //     }
	    //     .group-img {
	    //         background-size: 55px 55px;
	    //         width: 55px;
	    //         height: 55px;
	    //         float: left;
	    //         border-radius: 4px;
	    //     }
	    //     .group-img-default {
	    //         width: 24px;
	    //         height: 20px;
	    //     }
	    //     .group-detail {
	    //         float: right;
	    //         position: relative;
	    //         margin: 0 0 5px 8px;
	    //         width: 278px;
	    //     }
	    //     .add, .has-add{
	    //         position: absolute;
	    //         top: 5px;
	    //         right: 0;
	    //         width: 55px;
	    //         height: 27px;
	    //         line-height: 27px;
	    //         text-align: center;
	    //         border-radius: 4px;
	    //         font-size: 12px;
	    //     }
	    //     .add {
	    //         background-color: #17cd46;
	    //         color: #fff;
	    //     }
	    //     .has-add {
	    //         display: inline-block;
	    //     }
	    //     .group-title {
	    //         display: block;
	    //         vertical-align: top;
	    //         margin-bottom: 8px;
	    //         overflow: hidden;
	    //         text-overflow: ellipsis;
	    //         display: -webkit-box;
	    //         -webkit-line-clamp: 2;
	    //         -webkit-box-orient: vertical;
	    //         word-break: break-all;
	    //         width: 220px;
	    //         line-height: 20px;
	    //         font-size: 14px;
	    //     }
	    //     .group-info {
	    //         height: 17px;
	    //         font-size: 12px;
	    //         text-align: justify;
	    //         color: #888888;
	    //     }
	    // </style>

	};

/***/ }),
/* 36 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"group-wrapper\" _v-870b26c6=\"\">\n        <div class=\"group\" _v-870b26c6=\"\">\n            <div class=\"group-pic-wrapper\" :class=\"{greenClass:index==1}\" _v-870b26c6=\"\">\n                <img v-if=\"item.img_url || item.img_url_compressed\" class=\"group-img\" :src=\"item.img_url || item.img_url_compressed\" _v-870b26c6=\"\">\n                <img v-else-if=\"item.img_url==''\" class=\"group-img-default\" src=\"/images/admin/shopDiy/icon-pic@2x.png\" _v-870b26c6=\"\">\n            </div>\n            <div class=\"group-detail\" _v-870b26c6=\"\">\n                <span class=\"group-title\" _v-870b26c6=\"\">{{ item.title }}</span>\n                <div class=\"group-info\" _v-870b26c6=\"\">\n                    <span _v-870b26c6=\"\">{{ item.memberCount }}人加入</span>\n                    <span _v-870b26c6=\"\">|</span>\n                    <span _v-870b26c6=\"\">{{ item.feeds_count }}条动态</span>\n                </div>\n                <!--<div v-show=\"item.joinStatus\" class=\"has-add\">已加入</div>-->\n                <!--<div v-show=\"!item.joinStatus\" class=\"add\">加入</div>-->\n                <div class=\"add\" _v-870b26c6=\"\">加入</div>\n            </div>\n        </div>\n    </div>\n";

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(38)
	__vue_script__ = __webpack_require__(40)
	__vue_template__ = __webpack_require__(41)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\top_title.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(39);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-25a11ca2&file=top_title.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./top_title.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-25a11ca2&file=top_title.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./top_title.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .contentList-title {\r\n        line-height: 40px;\r\n        height: 40px;\r\n        font-size: 16px;\r\n        color: #353535;\r\n    }\r\n    .selectAll {\r\n        display: inline-block;\r\n        float: right;\r\n        padding: 0 15px;\r\n        margin-right: -15px;\r\n        font-size: 12px;\r\n        color: #888888;\r\n        height: 17px;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 40 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class='contentList-title'>
	//         {{part_title}}<span v-if="show_all" class="selectAll">查看全部 ></span>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['part_title', 'show_all'],
	    data: function data() {
	        return {};
	    },
	    methods: {}
	    // </script>
	    //
	    // <style>
	    //     .contentList-title {
	    //         line-height: 40px;
	    //         height: 40px;
	    //         font-size: 16px;
	    //         color: #353535;
	    //     }
	    //     .selectAll {
	    //         display: inline-block;
	    //         float: right;
	    //         padding: 0 15px;
	    //         margin-right: -15px;
	    //         font-size: 12px;
	    //         color: #888888;
	    //         height: 17px;
	    //     }
	    // </style>

	};

/***/ }),
/* 41 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class='contentList-title'>\r\n        {{part_title}}<span v-if=\"show_all\" class=\"selectAll\">查看全部 ></span>\r\n    </div>\r\n";

/***/ }),
/* 42 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"community-part\">\r\n        <top_title :part_title=\"community_part.part_title\" :show_all=\"community_part.show_all\"></top_title>\r\n        <div style=\"clear: both\"></div>\r\n        <div  v-for=\"(item,index) in community_data\">\r\n            <community_item :item=\"item\" :index=\"index\"></community_item>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(44)
	__vue_script__ = __webpack_require__(46)
	__vue_template__ = __webpack_require__(52)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\member_part\\member.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(45);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-27d18b0d&file=member.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./member.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-27d18b0d&file=member.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./member.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    /*首页专栏*/\r\n    .member-part {\r\n        padding: 0 15px;\r\n        margin-bottom: 5px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _top_title = __webpack_require__(37);

	var _top_title2 = _interopRequireDefault(_top_title);

	var _member_item = __webpack_require__(47);

	var _member_item2 = _interopRequireDefault(_member_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="member-part">
	//         <top_title :part_title="member_part.part_title" :show_all="member_part.show_all"></top_title>
	//         <div  v-for="(item,index) in member_data">
	//             <member_item :item="item" :index="index"></member_item>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['member_part', 'default_member_part'],
	    data: function data() {
	        return {
	            member_data: {}
	        };
	    },
	    components: {
	        top_title: _top_title2.default,
	        member_item: _member_item2.default
	    },
	    created: function created() {
	        this.set_data();
	    },
	    watch: {
	        member_part: {
	            handler: function handler(curVal, oldVal) {
	                this.set_data();
	            },

	            deep: true
	        }
	    },
	    methods: {
	        set_data: function set_data() {
	            if (this.member_part.status == 0) {
	                this.member_data = this.default_member_part.list;
	            } else {
	                this.member_data = this.member_part.list;
	            }
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     /*首页专栏*/
	    //     .member-part {
	    //         padding: 0 15px;
	    //         margin-bottom: 5px;
	    //         background-color: #fff;
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         border: solid 1px #eeeeee;
	    //     }
	    // </style>

	};

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(48)
	__vue_script__ = __webpack_require__(50)
	__vue_template__ = __webpack_require__(51)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\member_part\\member_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(49);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4676c635&file=member_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./member_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4676c635&file=member_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./member_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .text_indent[_v-4676c635] {\r\n        text-indent:-20px;\r\n    }\r\n\r\n    .columnist-num[_v-4676c635] {\r\n        float: left;\r\n        padding-right: 5px;\r\n        /*border-right: 1px solid #b2b2b2;*/\r\n    }\r\n\r\n    .columnist-subscriber[_v-4676c635] {\r\n        float: left;\r\n    }\r\n\r\n    .columnBorderLeft[_v-4676c635] {\r\n        padding-left: 5px;\r\n        border-left: 1px solid #b2b2b2;\r\n    }\r\n\r\n    .columnist-num-wrapper .columnist-num[_v-4676c635],.columnist-subscriber[_v-4676c635] {\r\n        height: 17px;\r\n        line-height: 17px;\r\n        font-size: 12px;\r\n        color: #888888;\r\n    }\r\n\r\n    .columnist-num-wrapper .columnist-price[_v-4676c635] {\r\n        float: right;\r\n        color: #ff821f;\r\n        font-size: 12px;\r\n        height: 17px;\r\n        line-height: 17px;\r\n    }\r\n\r\n    /*首页专栏*/\r\n\r\n    .content-wrapper[_v-4676c635] {\r\n        margin-left: -15px;\r\n        margin-right: -15px;\r\n        padding: 0 15px;\r\n        display: block;\r\n        text-decoration: none;\r\n    }\r\n\r\n    .contentMain[_v-4676c635] {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid #f3f3f3;\r\n        overflow: hidden;\r\n        display: table;\r\n        outline: 0;\r\n    }\r\n\r\n    .content-pic-wrapper[_v-4676c635] {\r\n        overflow: hidden;\r\n        position: relative;\r\n        width: 90px;\r\n        height: 68px;\r\n        line-height: 68px;\r\n        text-align: center;\r\n        margin-right: 10px;\r\n    }\r\n    .content-pic-wrapper.blueClass img[_v-4676c635]{\r\n        width:24px;\r\n        height:20px;\r\n    }\r\n    .greenClass[_v-4676c635] {\r\n        background-color: #a2efdb !important;\r\n    }\r\n\r\n    .yellowClass[_v-4676c635] {\r\n        background-color: #fff0a9 !important;\r\n    }\r\n\r\n    .blueClass[_v-4676c635] {\r\n        background-color: #a9ddff;\r\n    }\r\n\r\n    .content-pic[_v-4676c635] {\r\n        width: 100%;\r\n        height:100%;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    .content-info[_v-4676c635] {\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n\r\n    .columnist-title[_v-4676c635] {\r\n        display: block;\r\n        max-height: 36px;\r\n        line-height: 18px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2;\r\n        -webkit-box-orient: vertical;\r\n        word-break: break-all;\r\n        max-width: 240px;\r\n        text-overflow: ellipsis;\r\n        font-size: 14px;\r\n        color: #353535;\r\n    }\r\n\r\n    .columnist-desc[_v-4676c635] {\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        width: 240px;\r\n        margin-bottom: 12px;\r\n        margin-top: 2px;\r\n        float: right;\r\n        height: 17px;\r\n        line-height: 17px;\r\n        font-size: 12px;\r\n        text-align: left;\r\n        color: #888888;\r\n    }\r\n\r\n    /*会员*/\r\n    .columnIcon[_v-4676c635] {\r\n        display: inline-block;\r\n        height: 15px;\r\n        width: 15px;\r\n        /*vertical-align: middle;*/\r\n    }\r\n\r\n    .columnIcon > img[_v-4676c635] {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .bonus_price[_v-4676c635] {\r\n        /*margin-right: 0.1rem;*/\r\n        text-decoration: line-through;\r\n    }\r\n\r\n    .bonusPriceTag[_v-4676c635] {\r\n        font-size: 8px;\r\n        height: 10px;\r\n        padding: 2px;\r\n        line-height: 10px;\r\n        border: 1px solid #E64340;\r\n        border-radius: 3px;\r\n        text-align: center;\r\n        margin-right: 3px;\r\n        margin-top: -1px;\r\n        /*box-sizing: border-box;*/\r\n    }\r\n\r\n    .bonusPriceWrapper[_v-4676c635] {\r\n        margin-top: -1px;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 50 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class='columnist-item'>
	//         <div class='content-wrapper pressWrapper'>
	//             <div class="contentMain">
	//                 <div class="content-pic-wrapper" :class="{blueClass:flag}">
	//                     <img class='content-pic' :src="item.img_url_compressed || item.img_url"/>
	//                 </div>
	//
	//                 <div class='content-info'>
	//                     <div class='columnist-title' :class="{text_indent:flag}">
	//                         <span>{{item.title}}</span>
	//                         <i class="columnIcon" v-if="item.is_member">
	//                             <img :src="item.member_icon_default">
	//                         </i>
	//                     </div>
	//                     <div class='columnist-desc'>{{item.summary}}</div>
	//                     <!--
	//                     <div v-if="item.price" class="bonusPriceWrapper clearfix">
	//                         <span class='columnist-price bonus_price'>
	//                             <span v-if="item.period && item.price">
	//                                 ￥{{item.price}}/{{item.period}}</span>
	//                             <span v-else-if="item.price">￥{{item.price}}</span>
	//                         </span>
	//                     </div>
	//                     -->
	//
	//                     <div class="columnist-num-wrapper">
	//                         <span v-if="item.resource_count" class='columnist-num'>
	//                             <span v-if="item.finished_state == 0">已更新{{item.resource_count}}期</span>
	//                             <span v-else>共{{item.resource_count}}期</span>
	//                         </span>
	//                         <span v-if="item.purchase_count" class='columnist-subscriber' :class='{columnBorderLeft:borderLeftFlag}'>{{item.purchase_count}}人开通</span>
	//                         <span v-if="item.price" class='columnist-price'>
	//                             <!--
	//                             <span v-if="item.period && item.price">
	//                                 {{item.price}}/{{item.period}}
	//                             </span>
	//                             -->
	//                             <span>{{item.price}}</span>
	//                         </span>
	//
	//                         <!--
	//                         <div v-if="!item.availableInfo.available && item.availableInfo.bonus_price_hint"
	//                              class="columnist-price bonusPriceTag">
	//                             {{item.availableInfo.bonus_price_hint}}
	//                         </div>
	//                         -->
	//                     </div>
	//                 </div>
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item', 'index'],
	    data: function data() {
	        return {
	            flag: false,
	            borderLeftFlag: false,
	            isGreenActive: false,
	            isYellowActive: false
	        };
	    },
	    created: function created() {
	        var pattern = /^【/;
	        if (pattern.test(this.item.name)) {
	            this.flag = true;
	        }
	        if (this.item.resource_count && this.item.purchase_count) {
	            this.borderLeftFlag = true;
	        }
	        if (this.index === 1) {
	            this.isGreenActive = true;
	        }
	        if (this.index === 2) {
	            this.isYellowActive = true;
	        }
	        if (this.item.img_url_compressed == '/images/admin/shopDiy/icon-pic@2x.png') {
	            this.flag = true;
	        }
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .text_indent {
	    //         text-indent:-20px;
	    //     }
	    //
	    //     .columnist-num {
	    //         float: left;
	    //         padding-right: 5px;
	    //         /*border-right: 1px solid #b2b2b2;*/
	    //     }
	    //
	    //     .columnist-subscriber {
	    //         float: left;
	    //     }
	    //
	    //     .columnBorderLeft {
	    //         padding-left: 5px;
	    //         border-left: 1px solid #b2b2b2;
	    //     }
	    //
	    //     .columnist-num-wrapper .columnist-num,.columnist-subscriber {
	    //         height: 17px;
	    //         line-height: 17px;
	    //         font-size: 12px;
	    //         color: #888888;
	    //     }
	    //
	    //     .columnist-num-wrapper .columnist-price {
	    //         float: right;
	    //         color: #ff821f;
	    //         font-size: 12px;
	    //         height: 17px;
	    //         line-height: 17px;
	    //     }
	    //
	    //     /*首页专栏*/
	    //
	    //     .content-wrapper {
	    //         margin-left: -15px;
	    //         margin-right: -15px;
	    //         padding: 0 15px;
	    //         display: block;
	    //         text-decoration: none;
	    //     }
	    //
	    //     .contentMain {
	    //         width: 100%;
	    //         box-sizing: border-box;
	    //         padding: 15px 0;
	    //         border-bottom: 1px solid #f3f3f3;
	    //         overflow: hidden;
	    //         display: table;
	    //         outline: 0;
	    //     }
	    //
	    //     .content-pic-wrapper {
	    //         overflow: hidden;
	    //         position: relative;
	    //         width: 90px;
	    //         height: 68px;
	    //         line-height: 68px;
	    //         text-align: center;
	    //         margin-right: 10px;
	    //     }
	    //     .content-pic-wrapper.blueClass img{
	    //         width:24px;
	    //         height:20px;
	    //     }
	    //     .greenClass {
	    //         background-color: #a2efdb !important;
	    //     }
	    //
	    //     .yellowClass {
	    //         background-color: #fff0a9 !important;
	    //     }
	    //
	    //     .blueClass {
	    //         background-color: #a9ddff;
	    //     }
	    //
	    //     .content-pic {
	    //         width: 100%;
	    //         height:100%;
	    //         border-radius: 4px;
	    //     }
	    //
	    //     .content-info {
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         display: table-cell;
	    //         vertical-align: middle;
	    //     }
	    //
	    //     .columnist-title {
	    //         display: block;
	    //         max-height: 36px;
	    //         line-height: 18px;
	    //         overflow: hidden;
	    //         text-overflow: ellipsis;
	    //         display: -webkit-box;
	    //         -webkit-line-clamp: 2;
	    //         -webkit-box-orient: vertical;
	    //         word-break: break-all;
	    //         max-width: 240px;
	    //         text-overflow: ellipsis;
	    //         font-size: 14px;
	    //         color: #353535;
	    //     }
	    //
	    //     .columnist-desc {
	    //         overflow: hidden;
	    //         white-space: nowrap;
	    //         text-overflow: ellipsis;
	    //         width: 240px;
	    //         margin-bottom: 12px;
	    //         margin-top: 2px;
	    //         float: right;
	    //         height: 17px;
	    //         line-height: 17px;
	    //         font-size: 12px;
	    //         text-align: left;
	    //         color: #888888;
	    //     }
	    //
	    //     /*会员*/
	    //     .columnIcon {
	    //         display: inline-block;
	    //         height: 15px;
	    //         width: 15px;
	    //         /*vertical-align: middle;*/
	    //     }
	    //
	    //     .columnIcon > img {
	    //         width: 100%;
	    //         height: 100%;
	    //     }
	    //
	    //     .bonus_price {
	    //         /*margin-right: 0.1rem;*/
	    //         text-decoration: line-through;
	    //     }
	    //
	    //     .bonusPriceTag {
	    //         font-size: 8px;
	    //         height: 10px;
	    //         padding: 2px;
	    //         line-height: 10px;
	    //         border: 1px solid #E64340;
	    //         border-radius: 3px;
	    //         text-align: center;
	    //         margin-right: 3px;
	    //         margin-top: -1px;
	    //         /*box-sizing: border-box;*/
	    //     }
	    //
	    //     .bonusPriceWrapper {
	    //         margin-top: -1px;
	    //     }
	    // </style>

	};

/***/ }),
/* 51 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"columnist-item\" _v-4676c635=\"\">\n        <div class=\"content-wrapper pressWrapper\" _v-4676c635=\"\">\n            <div class=\"contentMain\" _v-4676c635=\"\">\n                <div class=\"content-pic-wrapper\" :class=\"{blueClass:flag}\" _v-4676c635=\"\">\n                    <img class=\"content-pic\" :src=\"item.img_url_compressed || item.img_url\" _v-4676c635=\"\">\n                </div>\n\n                <div class=\"content-info\" _v-4676c635=\"\">\n                    <div class=\"columnist-title\" :class=\"{text_indent:flag}\" _v-4676c635=\"\">\n                        <span _v-4676c635=\"\">{{item.title}}</span>\n                        <i class=\"columnIcon\" v-if=\"item.is_member\" _v-4676c635=\"\">\n                            <img :src=\"item.member_icon_default\" _v-4676c635=\"\">\n                        </i>\n                    </div>\n                    <div class=\"columnist-desc\" _v-4676c635=\"\">{{item.summary}}</div>\n                    <!--\n                    <div v-if=\"item.price\" class=\"bonusPriceWrapper clearfix\">\n                        <span class='columnist-price bonus_price'>\n                            <span v-if=\"item.period && item.price\">\n                                ￥{{item.price}}/{{item.period}}</span>\n                            <span v-else-if=\"item.price\">￥{{item.price}}</span>\n                        </span>\n                    </div>\n                    -->\n\n                    <div class=\"columnist-num-wrapper\" _v-4676c635=\"\">\n                        <span v-if=\"item.resource_count\" class=\"columnist-num\" _v-4676c635=\"\">\n                            <span v-if=\"item.finished_state == 0\" _v-4676c635=\"\">已更新{{item.resource_count}}期</span>\n                            <span v-else=\"\" _v-4676c635=\"\">共{{item.resource_count}}期</span>\n                        </span>\n                        <span v-if=\"item.purchase_count\" class=\"columnist-subscriber\" :class=\"{columnBorderLeft:borderLeftFlag}\" _v-4676c635=\"\">{{item.purchase_count}}人开通</span>\n                        <span v-if=\"item.price\" class=\"columnist-price\" _v-4676c635=\"\">\n                            <!--\n                            <span v-if=\"item.period && item.price\">\n                                {{item.price}}/{{item.period}}\n                            </span>\n                            -->\n                            <span _v-4676c635=\"\">{{item.price}}</span>\n                        </span>\n\n                        <!--\n                        <div v-if=\"!item.availableInfo.available && item.availableInfo.bonus_price_hint\"\n                             class=\"columnist-price bonusPriceTag\">\n                            {{item.availableInfo.bonus_price_hint}}\n                        </div>\n                        -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n";

/***/ }),
/* 52 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"member-part\">\r\n        <top_title :part_title=\"member_part.part_title\" :show_all=\"member_part.show_all\"></top_title>\r\n        <div  v-for=\"(item,index) in member_data\">\r\n            <member_item :item=\"item\" :index=\"index\"></member_item>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(54)
	__vue_script__ = __webpack_require__(56)
	__vue_template__ = __webpack_require__(62)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\alive_part\\alive.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(55);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2bda9ab6&file=alive.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./alive.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2bda9ab6&file=alive.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./alive.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .alive-part {\r\n        padding: 0 15px;\r\n        margin-bottom: 5px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _top_title = __webpack_require__(37);

	var _top_title2 = _interopRequireDefault(_top_title);

	var _alive_item = __webpack_require__(57);

	var _alive_item2 = _interopRequireDefault(_alive_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="alive-part">
	//         <top_title :part_title="alive_part.part_title" :show_all="alive_part.show_all"></top_title>
	//         <div  v-for="(item,index) in alive_data">
	//             <alive_item :item="item" :index="index"></alive_item>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['alive_part', 'default_alive_part'],
	    data: function data() {
	        return {
	            alive_data: {}
	        };
	    },
	    components: {
	        top_title: _top_title2.default,
	        alive_item: _alive_item2.default
	    },
	    created: function created() {
	        this.set_data();
	    },
	    watch: {
	        alive_part: {
	            handler: function handler(curVal, oldVal) {
	                this.set_data();
	            },

	            deep: true
	        }
	    },
	    methods: {
	        set_data: function set_data() {
	            if (this.alive_part.status == 0) {
	                this.alive_data = this.default_alive_part.list;
	            } else {
	                this.alive_data = this.alive_part.list;
	            }
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .alive-part {
	    //         padding: 0 15px;
	    //         margin-bottom: 5px;
	    //         background-color: #fff;
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         border: solid 1px #eeeeee;
	    //     }
	    // </style>

	};

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(58)
	__vue_script__ = __webpack_require__(60)
	__vue_template__ = __webpack_require__(61)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\alive_part\\alive_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(59);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-55369d9d&file=alive_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./alive_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-55369d9d&file=alive_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./alive_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .alive_item[_v-55369d9d] {\r\n        position: relative;\r\n    }\r\n    .live-content-wrapper[_v-55369d9d] {\r\n        display: block;\r\n    }\r\n    .contentMain[_v-55369d9d] {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid #f3f3f3;\r\n        overflow: hidden;\r\n        display: table;\r\n        outline: 0;\r\n    }\r\n\r\n    .live_img[_v-55369d9d] {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .live_img_default[_v-55369d9d] {\r\n        width: 24px;\r\n        height: 20px;\r\n    }\r\n\r\n    .blueClass[_v-55369d9d] {\r\n        background-color: #a9ddff;\r\n    }\r\n\r\n    .greenClass[_v-55369d9d] {\r\n        background-color: #a2efdb;\r\n    }\r\n\r\n    .live_img_wrapper[_v-55369d9d] {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 110px;\r\n        line-height: 110px;\r\n        text-align: center;\r\n    }\r\n\r\n    .bottom_wrapper[_v-55369d9d] {\r\n        height: 24px;\r\n        line-height: 24px;\r\n    }\r\n\r\n    .alive_title[_v-55369d9d] {\r\n        float: left;\r\n        display: block;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        word-wrap: break-word;\r\n        max-width: 290px;\r\n        white-space: nowrap;\r\n        font-size: 12px;\r\n        color: #243042;\r\n    }\r\n\r\n    .text_indent[_v-55369d9d] {\r\n        text-indent: -20px;\r\n    }\r\n\r\n    .live_status[_v-55369d9d] {\r\n        /*margin-left: 0.2rem;*/\r\n        /*float: left;*/\r\n        position: absolute;\r\n        top: 5px;\r\n        right: 5px;\r\n    }\r\n\r\n    .live-content-price[_v-55369d9d] {\r\n        margin-left: 10px;\r\n        padding-top: 1px;\r\n        float: right;\r\n        font-size: 12px;\r\n        color: #ff821f;\r\n    }\r\n\r\n    .aliveNewStatus[_v-55369d9d] {\r\n        text-align: center;\r\n        height: 15px;\r\n        line-height: 15px;\r\n        box-sizing: border-box;\r\n        padding: 0 5px;\r\n        float: left;\r\n        overflow: hidden;\r\n        color: #FFFFFF;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .aliveNewPrepare[_v-55369d9d] {\r\n        border: 1px solid #ffffff;\r\n        background-color: #353535;\r\n        border-radius: 2px;\r\n        opacity: 0.6;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 60 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class="alive_item">
	//         <div class='live-content-wrapper pressWrapper pressGreyBg'>
	//             <div class="contentMain">
	//                 <div class="live_img_wrapper" :class="{greenClass: (index)%2==1, blueClass: (index)%2==0}">
	//                     <img v-if="item.img_url_compressed" :src="item.img_url_compressed"
	//                          class="live_img"/>
	//                     <img v-else-if="(index)%2==0" src="/images/admin/shopDiy/icon-pic@2x.png"
	//                          class="live_img_default"/>
	//                     <img v-else-if="(index)%2==1" src="/images/admin/shopDiy/icon-pic@2x.png"
	//                          class="live_img_default"/>
	//                     <span class="live_status aliveNewStatus aliveNewPrepare">
	//                         {{item.view_status}}
	//                     </span>
	//                 </div>
	//                 <div class="bottom_wrapper">
	//                     <div class="alive_title" :class="{text_indent:flag}">{{item.title}}</div>
	//                     <span v-if="!item.available && item.piece_price!=0" class="live-content-price">{{item.piece_price}}</span>
	//                     <div style="clear: both"></div>
	//                 </div>
	//
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item', 'index'],
	    data: function data() {
	        return {
	            flag: false
	        };
	    },
	    created: function created() {
	        var pattern = /^【/;
	        if (pattern.test(this.item.title)) {
	            this.flag = true;
	        }
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .alive_item {
	    //         position: relative;
	    //     }
	    //     .live-content-wrapper {
	    //         display: block;
	    //     }
	    //     .contentMain {
	    //         width: 100%;
	    //         box-sizing: border-box;
	    //         padding: 15px 0;
	    //         border-bottom: 1px solid #f3f3f3;
	    //         overflow: hidden;
	    //         display: table;
	    //         outline: 0;
	    //     }
	    //
	    //     .live_img {
	    //         width: 100%;
	    //         height: 100%;
	    //     }
	    //
	    //     .live_img_default {
	    //         width: 24px;
	    //         height: 20px;
	    //     }
	    //
	    //     .blueClass {
	    //         background-color: #a9ddff;
	    //     }
	    //
	    //     .greenClass {
	    //         background-color: #a2efdb;
	    //     }
	    //
	    //     .live_img_wrapper {
	    //         position: relative;
	    //         width: 100%;
	    //         height: 110px;
	    //         line-height: 110px;
	    //         text-align: center;
	    //     }
	    //
	    //     .bottom_wrapper {
	    //         height: 24px;
	    //         line-height: 24px;
	    //     }
	    //
	    //     .alive_title {
	    //         float: left;
	    //         display: block;
	    //         overflow: hidden;
	    //         text-overflow: ellipsis;
	    //         word-wrap: break-word;
	    //         max-width: 290px;
	    //         white-space: nowrap;
	    //         font-size: 12px;
	    //         color: #243042;
	    //     }
	    //
	    //     .text_indent {
	    //         text-indent: -20px;
	    //     }
	    //
	    //     .live_status {
	    //         /*margin-left: 0.2rem;*/
	    //         /*float: left;*/
	    //         position: absolute;
	    //         top: 5px;
	    //         right: 5px;
	    //     }
	    //
	    //     .live-content-price {
	    //         margin-left: 10px;
	    //         padding-top: 1px;
	    //         float: right;
	    //         font-size: 12px;
	    //         color: #ff821f;
	    //     }
	    //
	    //     .aliveNewStatus {
	    //         text-align: center;
	    //         height: 15px;
	    //         line-height: 15px;
	    //         box-sizing: border-box;
	    //         padding: 0 5px;
	    //         float: left;
	    //         overflow: hidden;
	    //         color: #FFFFFF;
	    //         font-size: 10px;
	    //     }
	    //
	    //     .aliveNewPrepare {
	    //         border: 1px solid #ffffff;
	    //         background-color: #353535;
	    //         border-radius: 2px;
	    //         opacity: 0.6;
	    //     }
	    // </style>

	};

/***/ }),
/* 61 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"alive_item\" _v-55369d9d=\"\">\n        <div class=\"live-content-wrapper pressWrapper pressGreyBg\" _v-55369d9d=\"\">\n            <div class=\"contentMain\" _v-55369d9d=\"\">\n                <div class=\"live_img_wrapper\" :class=\"{greenClass: (index)%2==1, blueClass: (index)%2==0}\" _v-55369d9d=\"\">\n                    <img v-if=\"item.img_url_compressed\" :src=\"item.img_url_compressed\" class=\"live_img\" _v-55369d9d=\"\">\n                    <img v-else-if=\"(index)%2==0\" src=\"/images/admin/shopDiy/icon-pic@2x.png\" class=\"live_img_default\" _v-55369d9d=\"\">\n                    <img v-else-if=\"(index)%2==1\" src=\"/images/admin/shopDiy/icon-pic@2x.png\" class=\"live_img_default\" _v-55369d9d=\"\">\n                    <span class=\"live_status aliveNewStatus aliveNewPrepare\" _v-55369d9d=\"\">\n                        {{item.view_status}}\n                    </span>\n                </div>\n                <div class=\"bottom_wrapper\" _v-55369d9d=\"\">\n                    <div class=\"alive_title\" :class=\"{text_indent:flag}\" _v-55369d9d=\"\">{{item.title}}</div>\n                    <span v-if=\"!item.available &amp;&amp; item.piece_price!=0\" class=\"live-content-price\" _v-55369d9d=\"\">{{item.piece_price}}</span>\n                    <div style=\"clear: both\" _v-55369d9d=\"\"></div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n";

/***/ }),
/* 62 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"alive-part\">\r\n        <top_title :part_title=\"alive_part.part_title\" :show_all=\"alive_part.show_all\"></top_title>\r\n        <div  v-for=\"(item,index) in alive_data\">\r\n            <alive_item :item=\"item\" :index=\"index\"></alive_item>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(64)
	__vue_script__ = __webpack_require__(66)
	__vue_template__ = __webpack_require__(72)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\question_part\\question.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(65);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2ef57025&file=question.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./question.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2ef57025&file=question.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./question.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .que-part{\r\n        padding: 0 15px;\r\n        margin-bottom: 5px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _top_title = __webpack_require__(37);

	var _top_title2 = _interopRequireDefault(_top_title);

	var _question_item = __webpack_require__(67);

	var _question_item2 = _interopRequireDefault(_question_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="que-part">
	//         <top_title :part_title="question_part.part_title" :show_all="false"></top_title>
	//         <div v-for="item in question_part.list">
	//             <question_item :item="item"></question_item>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['question_part'],
	    data: function data() {
	        return {};
	    },
	    methods: {},
	    components: {
	        top_title: _top_title2.default,
	        question_item: _question_item2.default
	    }
	    // </script>
	    //
	    // <style>
	    //     .que-part{
	    //         padding: 0 15px;
	    //         margin-bottom: 5px;
	    //         background-color: #fff;
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         border: solid 1px #eeeeee;
	    //     }
	    // </style>

	};

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(68)
	__vue_script__ = __webpack_require__(70)
	__vue_template__ = __webpack_require__(71)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\question_part\\question_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(69);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2bee501d&file=question_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./question_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2bee501d&file=question_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./question_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .content-wrapper[_v-2bee501d] {\r\n        display: block;\r\n    }\r\n    .contentMain[_v-2bee501d] {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        padding: 15px 0;\r\n        overflow: hidden;\r\n        display: table;\r\n        outline: 0;\r\n    }\r\n    .content-pic-wrapper[_v-2bee501d] {\r\n        overflow: hidden;\r\n        position: relative;\r\n        width: 90px;\r\n        height: 68px;\r\n        line-height: 68px;\r\n        text-align: center;\r\n        margin-right: 10px;\r\n        background-color: #a9ddff;\r\n    }\r\n    .content-pic-wrapper .content-icon[_v-2bee501d]{\r\n        width: 24px;\r\n        height: 20px;\r\n    }\r\n    .content-pic[_v-2bee501d] {\r\n        float: left;\r\n        width: 90px;\r\n        height: 68px;\r\n        border-radius: 4px;\r\n    }\r\n    .content-info-cnt[_v-2bee501d]{\r\n        position: relative;\r\n        box-sizing: border-box;\r\n    }\r\n    .content-info-cnt *[_v-2bee501d]{\r\n        box-sizing: border-box;\r\n    }\r\n    .content-info[_v-2bee501d] {\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n    .columnist-title[_v-2bee501d] {\r\n        display: block;\r\n        max-height: 36px;\r\n        line-height: 18px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2;\r\n        -webkit-box-orient: vertical;\r\n        word-break: break-all;\r\n        max-width: 250px;\r\n        text-overflow: ellipsis;\r\n        font-size: 14px;\r\n        color: #353535;\r\n    }\r\n    .text_indent[_v-2bee501d] {\r\n        text-indent: -20px;\r\n    }\r\n    .columnist-desc[_v-2bee501d] {\r\n        height: 20px;\r\n        line-height: 20px;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        width: 250px;\r\n        margin-bottom: 10px;\r\n        float: right;\r\n        font-size: 12px;\r\n        color: #888888;\r\n    }\r\n    .que-info-txt[_v-2bee501d]{\r\n        padding-right: 35px;\r\n        font-size: 12px;\r\n        color: #888888;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 70 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class='que-product'>
	//         <div class='content-wrapper pressWrapper'>
	//             <div class="contentMain">
	//                 <div class="content-pic-wrapper">
	//                     <img v-if="item.img_url_compressed" class='content-pic' :src="item.img_url_compressed"/>
	//                     <img v-else-if="item.img_url_compressed==''" class="content-icon" src="/images/admin/shopDiy/icon-pic@2x.png"/>
	//                 </div>
	//
	//                 <div class='content-info'>
	//                     <div class="content-info-cnt">
	//                         <div class='columnist-title' :class="{text_indent:flag}">
	//                             {{item.title}}
	//                         </div>
	//                         <div class='columnist-desc'>{{item.desc}}</div>
	//                         <div class="que-info-txt">{{item.total_num}}</div>
	//                     </div>
	//                 </div>
	//
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item'],
	    data: function data() {
	        return {
	            flag: false
	        };
	    },
	    created: function created() {
	        var pattern = /^【/;
	        if (pattern.test(this.item.title)) {
	            this.flag = true;
	        }
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .content-wrapper {
	    //         display: block;
	    //     }
	    //     .contentMain {
	    //         width: 100%;
	    //         box-sizing: border-box;
	    //         padding: 15px 0;
	    //         overflow: hidden;
	    //         display: table;
	    //         outline: 0;
	    //     }
	    //     .content-pic-wrapper {
	    //         overflow: hidden;
	    //         position: relative;
	    //         width: 90px;
	    //         height: 68px;
	    //         line-height: 68px;
	    //         text-align: center;
	    //         margin-right: 10px;
	    //         background-color: #a9ddff;
	    //     }
	    //     .content-pic-wrapper .content-icon{
	    //         width: 24px;
	    //         height: 20px;
	    //     }
	    //     .content-pic {
	    //         float: left;
	    //         width: 90px;
	    //         height: 68px;
	    //         border-radius: 4px;
	    //     }
	    //     .content-info-cnt{
	    //         position: relative;
	    //         -webkit-box-sizing: border-box;
	    //         box-sizing: border-box;
	    //     }
	    //     .content-info-cnt *{
	    //         -webkit-box-sizing: border-box;
	    //         box-sizing: border-box;
	    //     }
	    //     .content-info {
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         display: table-cell;
	    //         vertical-align: middle;
	    //     }
	    //     .columnist-title {
	    //         display: block;
	    //         max-height: 36px;
	    //         line-height: 18px;
	    //         overflow: hidden;
	    //         text-overflow: ellipsis;
	    //         display: -webkit-box;
	    //         -webkit-line-clamp: 2;
	    //         -webkit-box-orient: vertical;
	    //         word-break: break-all;
	    //         max-width: 250px;
	    //         text-overflow: ellipsis;
	    //         font-size: 14px;
	    //         color: #353535;
	    //     }
	    //     .text_indent {
	    //         text-indent: -20px;
	    //     }
	    //     .columnist-desc {
	    //         height: 20px;
	    //         line-height: 20px;
	    //         overflow: hidden;
	    //         white-space: nowrap;
	    //         text-overflow: ellipsis;
	    //         width: 250px;
	    //         margin-bottom: 10px;
	    //         float: right;
	    //         font-size: 12px;
	    //         color: #888888;
	    //     }
	    //     .que-info-txt{
	    //         padding-right: 35px;
	    //         font-size: 12px;
	    //         color: #888888;
	    //     }
	    // </style>

	};

/***/ }),
/* 71 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"que-product\" _v-2bee501d=\"\">\n        <div class=\"content-wrapper pressWrapper\" _v-2bee501d=\"\">\n            <div class=\"contentMain\" _v-2bee501d=\"\">\n                <div class=\"content-pic-wrapper\" _v-2bee501d=\"\">\n                    <img v-if=\"item.img_url_compressed\" class=\"content-pic\" :src=\"item.img_url_compressed\" _v-2bee501d=\"\">\n                    <img v-else-if=\"item.img_url_compressed==''\" class=\"content-icon\" src=\"/images/admin/shopDiy/icon-pic@2x.png\" _v-2bee501d=\"\">\n                </div>\n\n                <div class=\"content-info\" _v-2bee501d=\"\">\n                    <div class=\"content-info-cnt\" _v-2bee501d=\"\">\n                        <div class=\"columnist-title\" :class=\"{text_indent:flag}\" _v-2bee501d=\"\">\n                            {{item.title}}\n                        </div>\n                        <div class=\"columnist-desc\" _v-2bee501d=\"\">{{item.desc}}</div>\n                        <div class=\"que-info-txt\" _v-2bee501d=\"\">{{item.total_num}}</div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n";

/***/ }),
/* 72 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"que-part\">\r\n        <top_title :part_title=\"question_part.part_title\" :show_all=\"false\"></top_title>\r\n        <div v-for=\"item in question_part.list\">\r\n            <question_item :item=\"item\"></question_item>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(74)
	__vue_script__ = __webpack_require__(76)
	__vue_template__ = __webpack_require__(82)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\recommend_part\\recommend.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(75);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-24e2d976&file=recommend.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./recommend.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-24e2d976&file=recommend.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./recommend.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .recommend-part {\r\n        padding: 0 15px;\r\n        margin-bottom: 5px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _top_title = __webpack_require__(37);

	var _top_title2 = _interopRequireDefault(_top_title);

	var _recommend_item = __webpack_require__(77);

	var _recommend_item2 = _interopRequireDefault(_recommend_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="recommend-part">
	//         <top_title :part_title="recommend_part.part_title" :show_all="false"></top_title>
	//         <div v-for="(item,index) in recommend_part.list">
	//             <recommend_item :item="item" :index="index"></recommend_item>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['recommend_part'],
	    data: function data() {
	        return {};
	    },
	    methods: {},
	    components: {
	        top_title: _top_title2.default,
	        recommend_item: _recommend_item2.default
	    }
	    // </script>
	    //
	    // <style>
	    //     .recommend-part {
	    //         padding: 0 15px;
	    //         margin-bottom: 5px;
	    //         background-color: #fff;
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         border: solid 1px #eeeeee;
	    //     }
	    // </style>

	};

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(78)
	__vue_script__ = __webpack_require__(80)
	__vue_template__ = __webpack_require__(81)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\recommend_part\\recommend_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(79);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d5a3be06&file=recommend_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./recommend_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-d5a3be06&file=recommend_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./recommend_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .content-wrapper {\r\n        display: block;\r\n    }\r\n    .contentMain {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid #f3f3f3;\r\n        overflow: hidden;\r\n        display: table;\r\n        outline: 0;\r\n    }\r\n    .content-pic-wrapper {\r\n        overflow: hidden;\r\n        position: relative;\r\n        width: 90px;\r\n        height: 68px;\r\n        line-height: 68px;\r\n        text-align: center;\r\n        margin-right: 10px;\r\n    }\r\n    .greenClass {\r\n        background-color: #a2efdb !important;\r\n    }\r\n\r\n    .yellowClass {\r\n        background-color: #fff0a9 !important;\r\n    }\r\n    .blueClass {\r\n        background-color: #a9ddff;\r\n    }\r\n    .srcType {\r\n        position: absolute;\r\n        right: 5px;\r\n        bottom: 5px;\r\n        width: 24px;\r\n        height: 24px;\r\n        z-index: 9;\r\n    }\r\n    .content-pic {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 4px;\r\n    }\r\n    .content-pic-default {\r\n        width: 24px;\r\n        height: 20px;\r\n        border-radius: 4px;\r\n    }\r\n    .content-info {\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n    .content-title {\r\n        display: block;\r\n        max-height: 36px;\r\n        line-height: 18px;\r\n        margin-bottom: 35px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2;\r\n        -webkit-box-orient: vertical;\r\n        word-break: break-all;\r\n        max-width: 240px;\r\n        text-overflow: ellipsis;\r\n        font-size: 14px;\r\n        color: #353535;\r\n    }\r\n    .content-status {\r\n        width: 240px;\r\n        height: 15px;\r\n        font-size: 12px;\r\n        color: #888888;\r\n    }\r\n    .content-num {\r\n        float: left;\r\n        height: 15px;\r\n        line-height: 15px;\r\n    }\r\n\r\n    .content-count {\r\n        float: left;\r\n        margin-right: 10px;\r\n        height: 100%;\r\n        overflow: hidden;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 80 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class="listWrapper">
	//         <div class="content-wrapper pressWrapper">
	//             <div class="contentMain">
	//                 <div class="content-pic-wrapper blueClass" :class="{greenClass: isGreenActive, yellowClass: isYellowActive}">
	//                     <img v-if="item.srcType==1" class="srcType" src="/images/admin/shopDiy/icon-imageText@2x.png" />
	//                     <img v-if="item.srcType==2" class="srcType" src="/images/admin/shopDiy/icon-play-audio-default@2x.png" />
	//                     <img v-if="item.srcType==3" class="srcType" src="/images/admin/shopDiy/icon-video@2x.png" />
	//                     <img v-if="item.img_url_compressed" class="content-pic" :src="item.img_url_compressed" />
	//                     <img v-if="item.img_url_compressed==''" class="content-pic-default" src="/images/admin/shopDiy/icon-pic@2x.png" />
	//                 </div>
	//                 <div class="content-info">
	//                     <span class="content-title">{{ item.title }}</span>
	//                     <div class="content-status">
	//                         <div class="content-count" v-if="item.view_count">
	//                             <div class="content-num">
	//                                 {{ item.view_count }}
	//                             </div>
	//                         </div>
	//                         <div class="content-count" v-if="item.comment_count">
	//                             <div class="content-num">
	//                                 {{ item.comment_count }}
	//                             </div>
	//                         </div>
	//                     </div>
	//                 </div>
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item', 'index'],
	    data: function data() {
	        return {
	            isGreenActive: false,
	            isYellowActive: false
	        };
	    },
	    created: function created() {
	        if (this.index === 1) {
	            this.isGreenActive = true;
	        }
	        if (this.index === 2) {
	            this.isYellowActive = true;
	        }
	    },
	    methods: {}
	    // </script>
	    //
	    // <style>
	    //     .content-wrapper {
	    //         display: block;
	    //     }
	    //     .contentMain {
	    //         width: 100%;
	    //         box-sizing: border-box;
	    //         padding: 15px 0;
	    //         border-bottom: 1px solid #f3f3f3;
	    //         overflow: hidden;
	    //         display: table;
	    //         outline: 0;
	    //     }
	    //     .content-pic-wrapper {
	    //         overflow: hidden;
	    //         position: relative;
	    //         width: 90px;
	    //         height: 68px;
	    //         line-height: 68px;
	    //         text-align: center;
	    //         margin-right: 10px;
	    //     }
	    //     .greenClass {
	    //         background-color: #a2efdb !important;
	    //     }
	    //
	    //     .yellowClass {
	    //         background-color: #fff0a9 !important;
	    //     }
	    //     .blueClass {
	    //         background-color: #a9ddff;
	    //     }
	    //     .srcType {
	    //         position: absolute;
	    //         right: 5px;
	    //         bottom: 5px;
	    //         width: 24px;
	    //         height: 24px;
	    //         z-index: 9;
	    //     }
	    //     .content-pic {
	    //         width: 100%;
	    //         height: 100%;
	    //         border-radius: 4px;
	    //     }
	    //     .content-pic-default {
	    //         width: 24px;
	    //         height: 20px;
	    //         border-radius: 4px;
	    //     }
	    //     .content-info {
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         display: table-cell;
	    //         vertical-align: middle;
	    //     }
	    //     .content-title {
	    //         display: block;
	    //         max-height: 36px;
	    //         line-height: 18px;
	    //         margin-bottom: 35px;
	    //         overflow: hidden;
	    //         text-overflow: ellipsis;
	    //         display: -webkit-box;
	    //         -webkit-line-clamp: 2;
	    //         -webkit-box-orient: vertical;
	    //         word-break: break-all;
	    //         max-width: 240px;
	    //         text-overflow: ellipsis;
	    //         font-size: 14px;
	    //         color: #353535;
	    //     }
	    //     .content-status {
	    //         width: 240px;
	    //         height: 15px;
	    //         font-size: 12px;
	    //         color: #888888;
	    //     }
	    //     .content-num {
	    //         float: left;
	    //         height: 15px;
	    //         line-height: 15px;
	    //     }
	    //
	    //     .content-count {
	    //         float: left;
	    //         margin-right: 10px;
	    //         height: 100%;
	    //         overflow: hidden;
	    //     }
	    // </style>

	};

/***/ }),
/* 81 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"listWrapper\">\r\n        <div class=\"content-wrapper pressWrapper\">\r\n            <div class=\"contentMain\">\r\n                <div class=\"content-pic-wrapper blueClass\" :class=\"{greenClass: isGreenActive, yellowClass: isYellowActive}\">\r\n                    <img v-if=\"item.srcType==1\" class=\"srcType\" src=\"/images/admin/shopDiy/icon-imageText@2x.png\" />\r\n                    <img v-if=\"item.srcType==2\" class=\"srcType\" src=\"/images/admin/shopDiy/icon-play-audio-default@2x.png\" />\r\n                    <img v-if=\"item.srcType==3\" class=\"srcType\" src=\"/images/admin/shopDiy/icon-video@2x.png\" />\r\n                    <img v-if=\"item.img_url_compressed\" class=\"content-pic\" :src=\"item.img_url_compressed\" />\r\n                    <img v-if=\"item.img_url_compressed==''\" class=\"content-pic-default\" src=\"/images/admin/shopDiy/icon-pic@2x.png\" />\r\n                </div>\r\n                <div class=\"content-info\">\r\n                    <span class=\"content-title\">{{ item.title }}</span>\r\n                    <div class=\"content-status\">\r\n                        <div class=\"content-count\" v-if=\"item.view_count\">\r\n                            <div class=\"content-num\">\r\n                                {{ item.view_count }}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"content-count\" v-if=\"item.comment_count\">\r\n                            <div class=\"content-num\">\r\n                                {{ item.comment_count }}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 82 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"recommend-part\">\r\n        <top_title :part_title=\"recommend_part.part_title\" :show_all=\"false\"></top_title>\r\n        <div v-for=\"(item,index) in recommend_part.list\">\r\n            <recommend_item :item=\"item\" :index=\"index\"></recommend_item>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(84)
	__vue_script__ = __webpack_require__(86)
	__vue_template__ = __webpack_require__(96)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\activity_part\\activity.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(85);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-790109b7&file=activity.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./activity.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-790109b7&file=activity.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./activity.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .activity-part {\r\n        padding: 0 15px;\r\n        margin-bottom: 5px;\r\n        background-color: #fff;\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        border: solid 1px #eeeeee;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _defineProperty2 = __webpack_require__(87);

	var _defineProperty3 = _interopRequireDefault(_defineProperty2);

	var _top_title = __webpack_require__(37);

	var _top_title2 = _interopRequireDefault(_top_title);

	var _activity_item = __webpack_require__(91);

	var _activity_item2 = _interopRequireDefault(_activity_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="activity-part">
	//         <top_title :part_title="activity_part.part_title" :show_all="show_all"></top_title>
	//         <div v-for="item in activity_data">
	//             <activity_item :item="item"></activity_item>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = (0, _defineProperty3.default)({
	    props: ['activity_part', 'default_activity_part'],
	    data: function data() {
	        return {
	            activity_data: {},
	            show_all: true
	        };
	    },
	    methods: {},
	    components: {
	        top_title: _top_title2.default,
	        activity_item: _activity_item2.default
	    },
	    created: function created() {
	        this.set_data();
	    },
	    watch: {
	        activity_part: {
	            handler: function handler(curVal, oldVal) {
	                this.set_data();
	            },

	            deep: true
	        }
	    }
	}, 'methods', {
	    set_data: function set_data() {
	        if (this.activity_part.status == 0) {
	            this.activity_data = this.default_activity_part.list;
	        } else {
	            this.activity_data = this.activity_part.list;
	        }
	    }
	});
	// </script>
	//
	// <style>
	//     .activity-part {
	//         padding: 0 15px;
	//         margin-bottom: 5px;
	//         background-color: #fff;
	//         overflow: hidden;
	//         box-sizing: border-box;
	//         border: solid 1px #eeeeee;
	//     }
	// </style>

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _defineProperty = __webpack_require__(88);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.default = function (obj, key, value) {
	  if (key in obj) {
	    (0, _defineProperty2.default)(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	};

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = { "default": __webpack_require__(89), __esModule: true };

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var $ = __webpack_require__(90);
	module.exports = function defineProperty(it, key, desc) {
	  return $.setDesc(it, key, desc);
	};

/***/ }),
/* 90 */
/***/ (function(module, exports) {

	"use strict";

	var $Object = Object;
	module.exports = {
	  create: $Object.create,
	  getProto: $Object.getPrototypeOf,
	  isEnum: {}.propertyIsEnumerable,
	  getDesc: $Object.getOwnPropertyDescriptor,
	  setDesc: $Object.defineProperty,
	  setDescs: $Object.defineProperties,
	  getKeys: $Object.keys,
	  getNames: $Object.getOwnPropertyNames,
	  getSymbols: $Object.getOwnPropertySymbols,
	  each: [].forEach
	};

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(92)
	__vue_script__ = __webpack_require__(94)
	__vue_template__ = __webpack_require__(95)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\activity_part\\activity_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(93);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7f5de1cb&file=activity_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./activity_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-7f5de1cb&file=activity_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./activity_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .content-wrapper {\r\n        display: block;\r\n    }\r\n    .contentMain {\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid #f3f3f3;\r\n        overflow: hidden;\r\n        display: table;\r\n        outline: 0;\r\n    }\r\n    .content-pic-wrapper {\r\n        overflow: hidden;\r\n        position: relative;\r\n        width: 90px;\r\n        height: 68px;\r\n        line-height: 68px;\r\n        text-align: center;\r\n        margin-right: 10px;\r\n    }\r\n    .blueClass {\r\n        background-color: #a9ddff;\r\n    }\r\n    .activity_text {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        font-size: 10px;\r\n        height: 14px;\r\n        line-height: 14px;\r\n        z-index: 9;\r\n        color: #fff;\r\n        padding: 0 3px;\r\n        border-top-right-radius: 4px;\r\n    }\r\n    .c_green_normal {\r\n        background-color: rgba(9, 187, 7, 1);\r\n    }\r\n    .content-pic-default {\r\n        width: 24px;\r\n        height: 20px;\r\n        border-radius: 4px;\r\n    }\r\n    .content-pic {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 4px;\r\n    }\r\n    .content-pic-default {\r\n        width: 24px;\r\n        height: 20px;\r\n        border-radius: 4px;\r\n    }\r\n    .content-info {\r\n        overflow: hidden;\r\n        box-sizing: border-box;\r\n        display: table-cell;\r\n        vertical-align: middle;\r\n    }\r\n    .content-title {\r\n        display: block;\r\n        max-height: 36px;\r\n        line-height: 18px;\r\n        margin-bottom: 35px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        display: -webkit-box;\r\n        -webkit-line-clamp: 2;\r\n        -webkit-box-orient: vertical;\r\n        word-break: break-all;\r\n        max-width: 240px;\r\n        text-overflow: ellipsis;\r\n        font-size: 14px;\r\n        color: #353535;\r\n    }\r\n    .content-status {\r\n        width: 240px;\r\n        height: 15px;\r\n        font-size: 12px;\r\n        color: #888888;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 94 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <template>
	//     <div class="listWrapper">
	//         <div class="content-wrapper pressWrapper">
	//             <div class="contentMain">
	//                 <div class="content-pic-wrapper" :class="{blueClass:flag}">
	//                     <!--内容类型-->
	//                     <span class="activity_text c_green_normal">活动</span>
	//                     <!--内容类型-->
	//                     <img v-if="item.img_url || item.img_url_compressed" class="content-pic" :src="item.img_url || item.img_url_compressed" />
	//                     <img v-if="item.img_url==''" class="content-pic-default" src="/images/admin/shopDiy/icon-pic@2x.png" />
	//                 </div>
	//                 <div class="content-info">
	//                     <span class="content-title t2 c2">{{ item.title }}</span>
	//                     <div class="content-status">
	//                         <span>活动时间：</span>
	//                         <span>{{ item.activity_start_at }}</span>
	//                     </div>
	//                 </div>
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item'],
	    data: function data() {
	        return {
	            flag: false
	        };
	    },
	    methods: {},
	    created: function created() {
	        if (this.item.img_url == '') {
	            this.flag = true;
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .content-wrapper {
	    //         display: block;
	    //     }
	    //     .contentMain {
	    //         width: 100%;
	    //         box-sizing: border-box;
	    //         padding: 15px 0;
	    //         border-bottom: 1px solid #f3f3f3;
	    //         overflow: hidden;
	    //         display: table;
	    //         outline: 0;
	    //     }
	    //     .content-pic-wrapper {
	    //         overflow: hidden;
	    //         position: relative;
	    //         width: 90px;
	    //         height: 68px;
	    //         line-height: 68px;
	    //         text-align: center;
	    //         margin-right: 10px;
	    //     }
	    //     .blueClass {
	    //         background-color: #a9ddff;
	    //     }
	    //     .activity_text {
	    //         position: absolute;
	    //         right: 0;
	    //         top: 0;
	    //         font-size: 10px;
	    //         height: 14px;
	    //         line-height: 14px;
	    //         z-index: 9;
	    //         color: #fff;
	    //         padding: 0 3px;
	    //         border-top-right-radius: 4px;
	    //     }
	    //     .c_green_normal {
	    //         background-color: rgba(9, 187, 7, 1);
	    //     }
	    //     .content-pic-default {
	    //         width: 24px;
	    //         height: 20px;
	    //         border-radius: 4px;
	    //     }
	    //     .content-pic {
	    //         width: 100%;
	    //         height: 100%;
	    //         border-radius: 4px;
	    //     }
	    //     .content-pic-default {
	    //         width: 24px;
	    //         height: 20px;
	    //         border-radius: 4px;
	    //     }
	    //     .content-info {
	    //         overflow: hidden;
	    //         box-sizing: border-box;
	    //         display: table-cell;
	    //         vertical-align: middle;
	    //     }
	    //     .content-title {
	    //         display: block;
	    //         max-height: 36px;
	    //         line-height: 18px;
	    //         margin-bottom: 35px;
	    //         overflow: hidden;
	    //         text-overflow: ellipsis;
	    //         display: -webkit-box;
	    //         -webkit-line-clamp: 2;
	    //         -webkit-box-orient: vertical;
	    //         word-break: break-all;
	    //         max-width: 240px;
	    //         text-overflow: ellipsis;
	    //         font-size: 14px;
	    //         color: #353535;
	    //     }
	    //     .content-status {
	    //         width: 240px;
	    //         height: 15px;
	    //         font-size: 12px;
	    //         color: #888888;
	    //     }
	    // </style>

	};

/***/ }),
/* 95 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"listWrapper\">\r\n        <div class=\"content-wrapper pressWrapper\">\r\n            <div class=\"contentMain\">\r\n                <div class=\"content-pic-wrapper\" :class=\"{blueClass:flag}\">\r\n                    <!--内容类型-->\r\n                    <span class=\"activity_text c_green_normal\">活动</span>\r\n                    <!--内容类型-->\r\n                    <img v-if=\"item.img_url || item.img_url_compressed\" class=\"content-pic\" :src=\"item.img_url || item.img_url_compressed\" />\r\n                    <img v-if=\"item.img_url==''\" class=\"content-pic-default\" src=\"/images/admin/shopDiy/icon-pic@2x.png\" />\r\n                </div>\r\n                <div class=\"content-info\">\r\n                    <span class=\"content-title t2 c2\">{{ item.title }}</span>\r\n                    <div class=\"content-status\">\r\n                        <span>活动时间：</span>\r\n                        <span>{{ item.activity_start_at }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 96 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"activity-part\">\r\n        <top_title :part_title=\"activity_part.part_title\" :show_all=\"show_all\"></top_title>\r\n        <div v-for=\"item in activity_data\">\r\n            <activity_item :item=\"item\"></activity_item>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(98)
	__vue_script__ = __webpack_require__(100)
	__vue_template__ = __webpack_require__(101)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\index_part_add.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(99);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-26ac419e&file=index_part_add.vue&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index_part_add.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-26ac419e&file=index_part_add.vue&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./index_part_add.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .main-title[_v-26ac419e] {\r\n        height: 22px;\r\n        line-height: 22px;\r\n        font-size: 16px;\r\n        text-align: center;\r\n        color: #353535;\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .operation-part[_v-26ac419e] {\r\n        padding: 0 11px;\r\n        background-color: #efeff4;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        font-size: 0;\r\n    }\r\n    .sub-title[_v-26ac419e] {\r\n        height: 20px;\r\n        line-height: 20px;\r\n        font-size: 14px;\r\n        color: #666666;\r\n        margin-bottom: 10px;\r\n    }\r\n    .wrapper[_v-26ac419e] {\r\n        padding-bottom: 15px;\r\n    }\r\n    .add-button[_v-26ac419e] {\r\n        display: inline-block;\r\n        font-size: 14px;\r\n        width: calc((100% - 15px) / 3);\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin-right: 5px;\r\n        margin-bottom: 5px;\r\n        border-radius: 2px;\r\n        background-color: #ffffff;\r\n        border: solid 1px #dedede;\r\n        text-align: center;\r\n        color: #2a75ed;\r\n        box-sizing: border-box;\r\n        cursor: pointer;\r\n    }\r\n    .add-button-wrapper[_v-26ac419e]:nth-child(3), .add-button-wrapper[_v-26ac419e]:nth-child(6) {\r\n        margin-right: 0;\r\n    }\r\n    .add-text-icon[_v-26ac419e] {\r\n        margin-right: 5px;\r\n        font-size: 16px;\r\n        font-weight: 700;\r\n    }\r\n    .cannot[_v-26ac419e] {\r\n        cursor: default;\r\n        color: #888888;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    props: ['add_module_part'],
	    data: function data() {
	        return {
	            all_module_part: [],
	            //所有模块的序号
	            all_module_arr: []
	        };
	    },
	    created: function created() {
	        _eventbus2.default.$on('delete_part', this.updateAddPart);
	    },
	    methods: {
	        addClick: function addClick(item, index) {
	            //如果添加的类型是分类导航、最新、问答，则只允许添加一个
	            var type = this.all_module_arr[index];
	            if (item.status !== 1 && (type == 2 || type == 5 || type == 7)) {
	                //                    alert(item.msg);
	                _eventbus2.default.$emit('show_top_prompt_tip', item.msg);
	            } else {
	                var parm = {
	                    index_sort: item.module,
	                    add_type: 1
	                };
	                _eventbus2.default.$emit('add_part', parm);
	                this.all_module_part.splice(index, 1, {
	                    module: type,
	                    status: 2,
	                    msg: "该模块已添加，不能继续添加"
	                });
	            }
	        },
	        updateAddPart: function updateAddPart(index_sort) {
	            for (var i = 0; i < this.all_module_arr.length; i++) {
	                if (index_sort === this.all_module_arr[i]) {
	                    this.all_module_part.splice(i, 1, {
	                        module: this.all_module_arr[i],
	                        status: 1,
	                        msg: "可添加"
	                    });
	                }
	            }
	        }
	    },
	    watch: {
	        add_module_part: function add_module_part() {
	            this.all_module_part = this.add_module_part;
	            this.all_module_arr = this.all_module_part.map(function (item) {
	                return item.module;
	            });
	        }
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .main-title {
	    //         height: 22px;
	    //         line-height: 22px;
	    //         font-size: 16px;
	    //         text-align: center;
	    //         color: #353535;
	    //         margin-top: 20px;
	    //         margin-bottom: 10px;
	    //     }
	    //     .operation-part {
	    //         padding: 0 11px;
	    //         background-color: #efeff4;
	    //         width: 100%;
	    //         box-sizing: border-box;
	    //         font-size: 0;
	    //     }
	    //     .sub-title {
	    //         height: 20px;
	    //         line-height: 20px;
	    //         font-size: 14px;
	    //         color: #666666;
	    //         margin-bottom: 10px;
	    //     }
	    //     .wrapper {
	    //         padding-bottom: 15px;
	    //     }
	    //     .add-button {
	    //         display: inline-block;
	    //         font-size: 14px;
	    //         width: calc((100% - 15px) / 3);
	    //         height: 40px;
	    //         line-height: 40px;
	    //         margin-right: 5px;
	    //         margin-bottom: 5px;
	    //         border-radius: 2px;
	    //         background-color: #ffffff;
	    //         border: solid 1px #dedede;
	    //         text-align: center;
	    //         color: #2a75ed;
	    //         box-sizing: border-box;
	    //         cursor: pointer;
	    //     }
	    //     .add-button-wrapper:nth-child(3), .add-button-wrapper:nth-child(6) {
	    //         margin-right: 0;
	    //     }
	    //     .add-text-icon {
	    //         margin-right: 5px;
	    //         font-size: 16px;
	    //         font-weight: 700;
	    //     }
	    //     .cannot {
	    //         cursor: default;
	    //         color: #888888;
	    //     }
	    // </style>

	}; // <template>
	//     <div class="index-part-add">
	//         <div class="main-title">添加模块</div>
	//         <div class="operation-part">
	//             <div class="wrapper">
	//                 <span class="add-button-wrapper" v-for="(item,index) in all_module_part">
	//                     <div class="add-button" :class="{'cannot':item.status!=1 && (all_module_arr[index] == 2 || all_module_arr[index] == 5 || all_module_arr[index] == 7) }" @click="addClick(item,index)">
	//                         <span v-if="item.module == 1"><span class="add-text-icon">+</span>轮播图</span>
	//                         <span v-if="item.module == 2"><span class="add-text-icon">+</span>分类导航</span>
	//                         <span v-if="item.module == 3"><span class="add-text-icon">+</span>社群</span>
	//                         <span v-if="item.module == 4"><span class="add-text-icon">+</span>频道</span>
	//                         <span v-if="item.module == 5"><span class="add-text-icon">+</span>问答</span>
	//                         <span v-if="item.module == 6"><span class="add-text-icon">+</span>直播</span>
	//                         <span v-if="item.module == 7"><span class="add-text-icon">+</span>最新</span>
	//                         <span v-if="item.module == 8"><span class="add-text-icon">+</span>活动</span>
	//                     </div>
	//                 </span>
	//             </div>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 101 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"index-part-add\" _v-26ac419e=\"\">\n        <div class=\"main-title\" _v-26ac419e=\"\">添加模块</div>\n        <div class=\"operation-part\" _v-26ac419e=\"\">\n            <div class=\"wrapper\" _v-26ac419e=\"\">\n                <span class=\"add-button-wrapper\" v-for=\"(item,index) in all_module_part\" _v-26ac419e=\"\">\n                    <div class=\"add-button\" :class=\"{'cannot':item.status!=1 &amp;&amp; (all_module_arr[index] == 2 || all_module_arr[index] == 5 || all_module_arr[index] == 7) }\" @click=\"addClick(item,index)\" _v-26ac419e=\"\">\n                        <span v-if=\"item.module == 1\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>轮播图</span>\n                        <span v-if=\"item.module == 2\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>分类导航</span>\n                        <span v-if=\"item.module == 3\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>社群</span>\n                        <span v-if=\"item.module == 4\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>频道</span>\n                        <span v-if=\"item.module == 5\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>问答</span>\n                        <span v-if=\"item.module == 6\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>直播</span>\n                        <span v-if=\"item.module == 7\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>最新</span>\n                        <span v-if=\"item.module == 8\" _v-26ac419e=\"\"><span class=\"add-text-icon\" _v-26ac419e=\"\">+</span>活动</span>\n                    </div>\n                </span>\n            </div>\n        </div>\n    </div>\n";

/***/ }),
/* 102 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Created by Neo on 2017/6/23.
	 */
	exports.init = function () {
	    var d = new Date().getTime();
	    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
	        var r = (d + Math.random() * 16) % 16 | 0;
	        d = Math.floor(d / 16);
	        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);
	    });
	    return uuid;
	};

/***/ }),
/* 103 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"index-part-drag\" _v-7a9e6f58=\"\">\n        <div class=\"navigation-bar\" @click=\"set_index_view(true)\" _v-7a9e6f58=\"\">\n            <img src=\"/images/admin/shopDiy/navigation-bar@2x.png?v1\" _v-7a9e6f58=\"\">\n            <span _v-7a9e6f58=\"\">{{index_name}}</span>\n        </div>\n        <!--可拖拽编辑区域-->\n        <draggable class=\"drag-group\" v-model=\"list\" :options=\"dragOptions\" :move=\"onMove\" @start=\"isDragging=true\" @end=\"isDragging=false\" _v-7a9e6f58=\"\">\n            <div class=\"drag-group-item\" @click=\"set_index_view(false)\" :class=\"{ cursor_move : version_type ===3 }\" v-for=\"(element,index) in list\" :key=\"element.order\" @mouseover=\"mouseOverShow(index)\" @click.stop=\"onEditClick(element,index)\" :id=\"'drag-group-item'+index\" _v-7a9e6f58=\"\">\n                <!--banner图模块-->\n                <banner v-if=\"element.index_sort == 1\" :banner_part=\"list[index].index_data\" _v-7a9e6f58=\"\"></banner>\n                <!--分类导航模块-->\n                <category v-else-if=\"element.index_sort == 2\" :category_part=\"index_local_data.category_part\" _v-7a9e6f58=\"\"></category>\n                <!--社群模块-->\n                <community v-else-if=\"element.index_sort == 3\" :community_part=\"list[index].index_data\" :default_community_part=\"index_local_data.community_part\" _v-7a9e6f58=\"\"></community>\n                <!--会员专栏模块-->\n                <member v-else-if=\"element.index_sort == 4\" :member_part=\"list[index].index_data\" :default_member_part=\"index_local_data.member_part\" _v-7a9e6f58=\"\"></member>\n                <!--问答模块-->\n                <question v-else-if=\"element.index_sort == 5\" :question_part=\"index_local_data.question_part\" _v-7a9e6f58=\"\"></question>\n                <!--直播模块-->\n                <alive v-else-if=\"element.index_sort == 6\" :alive_part=\"list[index].index_data\" :default_alive_part=\"index_local_data.alive_part\" _v-7a9e6f58=\"\"></alive>\n                <!--最新模块-->\n                <recommend v-else-if=\"element.index_sort == 7\" :recommend_part=\"index_local_data.recommend_part\" _v-7a9e6f58=\"\"></recommend>\n\n                <activity v-else-if=\"element.index_sort == 8\" :activity_part=\"list[index].index_data\" :default_activity_part=\"index_local_data.activity_part\" _v-7a9e6f58=\"\"></activity>\n\n                <!--悬浮编辑操作-->\n                <div class=\"actions\" v-show=\"isMouseActive==index\" _v-7a9e6f58=\"\">\n                    <div class=\"actions-wrap\" _v-7a9e6f58=\"\">\n                            <span v-if=\"element.index_sort == 1 ||  ((element.index_sort == 3 || element.index_sort == 4 ||  element.index_sort == 6 || element.index_sort == 8) &amp;&amp; version_type ===3)\n                                        \" class=\"action edit\" @click.stop=\"onEditClick(element,index)\" _v-7a9e6f58=\"\">编辑</span>\n                        <span v-if=\"version_type ===3\" class=\"action delete\" @click.stop=\"onDelete(index)\" _v-7a9e6f58=\"\">删除</span>\n                    </div>\n                    <div class=\"action-tip\" _v-7a9e6f58=\"\">\n                        <img src=\"/images/admin/shopDiy/icon-drag@2x.png\" _v-7a9e6f58=\"\">\n                    </div>\n                </div>\n\n\n            </div>\n        </draggable>\n        <!--增加模块区域-->\n        <index_part_add v-show=\"version_type === 3\" :add_module_part=\"add_module_part\" _v-7a9e6f58=\"\"></index_part_add>\n    </div>\n";

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(105)
	__vue_script__ = __webpack_require__(107)
	__vue_template__ = __webpack_require__(136)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\sidebar_part.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(106);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4011ba76&file=sidebar_part.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./sidebar_part.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4011ba76&file=sidebar_part.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./sidebar_part.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .app-sidebar-part {\r\n        padding: 10px;\r\n        min-height: 28px;\r\n        width: 100%;\r\n        background: #fafbfc;\r\n        border-radius: 4px;\r\n        border: 1px solid #e3e3e3;\r\n        position: relative;\r\n        z-index: 3;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _banner_sidebar = __webpack_require__(108);

	var _banner_sidebar2 = _interopRequireDefault(_banner_sidebar);

	var _module_choose_sidebar = __webpack_require__(126);

	var _module_choose_sidebar2 = _interopRequireDefault(_module_choose_sidebar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    data: function data() {
	        return {
	            //是否显示编辑框
	            show_sidebar: false,
	            //距顶部距离
	            topSize: 65,
	            //模块位置索引
	            index: 0,
	            //模块标号
	            index_sort: 0,
	            //模块数据
	            index_data: {},
	            //模块唯一标识id
	            index_data_id: '',
	            show_flag: true
	        };
	    },
	    created: function created() {
	        //显示编辑模块
	        _eventbus2.default.$on('sidebar_part_position', this.showEditPart);

	        //隐藏编辑模块
	        _eventbus2.default.$on('hide_edit_part', this.hideEditPart);
	    },
	    methods: {
	        //显示编辑模块
	        showEditPart: function showEditPart(obj) {

	            this.index_data_id = obj.index_data_id;

	            this.topSize = obj.topSize;
	            this.index = obj.index;
	            this.index_sort = obj.index_sort;
	            this.index_data = obj.index_data;
	            this.index_data_id = obj.index_data_id;

	            var index_sort = this.index_sort;
	            //只有这些模块能编辑
	            if (index_sort == 1 || index_sort == 3 || index_sort == 4 || index_sort == 6 || index_sort == 8) {
	                this.show_sidebar = true;
	                if (index_sort == 1) {
	                    this.show_flag = false;
	                    //为了兼容多个轮播版块，强制重新加载轮播sidebar --roam
	                    this.$nextTick(function () {
	                        this.show_flag = true;
	                    });
	                }
	            } else {
	                this.show_sidebar = false;
	            }
	        },
	        //隐藏编辑模块
	        hideEditPart: function hideEditPart() {
	            this.show_sidebar = false;
	        }
	    },
	    components: {
	        banner_sidebar: _banner_sidebar2.default,
	        module_choose_sidebar: _module_choose_sidebar2.default
	    }
	    // </script>
	    //
	    // <style>
	    //     .app-sidebar-part {
	    //         padding: 10px;
	    //         min-height: 28px;
	    //         width: 100%;
	    //         background: #fafbfc;
	    //         border-radius: 4px;
	    //         border: 1px solid #e3e3e3;
	    //         position: relative;
	    //         z-index: 3;
	    //     }
	    // </style>

	}; //
	// <template>
	//     <div class="app-sidebar-part" :style="{ marginTop: topSize + 'px' }" v-show="show_sidebar">
	//         <banner_sidebar
	//                 v-if="index_sort==1 && show_flag"
	//                 :index="index"
	//                 :index_sort="index_sort"
	//                 :index_data="index_data"
	//         ></banner_sidebar>
	//         <module_choose_sidebar
	//                 v-if="(index_sort==3 || index_sort==4 || index_sort==6 || index_sort==8 )"
	//                 :index="index"
	//                 :index_sort="index_sort"
	//                 :index_data="index_data"
	//         ></module_choose_sidebar>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(109)
	__vue_script__ = __webpack_require__(111)
	__vue_template__ = __webpack_require__(125)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\banner_part\\banner_sidebar.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(110);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-67eb29ce&file=banner_sidebar.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./banner_sidebar.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-67eb29ce&file=banner_sidebar.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./banner_sidebar.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .banner-sidebar[_v-67eb29ce] {\r\n        position: relative;\r\n    }\r\n    .sidebar-title[_v-67eb29ce] {\r\n        height: 20px;\r\n        line-height: 20px;\r\n        font-size: 14px;\r\n        color: #353535;\r\n        margin-bottom: 10px;\r\n    }\r\n    .flip-list-move[_v-67eb29ce] {\r\n        transition: -webkit-transform 0.5s;\r\n        transition: transform 0.5s;\r\n        transition: transform 0.5s, -webkit-transform 0.5s;\r\n    }\r\n\r\n    .ghost[_v-67eb29ce] {\r\n        opacity: .5;\r\n        background: #C8EBFB;\r\n    }\r\n\r\n    .drag-group-item[_v-67eb29ce] {\r\n        position: relative;\r\n        cursor: move;\r\n    }\r\n    .drag-group-item .show-tip-wrap[_v-67eb29ce] {\r\n        position: absolute;\r\n        top: -8px;\r\n        right: 0;\r\n        font-size: 0;\r\n        z-index: 4;\r\n    }\r\n    .show-tip-wrap img[_v-67eb29ce] {\r\n        display: inline-block;\r\n        width: 16px;\r\n        height: 16px;\r\n    }\r\n    .show-tip-wrap .delete[_v-67eb29ce] {\r\n        margin-left: 10px;\r\n        cursor: pointer;\r\n    }\r\n    .add-banner-item[_v-67eb29ce] {\r\n        width: 100%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        border-radius: 2px;\r\n        background-color: #ffffff;\r\n        border: dashed 1px #e5e5e5;\r\n        text-align: center;\r\n        margin-top: 20px;\r\n        cursor: pointer;\r\n    }\r\n    .add-banner-item img[_v-67eb29ce] {\r\n        width: 10px;\r\n        height: 10px;\r\n        margin-right: 10px;\r\n        vertical-align: middle;\r\n    }\r\n    .sidebar-tip[_v-67eb29ce] {\r\n        font-size: 14px;\r\n        text-align: left;\r\n        color: #888888;\r\n        height: 20px;\r\n        line-height: 20px;\r\n        margin: 10px 0;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _vuedraggable = __webpack_require__(16);

	var _vuedraggable2 = _interopRequireDefault(_vuedraggable);

	var _network = __webpack_require__(9);

	var _network2 = _interopRequireDefault(_network);

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _banner_drag_item = __webpack_require__(112);

	var _banner_drag_item2 = _interopRequireDefault(_banner_drag_item);

	var _loading = __webpack_require__(120);

	var _loading2 = _interopRequireDefault(_loading);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    props: ['index', 'index_sort', 'index_data'],
	    data: function data() {
	        return {
	            banner_list: this.index_data.list.map(function (item, index) {
	                return { banner_item: item, order: index + 1 };
	            }),
	            isDragging: false,
	            delayedDragging: false,
	            isActive: 0,
	            //请求跳转链接所有类型
	            skip_type_sort: [],
	            //请求跳转链接所有类型所对应的联动数据
	            skip_list: [[]],
	            is_show_banner_loading: false
	        };
	    },
	    created: function created() {
	        //轮播图子组件数据变化
	        _eventbus2.default.$on('banner_part_change', this.bannerPartChange);
	        var that = this;
	        that.is_show_banner_loading = true;
	        _network2.default.request("get_banner_resource", {}, function (data) {
	            if (parseInt(data.code) === 0) {
	                that.skip_type_sort = data.data.skip_type_sort;
	                that.skip_list = data.data.list;
	                that.is_show_banner_loading = false;
	            } else {
	                //                    alert('请求错误，请刷新页面重试');
	                _eventbus2.default.$emit('show_top_prompt_tip', '请求错误，请刷新页面重试');
	                that.is_show_banner_loading = false;
	            }
	        });
	    },
	    methods: {
	        onMove: function onMove() {},
	        mouseOverShow: function mouseOverShow(index) {
	            this.isActive = index;
	        },
	        //子组件数据改变
	        bannerPartChange: function bannerPartChange(obj) {
	            var index = obj.index;
	            var banner_item = obj.banner_item;
	            this.banner_list[index].banner_item = banner_item;
	        },
	        //新增banner图
	        addBannerItem: function addBannerItem() {

	            var that = this;

	            if (!that.skip_type_sort.length) {
	                //                    alert("数据加载中，请稍候");
	                _eventbus2.default.$emit('show_top_prompt_tip', '数据加载中，请稍候');
	                return;
	            }

	            if (that.banner_list.length < 12) {
	                var item = {
	                    banner_item: {
	                        id: "",
	                        title: "",
	                        image_url: "",
	                        img_url_compressed: "",
	                        //跳转类型，0-不跳转， 1-图文，2-音频，3-视频，4-圈子贴子，5-url, 6-专栏
	                        skip_type: 0,
	                        //跳转目的地,如果不是直接跳转的链接，就都是相应资源id
	                        skip_target: "",
	                        skip_title: ""
	                    },
	                    order: that.banner_list.length + 1
	                };
	                this.banner_list.push(item);
	            } else {
	                //                    alert("最多添加12张轮播图");
	                _eventbus2.default.$emit('show_top_prompt_tip', '最多添加12张轮播图');
	            }
	        },
	        //删除banner图
	        onDelete: function onDelete(index) {
	            this.banner_list.splice(index, 1);
	        }
	    },
	    computed: {
	        dragOptions: function dragOptions() {
	            return {
	                animation: 150,
	                group: 'banner',
	                ghostClass: 'ghost'
	            };
	        }
	    },
	    watch: {
	        isDragging: function isDragging(newValue) {
	            var _this = this;

	            if (newValue) {
	                this.delayedDragging = true;
	                return;
	            }
	            this.$nextTick(function () {
	                _this.delayedDragging = false;
	            });
	        },

	        index_data: function index_data() {
	            //handler(cur,old){
	            if (!this.index_data) {
	                return;
	            }
	            this.banner_list = this.index_data.list.map(function (item, index) {
	                return { banner_item: item, order: index + 1 };
	            });
	            //},
	            //deep:true
	        },

	        //监听数据同步给父组件
	        banner_list: function banner_list() {

	            var index_data = [];

	            var banner_list = this.banner_list;
	            for (var i = 0, j = banner_list.length; i < j; i++) {
	                index_data.push(banner_list[i].banner_item);
	            }

	            var parm = {
	                //模块的位置
	                module_index: this.index,
	                //模块内的资源列表
	                part_list: index_data,
	                index_sort: this.index_sort
	            };
	            _eventbus2.default.$emit('part_list_change', parm);
	        }
	    },
	    components: {
	        draggable: _vuedraggable2.default,
	        banner_drag_item: _banner_drag_item2.default,
	        loading: _loading2.default
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .banner-sidebar {
	    //         position: relative;
	    //     }
	    //     .sidebar-title {
	    //         height: 20px;
	    //         line-height: 20px;
	    //         font-size: 14px;
	    //         color: #353535;
	    //         margin-bottom: 10px;
	    //     }
	    //     .flip-list-move {
	    //         transition: transform 0.5s;
	    //     }
	    //
	    //     .ghost {
	    //         opacity: .5;
	    //         background: #C8EBFB;
	    //     }
	    //
	    //     .drag-group-item {
	    //         position: relative;
	    //         cursor: move;
	    //     }
	    //     .drag-group-item .show-tip-wrap {
	    //         position: absolute;
	    //         top: -8px;
	    //         right: 0;
	    //         font-size: 0;
	    //         z-index: 4;
	    //     }
	    //     .show-tip-wrap img {
	    //         display: inline-block;
	    //         width: 16px;
	    //         height: 16px;
	    //     }
	    //     .show-tip-wrap .delete {
	    //         margin-left: 10px;
	    //         cursor: pointer;
	    //     }
	    //     .add-banner-item {
	    //         width: 100%;
	    //         height: 40px;
	    //         line-height: 40px;
	    //         border-radius: 2px;
	    //         background-color: #ffffff;
	    //         border: dashed 1px #e5e5e5;
	    //         text-align: center;
	    //         margin-top: 20px;
	    //         cursor: pointer;
	    //     }
	    //     .add-banner-item img {
	    //         width: 10px;
	    //         height: 10px;
	    //         margin-right: 10px;
	    //         vertical-align: middle;
	    //     }
	    //     .sidebar-tip {
	    //         font-size: 14px;
	    //         text-align: left;
	    //         color: #888888;
	    //         height: 20px;
	    //         line-height: 20px;
	    //         margin: 10px 0;
	    //     }
	    // </style>

	}; // <template>
	//     <div class="banner-sidebar">
	//         <div class="sidebar-title">轮播图</div>
	//             <draggable class="drag-group" v-model="banner_list" :options="dragOptions" :move="onMove" @start="isDragging=true" @end="isDragging=false">
	//                     <div class="drag-group-item" v-for="(item,banner_list_index) in banner_list" :key="item.order"
	//                          @mouseover="mouseOverShow(banner_list_index)">
	//
	//                         <banner_drag_item
	//                                 :skip_type_sort="skip_type_sort"
	//                                 :skip_list="skip_list"
	//                                 :index="banner_list_index"
	//                                 :banner_item="item.banner_item"></banner_drag_item>
	//
	//                         <div class="show-tip-wrap" v-show="isActive==banner_list_index">
	//                             <img src="/images/admin/shopDiy/icon-drag-sidebar@2x.png"/>
	//                             <img @click="onDelete(banner_list_index)" class="delete" src="/images/admin/shopDiy/icon-close@2x.png"/>
	//                         </div>
	//
	//                     </div>
	//             </draggable>
	//         <div class="add-banner-item" @click="addBannerItem">
	//             <img src="/images/admin/shopDiy/icon-add-sidebar@2x.png"><span>添加轮播图</span>
	//         </div>
	//         <div class="sidebar-tip">最多添加12张轮播图</div>
	//         <loading v-show="is_show_banner_loading"></loading>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(113)
	__vue_script__ = __webpack_require__(115)
	__vue_template__ = __webpack_require__(119)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\banner_part\\banner_drag_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(114);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4efb13a0&file=banner_drag_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./banner_drag_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-4efb13a0&file=banner_drag_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./banner_drag_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .banner_drag_item {\r\n        width: 100%;\r\n        height: 102px;\r\n        border-radius: 2px;\r\n        background-color: #ffffff;\r\n        border: solid 1px #e3e3e3;\r\n        margin-bottom: 10px;\r\n        padding: 10px;\r\n    }\r\n    .banner_drag_item .image-part {\r\n        position: relative;\r\n        float: left;\r\n        width: 212px;\r\n        height: 80px;\r\n        border: solid 1px #e5e5e5;\r\n        text-align: center;\r\n        cursor: pointer;\r\n    }\r\n    .banner_drag_item .image-part img {\r\n        width: 100%;\r\n        height: 100%;\r\n        cursor: pointer;\r\n    }\r\n    .banner_drag_item .image-part .tip-wrapper {\r\n        width: 100%;\r\n        margin-top: 18px;\r\n    }\r\n    .banner_drag_item .image-part .tip-wrapper img {\r\n        width: 24px;\r\n        height: 24px;\r\n    }\r\n    .banner_drag_item .image-part .tip-wrapper .tip-text {\r\n        font-size: 12px;\r\n        color: #b2b2b2;\r\n        text-align: center;\r\n    }\r\n\r\n    .other-part {\r\n        float: left;\r\n        margin-left: 10px;\r\n        box-sizing: border-box;\r\n    }\r\n    .other-part-top {\r\n        margin-bottom: 10px;\r\n    }\r\n    .other-part-bottom {\r\n        width: 312px;\r\n        overflow: hidden;\r\n    }\r\n    .title-input {\r\n        width: 244px;\r\n        height: 36px;\r\n        margin-left: 35px;\r\n        border: 1px solid #e5e5e5;\r\n        padding: 0 10px;\r\n    }\r\n    .out-link-input {\r\n        width: 137px;\r\n        height: 34px;\r\n        font-size: 12px;\r\n        border: 1px solid #e5e5e5;\r\n        border-radius: 4px;\r\n        padding: 0 10px;\r\n    }\r\n    .pic_input_banner {\r\n        position: absolute;\r\n        opacity: 0;\r\n        width: 212px;\r\n        height: 80px;\r\n        top: 0;\r\n        left: 0;\r\n        cursor: pointer;\r\n    }\r\n    .pic_close_banner {\r\n        position: absolute;\r\n        top: 0;\r\n        right:0;\r\n        width: 16px !important;\r\n        height: 16px !important;\r\n        cursor: pointer !important;\r\n    }\r\n    .skip-part-title {\r\n        height: 36px;\r\n        line-height: 36px;\r\n        margin-right: 11px;\r\n        font-size: 14px;\r\n        color: #353535;\r\n    }\r\n    input:focus {\r\n        outline:none;\r\n        border: 1px solid #a9ddff;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _banner_img_upload = __webpack_require__(116);

	var _banner_img_upload2 = _interopRequireDefault(_banner_img_upload);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <template>
	//     <div class="banner_drag_item">
	//         <!--轮播图上传组件-->
	//         <banner_img_upload :banner_inside_item="banner_inside_item" :index="index"></banner_img_upload>
	//
	//         <div class="other-part">
	//             <div class="other-part-top">
	//                 <span class="other-part-title">标题</span>
	//                 <input class="title-input" v-model="banner_inside_item.title" placeholder="请输入标题" maxlength="20"/>
	//             </div>
	//             <div class="other-part-bottom">
	//                 <div style="float: left">
	//                     <span class="skip-part-title">跳转链接</span>
	//                 </div>
	//                 <div style="float: left">
	//                     <select class="form-control" v-model="selectTypeValue" @change="selectSkipType">
	//                         <option v-for="option in skip_type_sort" v-bind:value="option">
	//                             <span v-if="option==0">不跳转</span>
	//                             <span v-if="option==1">图文</span>
	//                             <span v-if="option==2">音频</span>
	//                             <span v-if="option==3">视频</span>
	//                             <span v-if="option==4">直播</span>
	//                             <span v-if="option==5">外部链接</span>
	//                             <span v-if="option==6">专栏</span>
	//                         </option>
	//                     </select>
	//                 </div>
	//                 <div style="float: left;margin-left: 10px;overflow: hidden;width: 137px">
	//                     <select v-show="selectTypeValue!=5 && selectTypeValue!=0" class="form-control" v-model="selectTargetValue" @change="selectSkipTarget" style="width: 137px">
	//                         <option v-for="option in skip_list[skip_type_sort_index]" v-bind:value="option.skip_target">
	//                             {{ option.skip_title }}
	//                         </option>
	//                     </select>
	//                     <input v-show="selectTypeValue==5" class="out-link-input" v-model="banner_inside_item.skip_target" placeholder="请输入外部链接"/>
	//                 </div>
	//             </div>
	//         </div>
	//         <div style="clear: both"></div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['index', 'banner_item', 'skip_type_sort', 'skip_list'],
	    data: function data() {
	        return {
	            banner_inside_item: this.banner_item,
	            //联动数据的下标
	            skip_type_sort_index: 0,
	            //新增时默认选择的类型 或者 显示已选择的类型
	            selectTypeValue: this.banner_item.skip_type,
	            //新增时默认选择的跳转标题 或者 显示已选择的跳转标题
	            selectTargetValue: this.banner_item.skip_target,
	            selectTitleValue: this.banner_item.skip_title
	        };
	    },
	    created: function created() {
	        this.banner_inside_item.skip_type = this.selectTypeValue;
	        this.banner_inside_item.skip_target = this.selectTargetValue;
	        this.banner_inside_item.skip_title = this.selectTitleValue;
	    },
	    methods: {
	        //检测selectTypeValue值的变化
	        selectSkipType: function selectSkipType() {

	            var skip_target = '';
	            var skip_title = '';

	            if (this.selectTypeValue !== 5 && this.selectTypeValue !== 0) {
	                //联动变化
	                //用户选择的skip_type_sort类型的下标
	                this.skip_type_sort_index = this.skip_type_sort.indexOf(parseInt(this.selectTypeValue));

	                //默认选择第一个skip_title
	                if (this.skip_list && this.skip_list.length && this.skip_list[this.skip_type_sort_index].length) {
	                    this.selectTargetValue = this.skip_list[this.skip_type_sort_index][0].skip_target;
	                    //变化后赋值给banner_inside_item
	                    skip_target = this.selectTargetValue;
	                    skip_title = this.skip_list[this.skip_type_sort_index][0].skip_title;
	                }
	            }
	            if (skip_target == '' && this.selectTargetValue != '') {
	                skip_target = this.selectTargetValue;
	            }
	            //变化后赋值给banner_inside_item
	            this.banner_inside_item.skip_type = parseInt(this.selectTypeValue);
	            this.banner_inside_item.skip_target = skip_target;
	            this.banner_inside_item.skip_title = skip_title;
	        },
	        //检测selectTargetValue值的变化
	        selectSkipTarget: function selectSkipTarget() {
	            //变化后赋值给banner_inside_item
	            this.banner_inside_item.skip_target = this.selectTargetValue;
	            for (var i = 0; i < this.skip_list[this.skip_type_sort_index].length; i++) {
	                if (this.skip_list[this.skip_type_sort_index][i].skip_target === this.selectTargetValue) {
	                    this.banner_inside_item.skip_title = this.skip_list[this.skip_type_sort_index][i].skip_title;
	                    break;
	                }
	            }
	        }
	    },
	    watch: {
	        //传回父组件
	        banner_inside_item: {
	            handler: function handler() {

	                this.banner_inside_item.skip_title = "111";

	                var parm = {
	                    index: this.index,
	                    banner_item: this.banner_inside_item
	                };
	                _eventbus2.default.$emit('banner_part_change', parm);
	            },
	            deep: true
	        },
	        //监听异步请求的数据
	        skip_type_sort: function skip_type_sort() {
	            this.skip_type_sort_index = this.skip_type_sort.indexOf(parseInt(this.selectTypeValue));
	        }
	    },
	    components: {
	        banner_img_upload: _banner_img_upload2.default
	    }
	    // </script>
	    //
	    // <style>
	    //     .banner_drag_item {
	    //         width: 100%;
	    //         height: 102px;
	    //         border-radius: 2px;
	    //         background-color: #ffffff;
	    //         border: solid 1px #e3e3e3;
	    //         margin-bottom: 10px;
	    //         padding: 10px;
	    //     }
	    //     .banner_drag_item .image-part {
	    //         position: relative;
	    //         float: left;
	    //         width: 212px;
	    //         height: 80px;
	    //         border: solid 1px #e5e5e5;
	    //         text-align: center;
	    //         cursor: pointer;
	    //     }
	    //     .banner_drag_item .image-part img {
	    //         width: 100%;
	    //         height: 100%;
	    //         cursor: pointer;
	    //     }
	    //     .banner_drag_item .image-part .tip-wrapper {
	    //         width: 100%;
	    //         margin-top: 18px;
	    //     }
	    //     .banner_drag_item .image-part .tip-wrapper img {
	    //         width: 24px;
	    //         height: 24px;
	    //     }
	    //     .banner_drag_item .image-part .tip-wrapper .tip-text {
	    //         font-size: 12px;
	    //         color: #b2b2b2;
	    //         text-align: center;
	    //     }
	    //
	    //     .other-part {
	    //         float: left;
	    //         margin-left: 10px;
	    //         box-sizing: border-box;
	    //     }
	    //     .other-part-top {
	    //         margin-bottom: 10px;
	    //     }
	    //     .other-part-bottom {
	    //         width: 312px;
	    //         overflow: hidden;
	    //     }
	    //     .title-input {
	    //         width: 244px;
	    //         height: 36px;
	    //         margin-left: 35px;
	    //         border: 1px solid #e5e5e5;
	    //         padding: 0 10px;
	    //     }
	    //     .out-link-input {
	    //         width: 137px;
	    //         height: 34px;
	    //         font-size: 12px;
	    //         border: 1px solid #e5e5e5;
	    //         border-radius: 4px;
	    //         padding: 0 10px;
	    //     }
	    //     .pic_input_banner {
	    //         position: absolute;
	    //         opacity: 0;
	    //         width: 212px;
	    //         height: 80px;
	    //         top: 0;
	    //         left: 0;
	    //         cursor: pointer;
	    //     }
	    //     .pic_close_banner {
	    //         position: absolute;
	    //         top: 0;
	    //         right:0;
	    //         width: 16px !important;
	    //         height: 16px !important;
	    //         cursor: pointer !important;
	    //     }
	    //     .skip-part-title {
	    //         height: 36px;
	    //         line-height: 36px;
	    //         margin-right: 11px;
	    //         font-size: 14px;
	    //         color: #353535;
	    //     }
	    //     input:focus {
	    //         outline:none;
	    //         border: 1px solid #a9ddff;
	    //     }
	    // </style>

	};

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__vue_script__ = __webpack_require__(117)
	__vue_template__ = __webpack_require__(118)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\banner_part\\banner_img_upload.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//

	exports.default = {
	    props: ['banner_inside_item', 'index'],
	    data: function data() {
	        return {
	            file: null,
	            banner_item: this.banner_inside_item
	        };
	    },
	    created: function created() {},
	    methods: {
	        //上传图片
	        uploadImage: function uploadImage(e) {
	            var targetDom = e.target;
	            var that = this;
	            if (targetDom.files && targetDom.files.length) {
	                var file = targetDom.files[0];
	                var limitSize = 2;

	                var imgName = file.name;
	                //alert(imgName);
	                var ext, idx;
	                idx = imgName.lastIndexOf(".");
	                if (idx != -1) {
	                    ext = imgName.substr(idx + 1).toUpperCase();
	                    ext = ext.toLowerCase();
	                    //alert(file);
	                    //alert("后缀="+ext+"位置="+idx+"路径="+resourceLocalUrl);
	                    if (ext != 'jpg' && ext != 'png' && ext != 'jpeg' && ext != 'gif') {
	                        //document.all.submit_upload.disabled=true;
	                        baseUtils.show.blueTip("请上传图片类型的文件哦~");
	                        //alert("2.只能上传.jpg  .png  .jpeg  .gif类型的文件!");
	                        return;
	                    }
	                } else {
	                    document.all.submit_upload.disabled = true;
	                    baseUtils.show.blueTip("请上传图片类型的文件哦~");
	                    //alert("只能上传.jpg  .png  .jpeg  .gif类型的文件!");
	                    return;
	                }

	                if (that.checkFileSize(file, limitSize)) {
	                    this.file = file;
	                    $uploadFile.uploadPic(file,
	                    // 成功回调
	                    function (data) {
	                        //                            console.log(data.data.access_url)
	                        var img_url = data.data.access_url;
	                        that.banner_item.image_url = img_url;
	                    }, function (data) {
	                        alert("上传失败!");
	                    });
	                } else {
	                    alert("上传图片大小限制为" + limitSize + "MB");
	                }
	            }
	        },
	        //检查图片大小
	        checkFileSize: function checkFileSize(file, limitSize) {
	            var fileSize = (file.size / (1024 * 1024)).toFixed(3);
	            if (fileSize > limitSize) {
	                return false;
	            }
	            return true;
	        },
	        //清除图片
	        clearFile: function clearFile() {
	            document.querySelectorAll('input[type="file"]')[this.index].value = '';
	            this.file = null;
	            this.banner_item.image_url = '';
	        }
	    }

	    // </script>
	    //
	    //
	    //

	}; // <template>
	//     <div class="image-part">
	//         <div v-show="!banner_item.image_url" class="tip-wrapper">
	//             <img src="/images/admin/shopDiy/icon-pic-sidebar@2x.png"/>
	//             <div class="tip-text">添加图片，建议尺寸：750*280px</div>
	//         </div>
	//         <img v-show="banner_item.image_url" :src="banner_inside_item.image_url" />
	//
	//         <input @change="uploadImage" type="file" class="pic_input_banner" value="" accept="image/jpeg,image/png,image/gif,image/bmp"/>
	//
	//         <img v-show="banner_item.image_url" @click="clearFile" src="/images/admin/shopDiy/icon-close@2x.png" class="pic_close_banner"/>
	//
	//     </div>
	// </template>
	//
	//
	// <script>

/***/ }),
/* 118 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"image-part\">\n        <div v-show=\"!banner_item.image_url\" class=\"tip-wrapper\">\n            <img src=\"/images/admin/shopDiy/icon-pic-sidebar@2x.png\"/>\n            <div class=\"tip-text\">添加图片，建议尺寸：750*280px</div>\n        </div>\n        <img v-show=\"banner_item.image_url\" :src=\"banner_inside_item.image_url\" />\n\n        <input @change=\"uploadImage\" type=\"file\" class=\"pic_input_banner\" value=\"\" accept=\"image/jpeg,image/png,image/gif,image/bmp\"/>\n\n        <img v-show=\"banner_item.image_url\" @click=\"clearFile\" src=\"/images/admin/shopDiy/icon-close@2x.png\" class=\"pic_close_banner\"/>\n\n    </div>\n";

/***/ }),
/* 119 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"banner_drag_item\">\r\n        <!--轮播图上传组件-->\r\n        <banner_img_upload :banner_inside_item=\"banner_inside_item\" :index=\"index\"></banner_img_upload>\r\n\r\n        <div class=\"other-part\">\r\n            <div class=\"other-part-top\">\r\n                <span class=\"other-part-title\">标题</span>\r\n                <input class=\"title-input\" v-model=\"banner_inside_item.title\" placeholder=\"请输入标题\" maxlength=\"20\"/>\r\n            </div>\r\n            <div class=\"other-part-bottom\">\r\n                <div style=\"float: left\">\r\n                    <span class=\"skip-part-title\">跳转链接</span>\r\n                </div>\r\n                <div style=\"float: left\">\r\n                    <select class=\"form-control\" v-model=\"selectTypeValue\" @change=\"selectSkipType\">\r\n                        <option v-for=\"option in skip_type_sort\" v-bind:value=\"option\">\r\n                            <span v-if=\"option==0\">不跳转</span>\r\n                            <span v-if=\"option==1\">图文</span>\r\n                            <span v-if=\"option==2\">音频</span>\r\n                            <span v-if=\"option==3\">视频</span>\r\n                            <span v-if=\"option==4\">直播</span>\r\n                            <span v-if=\"option==5\">外部链接</span>\r\n                            <span v-if=\"option==6\">专栏</span>\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div style=\"float: left;margin-left: 10px;overflow: hidden;width: 137px\">\r\n                    <select v-show=\"selectTypeValue!=5 && selectTypeValue!=0\" class=\"form-control\" v-model=\"selectTargetValue\" @change=\"selectSkipTarget\" style=\"width: 137px\">\r\n                        <option v-for=\"option in skip_list[skip_type_sort_index]\" v-bind:value=\"option.skip_target\">\r\n                            {{ option.skip_title }}\r\n                        </option>\r\n                    </select>\r\n                    <input v-show=\"selectTypeValue==5\" class=\"out-link-input\" v-model=\"banner_inside_item.skip_target\" placeholder=\"请输入外部链接\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div style=\"clear: both\"></div>\r\n    </div>\r\n";

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(121)
	__vue_script__ = __webpack_require__(123)
	__vue_template__ = __webpack_require__(124)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\globalWidget\\loading.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(122);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-91bad160&file=loading.vue&scoped=true!../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading.vue", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-91bad160&file=loading.vue&scoped=true!../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .global-widget-loading[_v-91bad160]{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: center;\r\n        z-index: 998;\r\n        background: hsla(0,0%,100%,.9);\r\n    }\r\n    .loading-content[_v-91bad160]{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 90px;\r\n        top: 50%;\r\n        left: 50%;\r\n        margin-left: -45px;\r\n        margin-top: -50px;\r\n        background: hsla(0,0%,100%,.9)\r\n    }\r\n    .global-widget-loading .loadingText[_v-91bad160] {\r\n        text-align: center;\r\n        color: #20a0ff;\r\n        margin: 3px 0;\r\n        font-size: 14px\r\n    }\r\n\r\n    .global-widget-loading .circular[_v-91bad160] {\r\n        width: 42px;\r\n        height: 42px;\r\n        -webkit-animation: loading-rotate 2s linear infinite;\r\n        animation: loading-rotate 2s linear infinite\r\n    }\r\n\r\n    .global-widget-loading .path[_v-91bad160] {\r\n        stroke-dasharray: 90, 150;\r\n        stroke-dashoffset: 0;\r\n        stroke-width: 2;\r\n        stroke: #20a0ff;\r\n        stroke-linecap: round;\r\n        -webkit-animation: loading-dash 1.5s ease-in-out infinite;\r\n        animation: loading-dash 1.5s ease-in-out infinite\r\n    }\r\n\r\n    @keyframes loading-dash {\r\n        0% {\r\n            stroke-dasharray: 1, 200;\r\n            stroke-dashoffset: 0\r\n        }\r\n        50% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -40px\r\n        }\r\n        100% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -120px\r\n        }\r\n    }\r\n\r\n    @-webkit-keyframes loading-dash {\r\n        0% {\r\n            stroke-dasharray: 1, 200;\r\n            stroke-dashoffset: 0\r\n        }\r\n        50% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -40px\r\n        }\r\n        100% {\r\n            stroke-dasharray: 90, 150;\r\n            stroke-dashoffset: -120px\r\n        }\r\n    }\r\n\r\n    @keyframes loading-rotate {\r\n        100% {\r\n            -webkit-transform: rotate(1turn);\r\n            transform: rotate(1turn)\r\n        }\r\n    }\r\n\r\n    @-webkit-keyframes loading-rotate {\r\n        100% {\r\n            -webkit-transform: rotate(1turn);\r\n            transform: rotate(1turn)\r\n        }\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 123 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <!-- 正在加载组件 -->
	// <template>
	//     <div class="global-widget-loading">
	//         <div class="loading-content">
	//             <svg viewBox="25 25 50 50" class="circular">
	//                 <circle cx="50" cy="50" r="20" fill="none" class="path"></circle>
	//             </svg>
	//             <p class="loadingText">{{tip_txt || '加载中'}}</p>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['tip_txt']
	    // </script>
	    //
	    // <style scoped>
	    //     .global-widget-loading{
	    //         position: absolute;
	    //         left: 0;
	    //         top: 0;
	    //         width: 100%;
	    //         height: 100%;
	    //         text-align: center;
	    //         z-index: 998;
	    //         background: hsla(0,0%,100%,.9);
	    //     }
	    //     .loading-content{
	    //         position: absolute;
	    //         width: 100px;
	    //         height: 90px;
	    //         top: 50%;
	    //         left: 50%;
	    //         margin-left: -45px;
	    //         margin-top: -50px;
	    //         background: hsla(0,0%,100%,.9)
	    //     }
	    //     .global-widget-loading .loadingText {
	    //         text-align: center;
	    //         color: #20a0ff;
	    //         margin: 3px 0;
	    //         font-size: 14px
	    //     }
	    //
	    //     .global-widget-loading .circular {
	    //         width: 42px;
	    //         height: 42px;
	    //         -webkit-animation: loading-rotate 2s linear infinite;
	    //         animation: loading-rotate 2s linear infinite
	    //     }
	    //
	    //     .global-widget-loading .path {
	    //         stroke-dasharray: 90, 150;
	    //         stroke-dashoffset: 0;
	    //         stroke-width: 2;
	    //         stroke: #20a0ff;
	    //         stroke-linecap: round;
	    //         -webkit-animation: loading-dash 1.5s ease-in-out infinite;
	    //         animation: loading-dash 1.5s ease-in-out infinite
	    //     }
	    //
	    //     @keyframes loading-dash {
	    //         0% {
	    //             stroke-dasharray: 1, 200;
	    //             stroke-dashoffset: 0
	    //         }
	    //         50% {
	    //             stroke-dasharray: 90, 150;
	    //             stroke-dashoffset: -40px
	    //         }
	    //         100% {
	    //             stroke-dasharray: 90, 150;
	    //             stroke-dashoffset: -120px
	    //         }
	    //     }
	    //
	    //     @-webkit-keyframes loading-dash {
	    //         0% {
	    //             stroke-dasharray: 1, 200;
	    //             stroke-dashoffset: 0
	    //         }
	    //         50% {
	    //             stroke-dasharray: 90, 150;
	    //             stroke-dashoffset: -40px
	    //         }
	    //         100% {
	    //             stroke-dasharray: 90, 150;
	    //             stroke-dashoffset: -120px
	    //         }
	    //     }
	    //
	    //     @keyframes loading-rotate {
	    //         100% {
	    //             -webkit-transform: rotate(1turn);
	    //             transform: rotate(1turn)
	    //         }
	    //     }
	    //
	    //     @-webkit-keyframes loading-rotate {
	    //         100% {
	    //             -webkit-transform: rotate(1turn);
	    //             transform: rotate(1turn)
	    //         }
	    //     }
	    // </style>
	    //

	};

/***/ }),
/* 124 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"global-widget-loading\" _v-91bad160=\"\">\n        <div class=\"loading-content\" _v-91bad160=\"\">\n            <svg viewBox=\"25 25 50 50\" class=\"circular\" _v-91bad160=\"\">\n                <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" class=\"path\" _v-91bad160=\"\"></circle>\n            </svg>\n            <p class=\"loadingText\" _v-91bad160=\"\">{{tip_txt || '加载中'}}</p>\n        </div>\n    </div>\n";

/***/ }),
/* 125 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"banner-sidebar\" _v-67eb29ce=\"\">\n        <div class=\"sidebar-title\" _v-67eb29ce=\"\">轮播图</div>\n            <draggable class=\"drag-group\" v-model=\"banner_list\" :options=\"dragOptions\" :move=\"onMove\" @start=\"isDragging=true\" @end=\"isDragging=false\" _v-67eb29ce=\"\">\n                    <div class=\"drag-group-item\" v-for=\"(item,banner_list_index) in banner_list\" :key=\"item.order\" @mouseover=\"mouseOverShow(banner_list_index)\" _v-67eb29ce=\"\">\n\n                        <banner_drag_item :skip_type_sort=\"skip_type_sort\" :skip_list=\"skip_list\" :index=\"banner_list_index\" :banner_item=\"item.banner_item\" _v-67eb29ce=\"\"></banner_drag_item>\n\n                        <div class=\"show-tip-wrap\" v-show=\"isActive==banner_list_index\" _v-67eb29ce=\"\">\n                            <img src=\"/images/admin/shopDiy/icon-drag-sidebar@2x.png\" _v-67eb29ce=\"\">\n                            <img @click=\"onDelete(banner_list_index)\" class=\"delete\" src=\"/images/admin/shopDiy/icon-close@2x.png\" _v-67eb29ce=\"\">\n                        </div>\n\n                    </div>\n            </draggable>\n        <div class=\"add-banner-item\" @click=\"addBannerItem\" _v-67eb29ce=\"\">\n            <img src=\"/images/admin/shopDiy/icon-add-sidebar@2x.png\" _v-67eb29ce=\"\"><span _v-67eb29ce=\"\">添加轮播图</span>\n        </div>\n        <div class=\"sidebar-tip\" _v-67eb29ce=\"\">最多添加12张轮播图</div>\n        <loading v-show=\"is_show_banner_loading\" _v-67eb29ce=\"\"></loading>\n    </div>\n";

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(127)
	__vue_script__ = __webpack_require__(129)
	__vue_template__ = __webpack_require__(135)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\module_choose\\module_choose_sidebar.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(128);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-045a0354&file=module_choose_sidebar.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./module_choose_sidebar.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-045a0354&file=module_choose_sidebar.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./module_choose_sidebar.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .flip-list-move[_v-045a0354] {\r\n        transition: -webkit-transform 0.5s;\r\n        transition: transform 0.5s;\r\n        transition: transform 0.5s, -webkit-transform 0.5s;\r\n    }\r\n\r\n    .ghost[_v-045a0354] {\r\n        opacity: .5;\r\n        background: #C8EBFB;\r\n    }\r\n\r\n    .drag-group-item[_v-045a0354] {\r\n        position: relative;\r\n        cursor: move;\r\n    }\r\n    .resource-sidebar[_v-045a0354] {\r\n        padding: 10px 0;\r\n    }\r\n    .resource-sidebar-title[_v-045a0354] {\r\n        width: 100%;\r\n        height: 36px;\r\n        line-height: 36px;\r\n    }\r\n    .resource-sidebar-text[_v-045a0354] {\r\n        float: left;\r\n        width: 70px;\r\n        margin-right: 20px;\r\n    }\r\n    .resource-title-input[_v-045a0354] {\r\n        float: left;\r\n        display: block;\r\n        width: 468px;\r\n        height: 100%;\r\n        border: 1px solid #e5e5e5;\r\n        padding: 0 10px;\r\n    }\r\n    .resource-sidebar-rule[_v-045a0354] {\r\n        width: 100%;\r\n        height: 80px;\r\n        margin-top: 30px;\r\n    }\r\n    .resource-sidebar-radio[_v-045a0354] {\r\n        float: left;\r\n        width: 468px;\r\n        height: 100%;\r\n        margin-top: -6px;\r\n        margin-left: -3px;\r\n    }\r\n    .resource-sidebar-action[_v-045a0354] {\r\n        width: 466px;\r\n        margin-left: 90px;\r\n        border-radius: 2px;\r\n        background-color: #ffffff;\r\n        border: solid 1px #e5e5e5;\r\n        padding: 10px;\r\n    }\r\n    .resource-sidebar-choose[_v-045a0354] {\r\n        width: 92px;\r\n        height: 34px;\r\n        line-height: 34px;\r\n        border-radius: 2px;\r\n        border: dashed 1px #2a75ed;\r\n        font-size: 14px;\r\n        color: #2a75ed;\r\n        text-align: center;\r\n        margin-bottom: 15px;\r\n        cursor: pointer;\r\n    }\r\n    .resource-sidebar-choose img[_v-045a0354] {\r\n        width: 10px;\r\n        height: 10px;\r\n        margin-right: 10px;\r\n        vertical-align: middle;\r\n        margin-top: -3px;\r\n    }\r\n    .blueColor[_v-045a0354] {\r\n        background-color: #f6faff;\r\n    }\r\n    .resource-show-tip-wrap[_v-045a0354] {\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 10px;\r\n        margin-top: -6px;\r\n        font-size: 0;\r\n        z-index: 4;\r\n    }\r\n    .resource-show-tip-wrap img[_v-045a0354] {\r\n        display: inline-block;\r\n        width: 12px;\r\n        height: 12px;\r\n    }\r\n    .resource-show-tip-wrap .delete[_v-045a0354] {\r\n        margin-left: 10px;\r\n        cursor: pointer;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _vuedraggable = __webpack_require__(16);

	var _vuedraggable2 = _interopRequireDefault(_vuedraggable);

	var _resource_drag_item = __webpack_require__(130);

	var _resource_drag_item2 = _interopRequireDefault(_resource_drag_item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//    拖拽模块
	exports.default = {
	    props: ['index', 'index_sort', 'index_data'],
	    data: function data() {
	        return {
	            //子组件数据
	            inside_data: {
	                part_title: this.index_data.part_title,
	                status: this.index_data.status,
	                //资源列表数据
	                resource_list: this.index_data.list.map(function (item, index) {
	                    return { resource_item: item, order: index + 1 };
	                })
	            },
	            isDragging: false,
	            delayedDragging: false,
	            isActive: 0
	        };
	    },
	    created: function created() {
	        //增加资源到编辑栏
	        _eventbus2.default.$on("add_list_to_sidebar", this.addListToSidebar);
	    },
	    methods: {
	        //添加列表资源
	        addListToSidebar: function addListToSidebar(obj) {

	            var resource_list_length = this.inside_data.resource_list.length;

	            //增加显示资源
	            var temp = obj.need_add_data_list.map(function (item, index) {
	                return { resource_item: item, order: resource_list_length + index + 1 };
	            });

	            //增加资源的时候改为自定义
	            if (temp.length > 0) {
	                var status = this.inside_data.status;
	                if (!parseInt(status)) {
	                    this.inside_data.status = 1;
	                }
	            }
	            this.inside_data.resource_list = this.inside_data.resource_list.concat(temp);
	        },
	        //删除列表资源
	        deleteListResource: function deleteListResource(index) {
	            //删除显示的资源
	            this.inside_data.resource_list.splice(index, 1);

	            if (this.inside_data.resource_list.length === 0) {
	                this.inside_data.status = 0;
	            }
	        },
	        //选择资源，显示搜索框
	        chooseResource: function chooseResource() {
	            var parm = {
	                index: this.index,
	                index_sort: this.index_sort,
	                index_data: this.index_data
	            };
	            //显示资源搜索框
	            _eventbus2.default.$emit('is_show_choose_box', parm);
	        },
	        onMove: function onMove() {},
	        mouseOverShow: function mouseOverShow(index) {
	            this.isActive = index;
	        }

	    },
	    computed: {
	        dragOptions: function dragOptions() {
	            return {
	                animation: 150,
	                group: 'alive',
	                ghostClass: 'ghost'
	            };
	        },

	        //选择资源按键标题
	        chooseText: function chooseText() {
	            var chooseText = "";
	            var index_sort = this.index_sort;
	            if (index_sort == 3) {
	                chooseText = '选择社群';
	            } else if (index_sort == 4) {
	                chooseText = '选择频道';
	            } else if (index_sort == 6) {
	                chooseText = '选择直播';
	            }
	            return chooseText;
	        }
	    },
	    watch: {
	        //子组件增删改后同步给父组件
	        inside_data: {
	            handler: function handler() {
	                var part_list = [];

	                //还原回列表数据，同步给父组件
	                var resource_list = this.inside_data.resource_list;
	                for (var i = 0, j = resource_list.length; i < j; i++) {
	                    part_list.push(resource_list[i].resource_item);
	                }

	                var parm = {
	                    //模块的位置
	                    module_index: this.index,
	                    //模块内的资源列表
	                    part_list: part_list,
	                    index_sort: this.index_sort,
	                    part_title: this.inside_data.part_title,
	                    status: this.inside_data.status
	                };
	                _eventbus2.default.$emit('part_list_change', parm);
	            },
	            deep: true
	        },
	        isDragging: function isDragging(newValue) {
	            var _this = this;

	            if (newValue) {
	                this.delayedDragging = true;
	                return;
	            }
	            this.$nextTick(function () {
	                _this.delayedDragging = false;
	            });
	        },

	        //数据变化后资源列表随之变化
	        index_data: function index_data() {
	            var that = this;
	            if (!that.index_data) {
	                return;
	            }

	            that.inside_data = {
	                part_title: that.index_data.part_title,
	                status: that.index_data.status,
	                //资源列表数据
	                resource_list: that.index_data.list.map(function (item, index) {
	                    return { resource_item: item, order: index + 1 };
	                })
	            };
	        }
	    },
	    components: {
	        draggable: _vuedraggable2.default,
	        resource_drag_item: _resource_drag_item2.default
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .flip-list-move {
	    //         transition: transform 0.5s;
	    //     }
	    //
	    //     .ghost {
	    //         opacity: .5;
	    //         background: #C8EBFB;
	    //     }
	    //
	    //     .drag-group-item {
	    //         position: relative;
	    //         cursor: move;
	    //     }
	    //     .resource-sidebar {
	    //         padding: 10px 0;
	    //     }
	    //     .resource-sidebar-title {
	    //         width: 100%;
	    //         height: 36px;
	    //         line-height: 36px;
	    //     }
	    //     .resource-sidebar-text {
	    //         float: left;
	    //         width: 70px;
	    //         margin-right: 20px;
	    //     }
	    //     .resource-title-input {
	    //         float: left;
	    //         display: block;
	    //         width: 468px;
	    //         height: 100%;
	    //         border: 1px solid #e5e5e5;
	    //         padding: 0 10px;
	    //     }
	    //     .resource-sidebar-rule {
	    //         width: 100%;
	    //         height: 80px;
	    //         margin-top: 30px;
	    //     }
	    //     .resource-sidebar-radio {
	    //         float: left;
	    //         width: 468px;
	    //         height: 100%;
	    //         margin-top: -6px;
	    //         margin-left: -3px;
	    //     }
	    //     .resource-sidebar-action {
	    //         width: 466px;
	    //         margin-left: 90px;
	    //         border-radius: 2px;
	    //         background-color: #ffffff;
	    //         border: solid 1px #e5e5e5;
	    //         padding: 10px;
	    //     }
	    //     .resource-sidebar-choose {
	    //         width: 92px;
	    //         height: 34px;
	    //         line-height: 34px;
	    //         border-radius: 2px;
	    //         border: dashed 1px #2a75ed;
	    //         font-size: 14px;
	    //         color: #2a75ed;
	    //         text-align: center;
	    //         margin-bottom: 15px;
	    //         cursor: pointer;
	    //     }
	    //     .resource-sidebar-choose img {
	    //         width: 10px;
	    //         height: 10px;
	    //         margin-right: 10px;
	    //         vertical-align: middle;
	    //         margin-top: -3px;
	    //     }
	    //     .blueColor {
	    //         background-color: #f6faff;
	    //     }
	    //     .resource-show-tip-wrap {
	    //         position: absolute;
	    //         top: 50%;
	    //         right: 10px;
	    //         margin-top: -6px;
	    //         font-size: 0;
	    //         z-index: 4;
	    //     }
	    //     .resource-show-tip-wrap img {
	    //         display: inline-block;
	    //         width: 12px;
	    //         height: 12px;
	    //     }
	    //     .resource-show-tip-wrap .delete {
	    //         margin-left: 10px;
	    //         cursor: pointer;
	    //     }
	    // </style>

	};
	//    资源拖拽列表
	// <!--自定义资源模块-->
	// <template>
	//     <div class="resource-sidebar">
	//         <!--自定义标题-->
	//         <div class="resource-sidebar-title">
	//             <div class="resource-sidebar-text">自定义标题</div>
	//             <input class="resource-title-input" v-model="inside_data.part_title" maxlength="20"/>
	//         </div>
	//         <!--自定义显示规则-->
	//         <div class="resource-sidebar-rule">
	//             <div class="resource-sidebar-text">显示规则</div>
	//             <div class="resource-sidebar-radio">
	//                 <input type="radio" id="default" value="0" v-model="inside_data.status" class="with-gap">
	//                 <label for="default">默认规则</label>
	//                 <br>
	//                 <input type="radio" id="diy" value="1" v-model="inside_data.status" class="with-gap">
	//                 <label for="diy">自定义内容</label>
	//             </div>
	//         </div>
	//         <!--资源列表-->
	//         <div class="resource-sidebar-action" v-show="inside_data.status == 1">
	//             <!--选择资源-->
	//             <div class="resource-sidebar-choose" @click="chooseResource">
	//                 <img src="/images/admin/shopDiy/icon-add-sidebar@2x.png"><span>{{chooseText}}</span>
	//             </div>
	//             <!--资源拖拽列表-->
	//             <draggable class="drag-group" v-model="inside_data.resource_list" :options="dragOptions" :move="onMove" @start="isDragging=true" @end="isDragging=false">
	//                     <div class="drag-group-item" v-for="(item,resource_list_index) in inside_data.resource_list" :key="item.order"
	//                          @mouseover="mouseOverShow(resource_list_index)" :class="{blueColor:isActive==resource_list_index}">
	//
	//                         <resource_drag_item :item="item.resource_item" :index_sort="index_sort"></resource_drag_item>
	//
	//                         <div class="resource-show-tip-wrap" v-show="isActive==resource_list_index">
	//                             <img src="/images/admin/shopDiy/icon-drag-small@2x.png"/>
	//                             <img @click="deleteListResource(resource_list_index)" class="delete" src="/images/admin/shopDiy/icon-delete@2x.png"/>
	//                         </div>
	//
	//                     </div>
	//             </draggable>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(131)
	__vue_script__ = __webpack_require__(133)
	__vue_template__ = __webpack_require__(134)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\module_choose\\resource_drag_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(132);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ae443ee&file=resource_drag_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./resource_drag_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ae443ee&file=resource_drag_item.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./resource_drag_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .alive-drag-item {\r\n        width: 100%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding-left: 5px;\r\n        margin: 5px 0;\r\n    }\r\n    .label-title {\r\n        font-size: 14px;\r\n        margin-right: 50px;\r\n        color: #666666;\r\n    }\r\n    .alive-drag-item img {\r\n        width: 40px;\r\n        height: 30px;\r\n        border-radius: 2px;\r\n        margin-right: 10px;\r\n    }\r\n    .alive-drag-item-title {\r\n        font-size: 14px;\r\n        color: #666666;\r\n        width: 250px;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 133 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// <!--资源选择框-->
	// <template>
	//     <div class="alive-drag-item" style="overflow: hidden; white-space: nowrap; text-overflow:ellipsis">
	//         <span class="label-title">{{label}}</span><img :src="item.img_url_compressed || item.img_url"/><span class="alive-drag-item-title">{{item.title}}</span>
	//     </div>
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['item', 'index_sort'],
	    computed: {
	        label: function label() {
	            var labelText = "";
	            var index_sort = this.index_sort;
	            var item = this.item;

	            if (index_sort == 3) {
	                labelText = '社群';
	            } else if (index_sort == 4) {
	                if (item.is_member == 0) {
	                    labelText = '专栏';
	                } else {
	                    labelText = '会员';
	                }
	            } else if (index_sort == 6) {
	                labelText = '直播';
	            }
	            return labelText;
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .alive-drag-item {
	    //         width: 100%;
	    //         height: 40px;
	    //         line-height: 40px;
	    //         padding-left: 5px;
	    //         margin: 5px 0;
	    //     }
	    //     .label-title {
	    //         font-size: 14px;
	    //         margin-right: 50px;
	    //         color: #666666;
	    //     }
	    //     .alive-drag-item img {
	    //         width: 40px;
	    //         height: 30px;
	    //         border-radius: 2px;
	    //         margin-right: 10px;
	    //     }
	    //     .alive-drag-item-title {
	    //         font-size: 14px;
	    //         color: #666666;
	    //         width: 250px;
	    //     }
	    // </style>

	};

/***/ }),
/* 134 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"alive-drag-item\" style=\"overflow: hidden; white-space: nowrap; text-overflow:ellipsis\">\r\n        <span class=\"label-title\">{{label}}</span><img :src=\"item.img_url_compressed || item.img_url\"/><span class=\"alive-drag-item-title\">{{item.title}}</span>\r\n    </div>\r\n";

/***/ }),
/* 135 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"resource-sidebar\" _v-045a0354=\"\">\n        <!--自定义标题-->\n        <div class=\"resource-sidebar-title\" _v-045a0354=\"\">\n            <div class=\"resource-sidebar-text\" _v-045a0354=\"\">自定义标题</div>\n            <input class=\"resource-title-input\" v-model=\"inside_data.part_title\" maxlength=\"20\" _v-045a0354=\"\">\n        </div>\n        <!--自定义显示规则-->\n        <div class=\"resource-sidebar-rule\" _v-045a0354=\"\">\n            <div class=\"resource-sidebar-text\" _v-045a0354=\"\">显示规则</div>\n            <div class=\"resource-sidebar-radio\" _v-045a0354=\"\">\n                <input type=\"radio\" id=\"default\" value=\"0\" v-model=\"inside_data.status\" class=\"with-gap\" _v-045a0354=\"\">\n                <label for=\"default\" _v-045a0354=\"\">默认规则</label>\n                <br _v-045a0354=\"\">\n                <input type=\"radio\" id=\"diy\" value=\"1\" v-model=\"inside_data.status\" class=\"with-gap\" _v-045a0354=\"\">\n                <label for=\"diy\" _v-045a0354=\"\">自定义内容</label>\n            </div>\n        </div>\n        <!--资源列表-->\n        <div class=\"resource-sidebar-action\" v-show=\"inside_data.status == 1\" _v-045a0354=\"\">\n            <!--选择资源-->\n            <div class=\"resource-sidebar-choose\" @click=\"chooseResource\" _v-045a0354=\"\">\n                <img src=\"/images/admin/shopDiy/icon-add-sidebar@2x.png\" _v-045a0354=\"\"><span _v-045a0354=\"\">{{chooseText}}</span>\n            </div>\n            <!--资源拖拽列表-->\n            <draggable class=\"drag-group\" v-model=\"inside_data.resource_list\" :options=\"dragOptions\" :move=\"onMove\" @start=\"isDragging=true\" @end=\"isDragging=false\" _v-045a0354=\"\">\n                    <div class=\"drag-group-item\" v-for=\"(item,resource_list_index) in inside_data.resource_list\" :key=\"item.order\" @mouseover=\"mouseOverShow(resource_list_index)\" :class=\"{blueColor:isActive==resource_list_index}\" _v-045a0354=\"\">\n\n                        <resource_drag_item :item=\"item.resource_item\" :index_sort=\"index_sort\" _v-045a0354=\"\"></resource_drag_item>\n\n                        <div class=\"resource-show-tip-wrap\" v-show=\"isActive==resource_list_index\" _v-045a0354=\"\">\n                            <img src=\"/images/admin/shopDiy/icon-drag-small@2x.png\" _v-045a0354=\"\">\n                            <img @click=\"deleteListResource(resource_list_index)\" class=\"delete\" src=\"/images/admin/shopDiy/icon-delete@2x.png\" _v-045a0354=\"\">\n                        </div>\n\n                    </div>\n            </draggable>\n        </div>\n    </div>\n";

/***/ }),
/* 136 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"app-sidebar-part\" :style=\"{ marginTop: topSize + 'px' }\" v-show=\"show_sidebar\">\r\n        <banner_sidebar\r\n                v-if=\"index_sort==1 && show_flag\"\r\n                :index=\"index\"\r\n                :index_sort=\"index_sort\"\r\n                :index_data=\"index_data\"\r\n        ></banner_sidebar>\r\n        <module_choose_sidebar\r\n                v-if=\"(index_sort==3 || index_sort==4 || index_sort==6 || index_sort==8 )\"\r\n                :index=\"index\"\r\n                :index_sort=\"index_sort\"\r\n                :index_data=\"index_data\"\r\n        ></module_choose_sidebar>\r\n    </div>\r\n";

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(138)
	__vue_script__ = __webpack_require__(140)
	__vue_template__ = __webpack_require__(144)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\save_bar.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(139);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-85f767c0&file=save_bar.vue&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./save_bar.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-85f767c0&file=save_bar.vue&scoped=true!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./save_bar.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\n    .save_bar_wrapper[_v-85f767c0]{\n        width: 100%;\n        height: 50px;\n        background-color: #e6f3f7;\n        position: fixed;\n        bottom: 0;\n        z-index: 999;\n    }\n    .button_warpper[_v-85f767c0]{\n        height: 100%;\n        margin-left: 500px;\n        overflow: hidden;\n    }\n    .botton_common[_v-85f767c0]{\n        height: 28px;\n        border-radius: 2px;\n        float: left;\n        margin-top: 10px;\n        line-height: 28px;\n        font-size: 14px;\n        text-align: center;\n        margin-right: 20px;\n        padding: 0 20px;\n        cursor: pointer;\n    }\n    .cancel_button[_v-85f767c0]{\n        background-color: #fafbfc;\n        color: #353535;\n    }\n    .save_button[_v-85f767c0]{\n        background-color: #2a75ed;\n        color: #fff;\n    }\n", ""]);

	// exports


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _stringify = __webpack_require__(141);

	var _stringify2 = _interopRequireDefault(_stringify);

	var _network = __webpack_require__(9);

	var _network2 = _interopRequireDefault(_network);

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _loading = __webpack_require__(120);

	var _loading2 = _interopRequireDefault(_loading);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    props: ['submit_data', 'index_name', 'share_info'],
	    data: function data() {
	        return {
	            // 0-未提交，1-提交中，2-提交成功
	            save_new_status: 0,
	            // 0-未提交，1-提交中，2-提交成功
	            submit_status: 0,
	            banner_index: []
	        };
	    },
	    methods: {
	        submitConfig: function submitConfig() {
	            var that = this;
	            var confirm_index = confirm("保存成功后该配置将立刻生效");
	            if (confirm_index) {
	                _eventbus2.default.$emit('is_show_submit_loading', true);

	                that.saveNewPart(function () {
	                    that.saveDiySetting();
	                });
	            }
	        },
	        //保存新增的资源
	        saveNewPart: function saveNewPart(successCallBack) {
	            var that = this;
	            var index_sort = that.submit_data.index_sort;
	            var index_data = that.submit_data.index_data;

	            //补全轮播图id
	            var banner_list = [];
	            var banner_list_index = [];

	            //获取缺失id的banner
	            for (var i = 0, j = index_sort.length; i < j; i++) {
	                if (parseInt(index_sort[i]) === 1) {
	                    var list = index_data[i].list;
	                    for (var x = 0, y = list.length; x < y; x++) {
	                        if (!list[x].id && list[x].id == '') {
	                            //一个缺id的banner对应一个index
	                            that.banner_index.push(i);
	                            banner_list.push(list[x]);
	                            banner_list_index.push(x);
	                        }
	                    }
	                }
	            }
	            console.log(banner_list);

	            if (banner_list.length > 0) {
	                var new_part_parm = {
	                    banner_part: banner_list
	                };

	                if (that.save_new_status === 0) {
	                    _network2.default.request("save_new_part", new_part_parm, function (data) {
	                        if (data.code === 0) {
	                            that.save_new_status = 2;
	                            if (that.banner_index.length > 0) {
	                                var banner_part = data.data.banner_part;
	                                for (var n = 0; n < that.banner_index.length; n++) {
	                                    //补全对应的banner图id
	                                    that.submit_data.index_data[that.banner_index[n]].list[banner_list_index[n]].id = banner_part[n].id;
	                                }
	                            }
	                            successCallBack();
	                        } else {
	                            that.resetSaveStatus();
	                            _eventbus2.default.$emit('is_show_submit_loading', false);
	                            _eventbus2.default.$emit('show_top_prompt_tip', '保存失败，请重试');
	                            //                                alert("保存失败，请重试1");
	                        }
	                    });
	                } else {
	                    _eventbus2.default.$emit('show_top_prompt_tip', '配置保存中，请稍候');
	                    //                        alert("配置保存中，请稍候")
	                }
	            } else {
	                successCallBack();
	            }

	            that.save_new_status = 0;
	        },
	        //保存自定义配置
	        saveDiySetting: function saveDiySetting() {
	            var that = this;
	            if (that.submit_status === 0) {
	                that.submit_status = 1;

	                var parm = {
	                    index_sort: (0, _stringify2.default)(that.submit_data.index_sort),
	                    index_data: (0, _stringify2.default)(that.submit_data.index_data),
	                    index_name: that.index_name,
	                    index_info: (0, _stringify2.default)(that.share_info)
	                };

	                _network2.default.request("save_diy_setting", parm, function (data) {
	                    if (data.code === 0) {
	                        that.submit_status = 2;
	                        _eventbus2.default.$emit('is_show_submit_loading', false);
	                        _eventbus2.default.$emit('show_top_prompt_tip', '保存成功');

	                        window.location.href = "/shopIndexDiy";
	                    } else {
	                        that.resetSaveStatus();
	                        _eventbus2.default.$emit('is_show_submit_loading', false);
	                        if (data.msg) {
	                            _eventbus2.default.$emit('show_top_prompt_tip', data.msg);
	                            //                                alert(data.msg)
	                        } else {
	                            _eventbus2.default.$emit('show_top_prompt_tip', '保存失败，请尝试重新保存');
	                            //                                alert("保存失败，请尝试重新保存")
	                        }
	                    }
	                });
	            } else if (that.submit_status === 1) {
	                _eventbus2.default.$emit('show_top_prompt_tip', '配置保存中，请稍候');
	                //                    alert("配置保存中，请稍候")
	            } else if (that.submit_status === 2) {
	                _eventbus2.default.$emit('is_show_submit_loading', false);
	                //EventBus.$emit('show_top_prompt_tip','配置已保存成功');
	                //                    alert("配置已保存成功");
	                //window.location.href = "/interfacesetting";
	            }
	        },
	        resetSaveStatus: function resetSaveStatus() {
	            var that = this;
	            that.save_new_status = 0;
	            that.submit_status = 0;
	        }
	    },
	    components: {
	        loading: _loading2.default
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     .save_bar_wrapper{
	    //         width: 100%;
	    //         height: 50px;
	    //         background-color: #e6f3f7;
	    //         position: fixed;
	    //         bottom: 0;
	    //         z-index: 999;
	    //     }
	    //     .button_warpper{
	    //         height: 100%;
	    //         margin-left: 500px;
	    //         overflow: hidden;
	    //     }
	    //     .botton_common{
	    //         height: 28px;
	    //         border-radius: 2px;
	    //         float: left;
	    //         margin-top: 10px;
	    //         line-height: 28px;
	    //         font-size: 14px;
	    //         text-align: center;
	    //         margin-right: 20px;
	    //         padding: 0 20px;
	    //         cursor: pointer;
	    //     }
	    //     .cancel_button{
	    //         background-color: #fafbfc;
	    //         color: #353535;
	    //     }
	    //     .save_button{
	    //         background-color: #2a75ed;
	    //         color: #fff;
	    //     }
	    // </style>

	};
	//全局loading
	// <template>
	//     <div class="save_bar_wrapper">
	//         <div class="button_warpper">
	//             <div class="botton_common save_button" @click="submitConfig">保存生效</div>
	//         </div>
	//     </div>
	// </template>
	//
	//
	//
	// <script>

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = { "default": __webpack_require__(142), __esModule: true };

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var core = __webpack_require__(143);
	module.exports = function stringify(it) {
	  // eslint-disable-line no-unused-vars
	  return (core.JSON && core.JSON.stringify || JSON.stringify).apply(JSON, arguments);
	};

/***/ }),
/* 143 */
/***/ (function(module, exports) {

	'use strict';

	var core = module.exports = { version: '1.2.6' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

/***/ }),
/* 144 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"save_bar_wrapper\" _v-85f767c0=\"\">\n        <div class=\"button_warpper\" _v-85f767c0=\"\">\n            <div class=\"botton_common save_button\" @click=\"submitConfig\" _v-85f767c0=\"\">保存生效</div>\n        </div>\n    </div>\n";

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(146)
	__vue_script__ = __webpack_require__(148)
	__vue_template__ = __webpack_require__(164)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\choose_box\\choose_box.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(147);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-dca60886&file=choose_box.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./choose_box.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-dca60886&file=choose_box.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./choose_box.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .fade-enter-active, .fade-leave-active {\r\n        transition: opacity .5s\r\n    }\r\n    .fade-enter, .fade-leave-to {\r\n        opacity: 0\r\n    }\r\n    .choose-box-part {\r\n        height: 100%;\r\n        width: 100%;\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        overflow: hidden;\r\n        z-index: 999;\r\n    }\r\n    .choose-box-mb{\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.3);\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 999;\r\n    }\r\n    .choose-box-main {\r\n        background-color: #ffffff;\r\n        width: 640px;\r\n        height: 615px;\r\n        border-radius: 10px;\r\n        overflow: hidden;\r\n        margin: auto;\r\n        top: 50%;\r\n        -webkit-transform: translate(0, -50%);\r\n                transform: translate(0, -50%);\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        z-index: 1000;\r\n    }\r\n    .choose-box-title {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 52px;\r\n        line-height: 52px;\r\n        font-size: 16px;\r\n        color: #353535;\r\n        border-radius: 10px;\r\n        background-color: #fafbfc;\r\n        padding-left: 30px;\r\n    }\r\n    .choose-box-close {\r\n        position: absolute;\r\n        display: inline-block;\r\n        width: 12px;\r\n        height: 12px;\r\n        top: 50%;\r\n        right: 20px;\r\n        margin-top: -6px;\r\n        cursor: pointer;\r\n    }\r\n    .main-content-list {\r\n        position: relative;\r\n        height: 350px;\r\n        overflow: auto;\r\n    }\r\n    .choose-box-action {\r\n        height: 36px;\r\n        line-height: 36px;\r\n        margin: 30px auto;\r\n        text-align: center;\r\n    }\r\n    .choose-box-action .cancel-button {\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 36px;\r\n        border-radius: 2px;\r\n        background-color: #fafbfc;\r\n        border: solid 1px #e5e7eb;\r\n        text-align: center;\r\n        margin-right: 18px;\r\n        cursor: pointer;\r\n    }\r\n    .choose-box-action .choose-add-button {\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 36px;\r\n        border-radius: 2px;\r\n        background-color: #2a75ed;\r\n        /*border: solid 1px #e5e7eb;*/\r\n        text-align: center;\r\n        cursor: pointer;\r\n        color: #fff;\r\n    }\r\n    .no-data-text {\r\n        width: 100%;\r\n        height: 20px;\r\n        text-align: center;\r\n        margin-top: 20px;\r\n        color: #888;\r\n        font-size: 14px;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	var _network = __webpack_require__(9);

	var _network2 = _interopRequireDefault(_network);

	var _search_part = __webpack_require__(149);

	var _search_part2 = _interopRequireDefault(_search_part);

	var _tab_part = __webpack_require__(154);

	var _tab_part2 = _interopRequireDefault(_tab_part);

	var _resource_item = __webpack_require__(159);

	var _resource_item2 = _interopRequireDefault(_resource_item);

	var _loading = __webpack_require__(120);

	var _loading2 = _interopRequireDefault(_loading);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	//显示资源列表

	//搜索框
	// <template>
	//     <transition name="fade">
	//         <div class="choose-box-part" v-show="is_show_box">
	//             <div class="choose-box-mb"></div>
	//             <div class="choose-box-main">
	//                 <div class="choose-box-title">添加商品
	//                     <img class="choose-box-close" @click="closeChooseBox"
	//                          src="/images/admin/shopDiy/icon_Pop-ups_close.svg"/>
	//                 </div>
	//                 <search_part></search_part>
	//                 <tab_part :tab_title="tab_title"></tab_part>
	//                 <div class="main-content-list">
	//                     <div v-for="(item,index) in data_list">
	//                         <resource_item :item="item" :index="index"></resource_item>
	//                     </div>
	//                     <!--无数据时显示暂无数据-->
	//                     <div v-show="is_show_no_data" class="no-data-text">暂无数据</div>
	//
	//                     <!--提示loading组件-->
	//                     <loading v-show="is_show_search_loading"></loading>
	//                 </div>
	//                 <div class="choose-box-action">
	//                     <span class="cancel-button" @click="closeChooseBox">取消</span>
	//                     <span class="choose-add-button" @click="addListButton">添加</span>
	//                 </div>
	//             </div>
	//         </div>
	//     </transition>
	// </template>
	//
	// <script>
	exports.default = {
	    data: function data() {
	        return {
	            //模块位置(初始值无效）
	            index: -1,
	            //是否显示搜索框
	            is_show_box: false,
	            //模块序号(初始值无效）
	            index_sort: -1,
	            //tab的名称：如直播、专栏、社群
	            tab_title: [],
	            //搜索模块
	            tab_module: [],
	            //判断出当前栏目用于搜索
	            current_tab_module: 4,
	            //请求返回的数据
	            module_data: [],
	            //每个栏目的数据列表
	            data_list: [],
	            //需要添加给编辑框组件的数据列表
	            need_add_data_list: [],
	            //是否显示loading
	            is_show_search_loading: false,
	            //是否显示暂无数据
	            is_show_no_data: false
	        };
	    },
	    created: function created() {
	        //显示搜索模块
	        _eventbus2.default.$on('is_show_choose_box', this.showChooseBox);
	        //获取搜索关键词
	        _eventbus2.default.$on('get_input_word', this.toSearch);
	        //切换模块
	        _eventbus2.default.$on('change_tab', this.changeTabModule);

	        _eventbus2.default.$on('choose_add_item', this.changeAddItem);
	    },
	    methods: {
	        //显示搜索模块及初始化搜索数据
	        showChooseBox: function showChooseBox(obj) {

	            var choosedIdArr = [];

	            //已选择的资源id
	            for (var i = 0, j = obj.index_data.list.length; i < j; i++) {
	                choosedIdArr.push(obj.index_data.list[i].id);
	            }

	            //获取已经有的资源id，同步给搜索框
	            if (choosedIdArr.length > 0) {
	                _eventbus2.default.$emit('get_resource_choosed_id', { 'id_arr': choosedIdArr });
	            }

	            this.data_list = [];
	            this.is_show_box = true;
	            //index_sort 首页模块序号 1-轮播图模块、2-分类导航模块、3-社群模块、4-会员及专利模块 5-问答模块 6-直播模块 7-最新模块

	            var index = obj.index;
	            var index_sort = obj.index_sort;

	            this.index_sort = index_sort;
	            this.index = index;

	            //获取搜索模块内容 1-图文、2-音频、3-视频、4-直播、5-活动、6-专栏、7-社群 8-会员
	            if (index_sort === 3) {
	                this.tab_title = ['社群'];
	                this.tab_module = [7];
	                this.current_tab_module = 7;
	            } else if (index_sort === 4) {
	                this.tab_title = ['专栏', '会员'];
	                this.tab_module = [6, 8];
	                this.current_tab_module = 6;
	            } else if (index_sort === 6) {
	                this.tab_title = ['直播'];
	                this.tab_module = [4];
	                this.current_tab_module = 4;
	            } else if (index_sort === 8) {
	                this.tab_title = ['活动'];
	                this.tab_module = [5];
	                this.current_tab_module = 5;
	            }
	            //初始化搜索数据（排除已经有的数据）
	            this.initData(choosedIdArr);
	        },
	        //关闭搜索模块
	        closeChooseBox: function closeChooseBox() {
	            this.is_show_box = false;
	            //关闭后复位
	            this.need_add_data_list = [];
	            _eventbus2.default.$emit('reset_tab_index');
	            _eventbus2.default.$emit('clear_input_word');
	        },
	        //维护选中的数据列表
	        changeAddItem: function changeAddItem(obj) {
	            if (obj.select_click === true) {
	                this.need_add_data_list.push(this.data_list[obj.index]);
	            } else {
	                var index = this.need_add_data_list.indexOf(this.data_list[obj.index]);
	                this.need_add_data_list.splice(index, 1);
	            }
	        },
	        //添加数据给编辑框组件
	        addListButton: function addListButton() {
	            //如果选中了列表，则同步给父组件
	            var need_add_data_list = this.need_add_data_list;
	            if (need_add_data_list.length > 0) {
	                var index = this.index;
	                var parm = {
	                    index: this.index,
	                    need_add_data_list: this.need_add_data_list,
	                    index_sort: this.index_sort
	                };
	                _eventbus2.default.$emit("add_list_to_sidebar", parm);
	            }
	            this.closeChooseBox();
	        },
	        //切换tab栏目维护该父组件的数据
	        changeTabModule: function changeTabModule(index) {
	            this.current_tab_module = this.tab_module[index];
	            //切换后构造新的栏目数据列表
	            this.data_list = this.module_data[index];

	            if (this.data_list.length === 0) {
	                this.is_show_no_data = true;
	            } else {
	                this.is_show_no_data = false;
	            }

	            //切换tab后要复位为空数组
	            this.need_add_data_list = [];
	        },
	        //初始化搜索数据
	        initData: function initData(choosedIdArr) {
	            var that = this;
	            that.is_show_search_loading = true;
	            _network2.default.request("get_diy_module", { module: that.tab_module, id_arr: choosedIdArr }, function (data) {
	                if (parseInt(data.code) === 0) {
	                    that.module_data = data.data.module_data;
	                    //请求数据后默认显示第一个tab栏目的数据列表
	                    that.data_list = that.module_data[0];
	                    that.is_show_search_loading = false;
	                    //判断是否暂无数据
	                    if (that.data_list.length === 0) {
	                        that.is_show_no_data = true;
	                    } else {
	                        that.is_show_no_data = false;
	                    }
	                } else {
	                    that.is_show_search_loading = false;
	                    //                        alert('get_diy_module:请求错误！');
	                    _eventbus2.default.$emit('show_top_prompt_tip', '请求错误！');
	                }
	            });
	        },
	        //搜索按钮提交请求数据
	        toSearch: function toSearch(obj) {
	            var that = this;

	            var parm = {
	                id_arr: obj.id_arr,
	                search_content: obj.input_word,
	                module: that.current_tab_module
	            };

	            that.is_show_search_loading = true;
	            _network2.default.request("search_diy_module", parm, function (data) {
	                if (parseInt(data.code) === 0) {
	                    if (that.current_tab_module === data.data.module) {
	                        that.data_list = data.data.module_data;
	                        that.is_show_search_loading = false;
	                        //判断是否暂无数据
	                        if (that.data_list.length === 0) {
	                            that.is_show_no_data = true;
	                        } else {
	                            that.is_show_no_data = false;
	                        }
	                    }
	                } else {
	                    that.is_show_search_loading = false;
	                    //                            alert("搜索失败请重试");
	                    _eventbus2.default.$emit('show_top_prompt_tip', '搜索失败请重试');
	                }
	            });
	        }
	    },
	    components: {
	        search_part: _search_part2.default,
	        tab_part: _tab_part2.default,
	        resource_item: _resource_item2.default,
	        loading: _loading2.default
	    }
	    // </script>
	    //
	    // <style>
	    //     .fade-enter-active, .fade-leave-active {
	    //         transition: opacity .5s
	    //     }
	    //     .fade-enter, .fade-leave-to {
	    //         opacity: 0
	    //     }
	    //     .choose-box-part {
	    //         height: 100%;
	    //         width: 100%;
	    //         position: fixed;
	    //         top: 0;
	    //         left: 0;
	    //         overflow: hidden;
	    //         z-index: 999;
	    //     }
	    //     .choose-box-mb{
	    //         width: 100%;
	    //         height: 100%;
	    //         background-color: rgba(0, 0, 0, 0.3);
	    //         position: absolute;
	    //         top: 0;
	    //         left: 0;
	    //         z-index: 999;
	    //     }
	    //     .choose-box-main {
	    //         background-color: #ffffff;
	    //         width: 640px;
	    //         height: 615px;
	    //         border-radius: 10px;
	    //         overflow: hidden;
	    //         margin: auto;
	    //         top: 50%;
	    //         transform: translate(0, -50%);
	    //         position: absolute;
	    //         left: 0;
	    //         right: 0;
	    //         z-index: 1000;
	    //     }
	    //     .choose-box-title {
	    //         position: relative;
	    //         width: 100%;
	    //         height: 52px;
	    //         line-height: 52px;
	    //         font-size: 16px;
	    //         color: #353535;
	    //         border-radius: 10px;
	    //         background-color: #fafbfc;
	    //         padding-left: 30px;
	    //     }
	    //     .choose-box-close {
	    //         position: absolute;
	    //         display: inline-block;
	    //         width: 12px;
	    //         height: 12px;
	    //         top: 50%;
	    //         right: 20px;
	    //         margin-top: -6px;
	    //         cursor: pointer;
	    //     }
	    //     .main-content-list {
	    //         position: relative;
	    //         height: 350px;
	    //         overflow: auto;
	    //     }
	    //     .choose-box-action {
	    //         height: 36px;
	    //         line-height: 36px;
	    //         margin: 30px auto;
	    //         text-align: center;
	    //     }
	    //     .choose-box-action .cancel-button {
	    //         display: inline-block;
	    //         width: 100px;
	    //         height: 36px;
	    //         border-radius: 2px;
	    //         background-color: #fafbfc;
	    //         border: solid 1px #e5e7eb;
	    //         text-align: center;
	    //         margin-right: 18px;
	    //         cursor: pointer;
	    //     }
	    //     .choose-box-action .choose-add-button {
	    //         display: inline-block;
	    //         width: 100px;
	    //         height: 36px;
	    //         border-radius: 2px;
	    //         background-color: #2a75ed;
	    //         /*border: solid 1px #e5e7eb;*/
	    //         text-align: center;
	    //         cursor: pointer;
	    //         color: #fff;
	    //     }
	    //     .no-data-text {
	    //         width: 100%;
	    //         height: 20px;
	    //         text-align: center;
	    //         margin-top: 20px;
	    //         color: #888;
	    //         font-size: 14px;
	    //     }
	    // </style>

	};
	//切换tab

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(150)
	__vue_script__ = __webpack_require__(152)
	__vue_template__ = __webpack_require__(153)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\choose_box\\search_part.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(151);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-0c7d4a00&file=search_part.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search_part.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-0c7d4a00&file=search_part.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./search_part.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .choose-box-search {\r\n        position: relative;\r\n        height: 36px;\r\n        line-height: 36px;\r\n        margin: 20px 0 20px 30px;\r\n    }\r\n    .choose-search-input {\r\n        display: inline-block;\r\n        width: 240px;\r\n        height: 100%;\r\n        border-radius: 2px;\r\n        border: solid 1px #dcdcdc;\r\n        padding: 0 10px 0 36px;\r\n    }\r\n    .choose-search-button {\r\n        display: inline-block;\r\n        width: 80px;\r\n        height: 100%;\r\n        margin-left: 10px;\r\n        border-radius: 2px;\r\n        background-color: #fafbfc;\r\n        border: solid 1px #e5e7eb;\r\n        cursor: pointer;\r\n        font-size: 14px;\r\n        text-align: center;\r\n        color: #666666;\r\n    }\r\n    .choose-search-icon {\r\n        position: absolute;\r\n        display: block;\r\n        left: 10px;\r\n        top: 50%;\r\n        margin-top: -8px;\r\n        width: 16px;\r\n        height: 16px;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    data: function data() {
	        return {
	            input_word: '',
	            id_arr: []
	        };
	    },
	    created: function created() {
	        var that = this;
	        //获取已选中的资源id
	        _eventbus2.default.$on('get_resource_choosed_id', function (obj) {

	            that.id_arr = obj.id_arr;
	        });
	        _eventbus2.default.$on('clear_input_word', function () {
	            that.input_word = '';
	        });
	    },
	    methods: {
	        sendWord: function sendWord() {
	            var that = this;
	            //将搜索框数据同步给搜索模块
	            _eventbus2.default.$emit('get_input_word', {
	                input_word: that.input_word,
	                id_arr: that.id_arr
	            });
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .choose-box-search {
	    //         position: relative;
	    //         height: 36px;
	    //         line-height: 36px;
	    //         margin: 20px 0 20px 30px;
	    //     }
	    //     .choose-search-input {
	    //         display: inline-block;
	    //         width: 240px;
	    //         height: 100%;
	    //         border-radius: 2px;
	    //         border: solid 1px #dcdcdc;
	    //         padding: 0 10px 0 36px;
	    //     }
	    //     .choose-search-button {
	    //         display: inline-block;
	    //         width: 80px;
	    //         height: 100%;
	    //         margin-left: 10px;
	    //         border-radius: 2px;
	    //         background-color: #fafbfc;
	    //         border: solid 1px #e5e7eb;
	    //         cursor: pointer;
	    //         font-size: 14px;
	    //         text-align: center;
	    //         color: #666666;
	    //     }
	    //     .choose-search-icon {
	    //         position: absolute;
	    //         display: block;
	    //         left: 10px;
	    //         top: 50%;
	    //         margin-top: -8px;
	    //         width: 16px;
	    //         height: 16px;
	    //     }
	    // </style>

	}; // <template>
	//     <div class="choose-box-search">
	//         <input class="choose-search-input" type="text" v-model="input_word" placeholder="输入名称"/>
	//         <span class="choose-search-button" @click="sendWord">搜索</span>
	//         <img class="choose-search-icon" src="/images/admin/shopDiy/icon_fenxiao_search.png"/>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 153 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"choose-box-search\">\r\n        <input class=\"choose-search-input\" type=\"text\" v-model=\"input_word\" placeholder=\"输入名称\"/>\r\n        <span class=\"choose-search-button\" @click=\"sendWord\">搜索</span>\r\n        <img class=\"choose-search-icon\" src=\"/images/admin/shopDiy/icon_fenxiao_search.png\"/>\r\n    </div>\r\n";

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(155)
	__vue_script__ = __webpack_require__(157)
	__vue_template__ = __webpack_require__(158)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\choose_box\\tab_part.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(156);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-71ed0c12&file=tab_part.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./tab_part.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-71ed0c12&file=tab_part.vue!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./tab_part.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .choose-tab-part {\r\n        height: 40px;\r\n        line-height: 40px;\r\n        margin: 0 30px;\r\n        background-color: #fafbfc;\r\n        font-size: 0;\r\n    }\r\n    .tab-part-title {\r\n        display: inline-block;\r\n        width: 100px;\r\n        text-align: center;\r\n        font-size: 16px;\r\n        color: #353535;\r\n        cursor: pointer;\r\n    }\r\n    .activate {\r\n        color: #2a75ed;\r\n        border-bottom: 2px solid #2a75ed;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    props: ['tab_title'],
	    data: function data() {
	        return {
	            active: 0
	        };
	    },
	    created: function created() {
	        _eventbus2.default.$on('reset_tab_index', this.resetClick);
	    },
	    methods: {
	        tabClick: function tabClick(index) {
	            this.active = index;
	            _eventbus2.default.$emit('change_tab', index);
	        },
	        resetClick: function resetClick() {
	            this.active = 0;
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .choose-tab-part {
	    //         height: 40px;
	    //         line-height: 40px;
	    //         margin: 0 30px;
	    //         background-color: #fafbfc;
	    //         font-size: 0;
	    //     }
	    //     .tab-part-title {
	    //         display: inline-block;
	    //         width: 100px;
	    //         text-align: center;
	    //         font-size: 16px;
	    //         color: #353535;
	    //         cursor: pointer;
	    //     }
	    //     .activate {
	    //         color: #2a75ed;
	    //         border-bottom: 2px solid #2a75ed;
	    //     }
	    // </style>

	}; // <template>
	//     <div class="choose-tab-part">
	//         <div class="tab-part-title" v-for="(item, index) in tab_title"
	//              :class="{ 'activate': active==index}"
	//              @click="tabClick(index)"
	//         >{{item}}
	//         </div>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 158 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"choose-tab-part\">\r\n        <div class=\"tab-part-title\" v-for=\"(item, index) in tab_title\"\r\n             :class=\"{ 'activate': active==index}\"\r\n             @click=\"tabClick(index)\"\r\n        >{{item}}\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(160)
	__vue_script__ = __webpack_require__(162)
	__vue_template__ = __webpack_require__(163)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\choose_box\\resource_item.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(161);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-5e5afefa&file=resource_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./resource_item.vue", function() {
				var newContent = require("!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-5e5afefa&file=resource_item.vue&scoped=true!../../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./resource_item.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    input[type = 'checkbox'][_v-5e5afefa]{\r\n        width: 24px;\r\n        height: 20px;\r\n        vertical-align: middle\r\n    }\r\n\r\n    .choose-resource-item[_v-5e5afefa] {\r\n        margin: 0 20px;\r\n        padding: 0 10px;\r\n        height: 70px;\r\n        line-height: 70px;\r\n        border-bottom: solid 1px #f2f2f2;\r\n        font-size: 14px;\r\n        color: #666666;\r\n        cursor: pointer;\r\n        overflow: hidden;\r\n        -ms-text-overflow: ellipsis;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n    }\r\n    .resource-item-left[_v-5e5afefa] {\r\n        float: left;\r\n    }\r\n    .resource-item-left .select-icon[_v-5e5afefa] {\r\n        display: inline-block;\r\n        width: 12px;\r\n        height: 12px;\r\n        border-radius: 2px;\r\n        border: solid 1px #c1c4ca;\r\n        margin-right: 20px;\r\n    }\r\n    .resource-item-left .selectBgClass[_v-5e5afefa] {\r\n        background-color: #2a75ed;\r\n    }\r\n    .resource-item-left img[_v-5e5afefa] {\r\n        width: 40px;\r\n        height: 30px;\r\n        border-radius: 2px;\r\n        margin-right: 10px;\r\n    }\r\n    .resource-item-right[_v-5e5afefa] {\r\n        float: right;\r\n    }\r\n\r\n\r\n", ""]);

	// exports


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    props: ['item', 'index'],
	    data: function data() {
	        return {
	            select_click: false
	        };
	    },
	    methods: {
	        selectClick: function selectClick() {
	            this.select_click = !this.select_click;

	            _eventbus2.default.$emit('choose_add_item', { select_click: this.select_click, index: this.index });
	        }
	    },
	    watch: {
	        item: function item() {
	            this.select_click = false;
	        }
	    }
	    // </script>
	    //
	    // <style scoped>
	    //     input[type = 'checkbox']{
	    //         width: 24px;
	    //         height: 20px;
	    //         vertical-align: middle
	    //     }
	    //
	    //     .choose-resource-item {
	    //         margin: 0 20px;
	    //         padding: 0 10px;
	    //         height: 70px;
	    //         line-height: 70px;
	    //         border-bottom: solid 1px #f2f2f2;
	    //         font-size: 14px;
	    //         color: #666666;
	    //         cursor: pointer;
	    //         overflow: hidden;
	    //         -ms-text-overflow: ellipsis;
	    //         text-overflow: ellipsis;
	    //         white-space: nowrap;
	    //     }
	    //     .resource-item-left {
	    //         float: left;
	    //     }
	    //     .resource-item-left .select-icon {
	    //         display: inline-block;
	    //         width: 12px;
	    //         height: 12px;
	    //         border-radius: 2px;
	    //         border: solid 1px #c1c4ca;
	    //         margin-right: 20px;
	    //     }
	    //     .resource-item-left .selectBgClass {
	    //         background-color: #2a75ed;
	    //     }
	    //     .resource-item-left img {
	    //         width: 40px;
	    //         height: 30px;
	    //         border-radius: 2px;
	    //         margin-right: 10px;
	    //     }
	    //     .resource-item-right {
	    //         float: right;
	    //     }
	    //
	    //
	    // </style>

	}; // <template>
	//     <div class="choose-resource-item" @click="selectClick">
	//         <div class="resource-item-left">
	//             <input type="checkbox" :checked="select_click">
	//             <img :src="item.img_url_compressed"/>
	//             <span class="title">{{item.title}}</span>
	//         </div>
	//         <div class="resource-item-right">
	//             <span class="show-time">{{item.show_time}}</span>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 163 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"choose-resource-item\" @click=\"selectClick\" _v-5e5afefa=\"\">\n        <div class=\"resource-item-left\" _v-5e5afefa=\"\">\n            <input type=\"checkbox\" :checked=\"select_click\" _v-5e5afefa=\"\">\n            <img :src=\"item.img_url_compressed\" _v-5e5afefa=\"\">\n            <span class=\"title\" _v-5e5afefa=\"\">{{item.title}}</span>\n        </div>\n        <div class=\"resource-item-right\" _v-5e5afefa=\"\">\n            <span class=\"show-time\" _v-5e5afefa=\"\">{{item.show_time}}</span>\n        </div>\n    </div>\n";

/***/ }),
/* 164 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <transition name=\"fade\">\r\n        <div class=\"choose-box-part\" v-show=\"is_show_box\">\r\n            <div class=\"choose-box-mb\"></div>\r\n            <div class=\"choose-box-main\">\r\n                <div class=\"choose-box-title\">添加商品\r\n                    <img class=\"choose-box-close\" @click=\"closeChooseBox\"\r\n                         src=\"/images/admin/shopDiy/icon_Pop-ups_close.svg\"/>\r\n                </div>\r\n                <search_part></search_part>\r\n                <tab_part :tab_title=\"tab_title\"></tab_part>\r\n                <div class=\"main-content-list\">\r\n                    <div v-for=\"(item,index) in data_list\">\r\n                        <resource_item :item=\"item\" :index=\"index\"></resource_item>\r\n                    </div>\r\n                    <!--无数据时显示暂无数据-->\r\n                    <div v-show=\"is_show_no_data\" class=\"no-data-text\">暂无数据</div>\r\n\r\n                    <!--提示loading组件-->\r\n                    <loading v-show=\"is_show_search_loading\"></loading>\r\n                </div>\r\n                <div class=\"choose-box-action\">\r\n                    <span class=\"cancel-button\" @click=\"closeChooseBox\">取消</span>\r\n                    <span class=\"choose-add-button\" @click=\"addListButton\">添加</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n";

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(166)
	__vue_script__ = __webpack_require__(168)
	__vue_template__ = __webpack_require__(169)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\globalWidget\\top_prompt.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(167);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-74a9542a&file=top_prompt.vue!../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./top_prompt.vue", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-74a9542a&file=top_prompt.vue!../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./top_prompt.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .fade-enter-active, .fade-leave-active {\r\n        transition: opacity .5s\r\n    }\r\n    .fade-enter, .fade-leave-to {\r\n        opacity: 0\r\n    }\r\n    .top-prompt {\r\n        background-color: rgb(42, 117, 237);\r\n        width: 450px;\r\n        border-radius: 2px;\r\n        box-shadow: 0 4px 12px 0 rgba(41,117,237,.2);\r\n        position: fixed;\r\n        top: 0;\r\n        left: 50%;\r\n        margin-left: -225px;\r\n        z-index: 10000;\r\n    }\r\n    .top-prompt-content{\r\n        margin: 10px;\r\n        text-align: center;\r\n        font-size: 14px;\r\n        color: #fff;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    data: function data() {
	        return {
	            tip_text: '',
	            is_show_prompt: false
	        };
	    },
	    created: function created() {
	        var that = this;
	        _eventbus2.default.$on('show_top_prompt_tip', function (txt) {
	            that.tip_text = txt;
	            that.is_show_prompt = true;
	            setTimeout(function () {
	                that.is_show_prompt = false;
	            }, 2000);
	        });
	    }
	    // </script>
	    //
	    // <style>
	    //     .fade-enter-active, .fade-leave-active {
	    //         transition: opacity .5s
	    //     }
	    //     .fade-enter, .fade-leave-to {
	    //         opacity: 0
	    //     }
	    //     .top-prompt {
	    //         background-color: rgb(42, 117, 237);
	    //         width: 450px;
	    //         border-radius: 2px;
	    //         box-shadow: 0 4px 12px 0 rgba(41,117,237,.2);
	    //         position: fixed;
	    //         top: 0;
	    //         left: 50%;
	    //         margin-left: -225px;
	    //         z-index: 10000;
	    //     }
	    //     .top-prompt-content{
	    //         margin: 10px;
	    //         text-align: center;
	    //         font-size: 14px;
	    //         color: #fff;
	    //     }
	    // </style>

	}; // <template>
	//     <transition name="fade">
	//         <div class="top-prompt" v-show="is_show_prompt">
	//             <div class="top-prompt-content">{{tip_text}}</div>
	//         </div>
	//     </transition>
	// </template>
	//
	// <script>

/***/ }),
/* 169 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <transition name=\"fade\">\r\n        <div class=\"top-prompt\" v-show=\"is_show_prompt\">\r\n            <div class=\"top-prompt-content\">{{tip_text}}</div>\r\n        </div>\r\n    </transition>\r\n";

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(171)
	__vue_script__ = __webpack_require__(173)
	__vue_template__ = __webpack_require__(174)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\globalWidget\\notice_prompt.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(172);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-f7399382&file=notice_prompt.vue!../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./notice_prompt.vue", function() {
				var newContent = require("!!../../../node_modules/css-loader/index.js!../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-f7399382&file=notice_prompt.vue!../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./notice_prompt.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .notice-prompt {\r\n        background-color: #629eff;\r\n        width: 100%;\r\n        height: 40px;\r\n        position: fixed;\r\n        top: 50px;\r\n        left: 160px;\r\n        right: 0;\r\n    }\r\n    .notice-prompt-word {\r\n        width: 80%;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        float: left;\r\n        margin-left: 20px;\r\n        font-size: 14px;\r\n        color: #fff;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        white-space: nowrap;\r\n    }\r\n    .notice-prompt-word a {\r\n        color: #629eff;\r\n        background: #fff;\r\n        display: inline-block;\r\n        height: 28px;\r\n        line-height: 28px;\r\n        border-radius: 2px;\r\n        padding: 0 5px;\r\n        margin: 0 10px;\r\n        font-size: 12px;\r\n        text-decoration: none!important;\r\n        cursor: pointer!important;\r\n    }\r\n    .notice-close-wrapper {\r\n        background-color: #629eff;\r\n        height: 12px;\r\n        width: 12px;\r\n        float: right;\r\n        margin: 14px 180px 14px 0;\r\n        cursor: pointer;\r\n    }\r\n    .notice-close-wrapper img {\r\n        width: 100%;\r\n        height: 100%;\r\n        float: left;\r\n        vertical-align: middle;\r\n        border: 0;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = {
	    data: function data() {
	        return {
	            topSize: 50,
	            notice_text: '',
	            skip_link: '',
	            button_text: '',
	            is_show: false
	        };
	    },
	    created: function created() {
	        var that = this;
	        _eventbus2.default.$on('is_show_notice_prompt', function (obj) {
	            that.is_show = true;
	            that.notice_text = obj.text;
	            that.skip_link = obj.url;
	            that.button_text = obj.button;
	        });
	        window.addEventListener('scroll', this.onScroll);
	    },
	    methods: {
	        closeNotice: function closeNotice() {
	            this.is_show = false;
	        },
	        onScroll: function onScroll() {
	            var scrollTop = document.body.scrollTop;
	            if (scrollTop <= 50) {
	                this.topSize = 50 - scrollTop;
	            } else {
	                this.topSize = 0;
	            }
	        }
	    }
	    // </script>
	    //
	    // <style>
	    //     .notice-prompt {
	    //         background-color: #629eff;
	    //         width: 100%;
	    //         height: 40px;
	    //         position: fixed;
	    //         top: 50px;
	    //         left: 160px;
	    //         right: 0;
	    //     }
	    //     .notice-prompt-word {
	    //         width: 80%;
	    //         height: 40px;
	    //         line-height: 40px;
	    //         float: left;
	    //         margin-left: 20px;
	    //         font-size: 14px;
	    //         color: #fff;
	    //         text-overflow: ellipsis;
	    //         overflow: hidden;
	    //         white-space: nowrap;
	    //     }
	    //     .notice-prompt-word a {
	    //         color: #629eff;
	    //         background: #fff;
	    //         display: inline-block;
	    //         height: 28px;
	    //         line-height: 28px;
	    //         border-radius: 2px;
	    //         padding: 0 5px;
	    //         margin: 0 10px;
	    //         font-size: 12px;
	    //         text-decoration: none!important;
	    //         cursor: pointer!important;
	    //     }
	    //     .notice-close-wrapper {
	    //         background-color: #629eff;
	    //         height: 12px;
	    //         width: 12px;
	    //         float: right;
	    //         margin: 14px 180px 14px 0;
	    //         cursor: pointer;
	    //     }
	    //     .notice-close-wrapper img {
	    //         width: 100%;
	    //         height: 100%;
	    //         float: left;
	    //         vertical-align: middle;
	    //         border: 0;
	    //     }
	    // </style>

	}; // <template>
	//     <div class="notice-prompt" v-show="is_show" :style="{ top: topSize + 'px' }">
	//         <div class="notice-prompt-word">
	//             {{notice_text}}<a :href="skip_link">{{button_text}}</a>
	//         </div>
	//         <div class="notice-close-wrapper" @click="closeNotice">
	//             <img src="/images/icon_pop_up_close.svg"/>
	//         </div>
	//     </div>
	// </template>
	//
	// <script>

/***/ }),
/* 174 */
/***/ (function(module, exports) {

	module.exports = "\r\n    <div class=\"notice-prompt\" v-show=\"is_show\" :style=\"{ top: topSize + 'px' }\">\r\n        <div class=\"notice-prompt-word\">\r\n            {{notice_text}}<a :href=\"skip_link\">{{button_text}}</a>\r\n        </div>\r\n        <div class=\"notice-close-wrapper\" @click=\"closeNotice\">\r\n            <img src=\"/images/icon_pop_up_close.svg\"/>\r\n        </div>\r\n    </div>\r\n";

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__webpack_require__(176)
	__vue_script__ = __webpack_require__(178)
	__vue_template__ = __webpack_require__(179)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) { (typeof module.exports === "function" ? module.exports.options : module.exports).template = __vue_template__ }
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), true)
	  if (!hotAPI.compatible) return
	  var id = "E:\\software\\phpstudy\\WWW\\wechat_app_admin\\public\\vue\\shopDiy\\components\\set_index_name.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(177);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(7)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2d01c464&file=set_index_name.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./set_index_name.vue", function() {
				var newContent = require("!!../../../../node_modules/css-loader/index.js!../../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-2d01c464&file=set_index_name.vue!../../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./set_index_name.vue");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(6)();
	// imports


	// module
	exports.push([module.id, "\r\n    .set_table{\r\n        text-align: left;\r\n    }\r\n    #set_index_name{\r\n        border:1px solid #eee;\r\n        padding:20px;\r\n        width:570px;\r\n        position: absolute;\r\n        left: 0px;\r\n        top: 0px;\r\n        z-index: 0;\r\n        background: #fafbfc;\r\n        border-radius: 3px;\r\n    }\r\n    .set_table tr td.title{\r\n        width:110px;\r\n        font-size:14px;\r\n        color:#353535;\r\n        line-height:50px;\r\n    }\r\n    .set_table tr td.cont{\r\n        width:410px;\r\n    }\r\n    .set_table tr td.cont input{\r\n        width:100%;\r\n        border:1px solid #eee;\r\n        line-height:36px;\r\n        text-indent:10px;\r\n        margin:7px 0;\r\n    }\r\n    .share_img_tip{\r\n        color: #b2b2b2;\r\n        font-size:14px;\r\n        line-height:24px;\r\n    }\r\n    .select_img_btn{\r\n        width: 100px;\r\n        height: 36px;\r\n        border-radius: 2px;\r\n        background-color: #fafbfc;\r\n        border: solid 1px #e5e7eb;\r\n        font-size: 14px;\r\n        text-align: center;\r\n        color: #353535;\r\n        display: block;\r\n        position: relative;\r\n        line-height:36px;\r\n        float: left;\r\n\r\n    }\r\n    .select_img_btn input{\r\n        position: absolute;\r\n        width:100%;\r\n        height:100%;\r\n        top:0;\r\n        left:0;\r\n        opacity:0;\r\n        cursor: pointer;\r\n    }\r\n    .share_img_box .share_img{\r\n        width:120px;\r\n        height:120px;\r\n        float: left;\r\n        margin-right:10px;\r\n        position: relative;\r\n    }\r\n    .share_img_box{\r\n        padding-top:20px;\r\n    }\r\n    .share_img img{\r\n        width:120px;\r\n        height:120px;\r\n    }\r\n    .share_img input{\r\n        position: absolute;\r\n        opacity:0;\r\n        width:100%;\r\n        height:100%;\r\n        top:0;\r\n        left:0;\r\n        cursor: pointer;\r\n    }\r\n", ""]);

	// exports


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _network = __webpack_require__(9);

	var _network2 = _interopRequireDefault(_network);

	var _eventbus = __webpack_require__(11);

	var _eventbus2 = _interopRequireDefault(_eventbus);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// <style>
	//     .set_table{
	//         text-align: left;
	//     }
	//     #set_index_name{
	//         border:1px solid #eee;
	//         padding:20px;
	//         width:570px;
	//         position: absolute;
	//         left: 0px;
	//         top: 0px;
	//         z-index: 0;
	//         background: #fafbfc;
	//         -webkit-border-radius: 3px;
	//         -moz-border-radius: 3px;
	//         border-radius: 3px;
	//     }
	//     .set_table tr td.title{
	//         width:110px;
	//         font-size:14px;
	//         color:#353535;
	//         line-height:50px;
	//     }
	//     .set_table tr td.cont{
	//         width:410px;
	//     }
	//     .set_table tr td.cont input{
	//         width:100%;
	//         border:1px solid #eee;
	//         line-height:36px;
	//         text-indent:10px;
	//         margin:7px 0;
	//     }
	//     .share_img_tip{
	//         color: #b2b2b2;
	//         font-size:14px;
	//         line-height:24px;
	//     }
	//     .select_img_btn{
	//         width: 100px;
	//         height: 36px;
	//         border-radius: 2px;
	//         background-color: #fafbfc;
	//         border: solid 1px #e5e7eb;
	//         font-size: 14px;
	//         text-align: center;
	//         color: #353535;
	//         display: block;
	//         position: relative;
	//         line-height:36px;
	//         float: left;
	//
	//     }
	//     .select_img_btn input{
	//         position: absolute;
	//         width:100%;
	//         height:100%;
	//         top:0;
	//         left:0;
	//         opacity:0;
	//         cursor: pointer;
	//     }
	//     .share_img_box .share_img{
	//         width:120px;
	//         height:120px;
	//         float: left;
	//         margin-right:10px;
	//         position: relative;
	//     }
	//     .share_img_box{
	//         padding-top:20px;
	//     }
	//     .share_img img{
	//         width:120px;
	//         height:120px;
	//     }
	//     .share_img input{
	//         position: absolute;
	//         opacity:0;
	//         width:100%;
	//         height:100%;
	//         top:0;
	//         left:0;
	//         cursor: pointer;
	//     }
	// </style>
	//
	// <template>
	//
	//     <div id="set_index_name" v-if="set_index_flag">
	//         <table class="set_table">
	//             <tr>
	//                 <td class="title">首页名称</td>
	//                 <td class="cont">
	//                     <input v-if="version_type>1" placeholder="请输入首页名称" type="text" class="testclass" id="set_name" :value="current_name" @keyup="setName()">
	//                     <input v-else="" placeholder="请输入首页名称" disabled type="text" class="testclass" id="set_name" :value="current_name">
	//                 </td>
	//             </tr>
	//             <tr>
	//                 <td class="title">页面分享标题</td>
	//                 <td class="cont"><input placeholder="用户通过微信分享时，会自动显示分享标题" type="text" class="testclass" id="share_title" :value="share_info.wx_share_title" @change="setName()">
	//                 </td>
	//             </tr>
	//             <tr>
	//                 <td class="title">页面分享描述</td>
	//                 <td class="cont"><input placeholder="用户通过微信分享时，会自动显示分享描述" type="text" class="testclass" id="share_content" :value="share_info.wx_share_content" @change="setName()">
	//                 </td>
	//             </tr>
	//             <tr class="share_img_con">
	//                 <td class="title">页面分享配图</td>
	//                 <td class="share_img_box">
	//                     <div class="share_img">
	//                         <img :src="wx_img_url" alt="">
	//                         <input type="file" class="select_img" accept="image/jpeg,image/png,image/gif,image/bmp"  @change="uploadImage" >
	//                     </div>
	//
	//                     <p class="share_img_tip">图片格式为：bmp,jpeg,jpg,gif,尺寸1:1，不可大于2M</p>
	//
	//                     <div class="select_img_btn">
	//                         选择图片
	//                         <input type="file" class="select_img" accept="image/jpeg,image/png,image/gif,image/bmp"  @change="uploadImage" >
	//                     </div>
	//                 </td>
	//             </tr>
	//
	//
	//         </table>
	//
	//         <div>
	//
	//         </div>
	//     </div>
	//
	// </template>
	//
	// <script>
	exports.default = {
	    props: ['current_name', 'share_info', 'set_index_flag', 'version_type'],
	    data: function data() {
	        return {
	            c_index_name: '',
	            c_share_info: {},
	            file: null,
	            wx_img_url: ''
	        };
	    },
	    created: function created() {},
	    watch: {
	        share_info: {
	            handler: function handler(cur, old) {
	                this.wx_img_url = this.share_info.wx_share_image_compressed || this.share_info.wx_share_image;
	            },

	            deep: true
	        }
	    },

	    methods: {
	        setName: function setName() {
	            var name = document.getElementById('set_name').value;
	            var share_title = document.getElementById('share_title').value;
	            var share_content = document.getElementById('share_content').value;
	            var index_info = {
	                index_title: name,
	                wx_share_title: share_title,
	                wx_share_content: share_content,
	                wx_share_image: this.wx_img_url
	            };
	            _eventbus2.default.$emit('watch_index_info', index_info);
	        },
	        //上传图片
	        uploadImage: function uploadImage(e) {
	            var targetDom = e.target;
	            var that = this;
	            if (targetDom.files && targetDom.files.length) {
	                var file = targetDom.files[0];
	                var limitSize = 2;

	                var imgName = file.name;
	                //alert(imgName);
	                var ext, idx;
	                idx = imgName.lastIndexOf(".");
	                if (idx != -1) {
	                    ext = imgName.substr(idx + 1).toUpperCase();
	                    ext = ext.toLowerCase();
	                    //alert(file);
	                    //alert("后缀="+ext+"位置="+idx+"路径="+resourceLocalUrl);
	                    if (ext != 'jpg' && ext != 'png' && ext != 'jpeg' && ext != 'gif') {
	                        //document.all.submit_upload.disabled=true;
	                        baseUtils.show.blueTip("请上传图片类型的文件哦~");
	                        //alert("2.只能上传.jpg  .png  .jpeg  .gif类型的文件!");
	                        return;
	                    }
	                } else {
	                    document.all.submit_upload.disabled = true;
	                    baseUtils.show.blueTip("请上传图片类型的文件哦~");
	                    //alert("只能上传.jpg  .png  .jpeg  .gif类型的文件!");
	                    return;
	                }

	                if (that.checkFileSize(file, limitSize)) {
	                    this.file = file;
	                    $uploadFile.uploadPic(file,
	                    // 成功回调
	                    function (data) {
	                        //                            console.log(data.data.access_url)
	                        var img_url = data.data.access_url;
	                        that.wx_img_url = img_url;
	                        that.setName();
	                    }, function (data) {
	                        alert("上传失败!");
	                    });
	                } else {
	                    alert("上传图片大小限制为" + limitSize + "MB");
	                }
	            }
	        },
	        //检查图片大小
	        checkFileSize: function checkFileSize(file, limitSize) {
	            var fileSize = (file.size / (1024 * 1024)).toFixed(3);
	            if (fileSize > limitSize) {
	                return false;
	            }
	            return true;
	        },
	        //清除图片
	        clearFile: function clearFile() {
	            document.getElementsByClassName('select_img')[0].value = '';
	            document.getElementsByClassName('select_img')[1].value = '';
	            this.file = null;
	        }
	    }

	    // </script>

	};

/***/ }),
/* 179 */
/***/ (function(module, exports) {

	module.exports = "\r\n\r\n    <div id=\"set_index_name\" v-if=\"set_index_flag\">\r\n        <table class=\"set_table\">\r\n            <tr>\r\n                <td class=\"title\">首页名称</td>\r\n                <td class=\"cont\">\r\n                    <input v-if=\"version_type>1\" placeholder=\"请输入首页名称\" type=\"text\" class=\"testclass\" id=\"set_name\" :value=\"current_name\" @keyup=\"setName()\">\r\n                    <input v-else=\"\" placeholder=\"请输入首页名称\" disabled type=\"text\" class=\"testclass\" id=\"set_name\" :value=\"current_name\">\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"title\">页面分享标题</td>\r\n                <td class=\"cont\"><input placeholder=\"用户通过微信分享时，会自动显示分享标题\" type=\"text\" class=\"testclass\" id=\"share_title\" :value=\"share_info.wx_share_title\" @change=\"setName()\">\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"title\">页面分享描述</td>\r\n                <td class=\"cont\"><input placeholder=\"用户通过微信分享时，会自动显示分享描述\" type=\"text\" class=\"testclass\" id=\"share_content\" :value=\"share_info.wx_share_content\" @change=\"setName()\">\r\n                </td>\r\n            </tr>\r\n            <tr class=\"share_img_con\">\r\n                <td class=\"title\">页面分享配图</td>\r\n                <td class=\"share_img_box\">\r\n                    <div class=\"share_img\">\r\n                        <img :src=\"wx_img_url\" alt=\"\">\r\n                        <input type=\"file\" class=\"select_img\" accept=\"image/jpeg,image/png,image/gif,image/bmp\"  @change=\"uploadImage\" >\r\n                    </div>\r\n\r\n                    <p class=\"share_img_tip\">图片格式为：bmp,jpeg,jpg,gif,尺寸1:1，不可大于2M</p>\r\n\r\n                    <div class=\"select_img_btn\">\r\n                        选择图片\r\n                        <input type=\"file\" class=\"select_img\" accept=\"image/jpeg,image/png,image/gif,image/bmp\"  @change=\"uploadImage\" >\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n\r\n\r\n        </table>\r\n\r\n        <div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n";

/***/ }),
/* 180 */
/***/ (function(module, exports) {

	module.exports = "\n    <div class=\"app-design\">\n        <!--左边的拖拽预览及增加模块部分-->\n        <div class=\"app-preview\" v-show=\"!is_show_loading\">\n            <index_part_drag\n                    :index_sort=\"index_sort\"\n                    :index_data=\"index_data\"\n                    :add_module_part=\"add_module_part\"\n                    :index_local_data=\"index_local_data\"\n                    :index_data_id=\"index_data_id\"\n                    :version_type=\"version_type\"\n                    :index_name=\"index_name\"\n            ></index_part_drag>\n        </div>\n\n        <!--模块编辑部分-->\n        <div class=\"app-sidebar\">\n            <!--修改名称-->\n            <set_index_name :current_name = \"index_name\" :share_info = \"share_info\" :set_index_flag=\"set_index_flag\" :version_type=\"version_type\"></set_index_name>\n            <sidebar_part></sidebar_part>\n        </div>\n        <!--保存模块部分-->\n        <save_bar :index_name=\"index_name\" :share_info = \"share_info\" :submit_data=\"submit_data\" v-show=\"!is_show_loading\"></save_bar>\n        <!--浮层选择数据搜索-->\n        <choose_box></choose_box>\n        <!--全局loading-->\n        <loading v-show=\"is_show_loading\"></loading>\n        <!--提交时全局loading-->\n        <div class=\"show-submit-loading\" v-show=\"is_show_submit_loading\">\n            <loading></loading>\n        </div>\n        <!--全局提示框-->\n        <top_prompt></top_prompt>\n        <notice_prompt></notice_prompt>\n    </div>\n";

/***/ })
/******/ ]);